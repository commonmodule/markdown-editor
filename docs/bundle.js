/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "../app-components/lib/AppCompConfig.js":
/*!**********************************************!*\
  !*** ../app-components/lib/AppCompConfig.js ***!
  \**********************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass DefaultCloseIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.close\", \"❌\");\n    }\n}\nclass DefaultLoadingSpinner extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\".loading-spinner\");\n    }\n}\nclass DefaultSuccessIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.success\", \"✅\");\n    }\n}\nclass DefaultInfoIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.info\", \"ℹ️\");\n    }\n}\nclass DefaultWarningIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.warning\", \"⚠️\");\n    }\n}\nclass DefaultErrorIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.error\", \"❌\");\n    }\n}\nclass DefaultAccordionOpenIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.accordion-open\", \"▼\");\n    }\n}\nclass DefaultAccordionCloseIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.accordion-close\", \"▲\");\n    }\n}\nclass DefaultFolderCollapsedIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.folder-collapse\", \"📁\");\n    }\n}\nclass DefaultFolderExpandedIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.folder-expand\", \"📂\");\n    }\n}\nclass DefaultMinusIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.minus\", \"-\");\n    }\n}\nclass DefaultPlusIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.plus\", \"+\");\n    }\n}\nclass AppCompConfig {\n    LoadingSpinner = DefaultLoadingSpinner;\n    CloseIcon = DefaultCloseIcon;\n    SuccessIcon = DefaultSuccessIcon;\n    InfoIcon = DefaultInfoIcon;\n    WarningIcon = DefaultWarningIcon;\n    ErrorIcon = DefaultErrorIcon;\n    AccordionOpenIcon = DefaultAccordionOpenIcon;\n    AccordionCloseIcon = DefaultAccordionCloseIcon;\n    FolderCollapsedIcon = DefaultFolderCollapsedIcon;\n    FolderExpandedIcon = DefaultFolderExpandedIcon;\n    MinusIcon = DefaultMinusIcon;\n    PlusIcon = DefaultPlusIcon;\n    updateTabBackgroundOnSelect = () => { };\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new AppCompConfig());\n//# sourceMappingURL=AppCompConfig.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/AppCompConfig.js?");

/***/ }),

/***/ "../app-components/lib/DefaultAvatar.js":
/*!**********************************************!*\
  !*** ../app-components/lib/DefaultAvatar.js ***!
  \**********************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DefaultAvatar)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst ELEMENTS = 3;\nconst SIZE = 80;\nfunction hashCode(name) {\n    var hash = 0;\n    for (var i = 0; i < name.length; i++) {\n        var character = name.charCodeAt(i);\n        hash = ((hash << 5) - hash) + character;\n        hash = hash & hash;\n    }\n    return Math.abs(hash);\n}\nfunction getRandomColor(number, colors, range) {\n    return colors[number % range];\n}\nfunction getDigit(number, ntn) {\n    return Math.floor((number / Math.pow(10, ntn)) % 10);\n}\nfunction getUnit(number, range, index) {\n    let value = number % range;\n    if (index && ((getDigit(number, index) % 2) === 0)) {\n        return -value;\n    }\n    else\n        return value;\n}\nfunction generateColors(numFromName, colors) {\n    const range = colors && colors.length;\n    const elementsProperties = Array.from({ length: ELEMENTS }, (_, i) => ({\n        color: getRandomColor(numFromName + i, colors, range),\n        translateX: getUnit(numFromName * (i + 1), SIZE / 10, 1),\n        translateY: getUnit(numFromName * (i + 1), SIZE / 10, 2),\n        scale: 1.2 + getUnit(numFromName * (i + 1), SIZE / 20) / 10,\n        rotate: getUnit(numFromName * (i + 1), 360, 1),\n    }));\n    return elementsProperties;\n}\nclass DefaultAvatar extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor(classNames, name) {\n        super(`.default-avatar${classNames}`);\n        const numFromName = hashCode(name);\n        const properties = generateColors(numFromName, [\n            \"#92A1C6\",\n            \"#146A7C\",\n            \"#F0AB3D\",\n            \"#ADD8E6\",\n            \"#FF6347\",\n        ]);\n        const maskId = `mask_${numFromName}`;\n        this.htmlElement.innerHTML =\n            `<svg viewBox=\"0 0 ${SIZE} ${SIZE}\" fill=\"none\" role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\">\n  <mask id=\"${maskId}\" maskUnits=\"userSpaceOnUse\" x=\"0\" y=\"0\" width=\"${SIZE}\" height=\"${SIZE}\">\n    <rect width=\"${SIZE}\" height=\"${SIZE}\" fill=\"#FFFFFF\" rx=\"${SIZE * 2}\"></rect>\n  </mask>\n  <g mask=\"url(#${maskId})\">\n    <rect width=\"${SIZE}\" height=\"${SIZE}\" fill=\"${properties[0].color}\"></rect>\n    <path filter=\"url(#filter_${maskId})\" d=\"M32.414 59.35L50.376 70.5H72.5v-71H33.728L26.5 13.381l19.057 27.08L32.414 59.35z\" fill=\"${properties[1].color}\" transform=\"${\"translate(\" +\n                properties[1].translateX +\n                \" \" +\n                properties[1].translateY +\n                \") rotate(\" +\n                properties[1].rotate +\n                \" \" +\n                SIZE / 2 +\n                \" \" +\n                SIZE / 2 +\n                \") scale(\" +\n                properties[2].scale +\n                \")\"}\"></path>\n    <path filter=\"url(#filter_${maskId})\" d=\"M22.216 24L0 46.75l14.108 38.129L78 86l-3.081-59.276-22.378 4.005 12.972 20.186-23.35 27.395L22.215 24z\" fill=\"${properties[2].color}\" transform=\"${\"translate(\" +\n                properties[2].translateX +\n                \" \" +\n                properties[2].translateY +\n                \") rotate(\" +\n                properties[2].rotate +\n                \" \" +\n                SIZE / 2 +\n                \" \" +\n                SIZE / 2 +\n                \") scale(\" +\n                properties[2].scale +\n                \")\"}\" style=\"mix-blend-mode: overlay;\"></path>\n  </g>\n  <defs>\n    <filter id=\"filter_${maskId}\" filterUnits=\"userSpaceOnUse\" color-interpolation-filters=\"sRGB\">\n      <feFlood flood-opacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\n      <feBlend in=\"SourceGraphic\" in2=\"BackgroundImageFix\" result=\"shape\"></feBlend>\n      <feGaussianBlur stdDeviation=\"7\" result=\"effect1_foregroundBlur\"></feGaussianBlur>\n    </filter>\n  </defs>\n</svg>`;\n    }\n}\n//# sourceMappingURL=DefaultAvatar.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/DefaultAvatar.js?");

/***/ }),

/***/ "../app-components/lib/Snackbar.js":
/*!*****************************************!*\
  !*** ../app-components/lib/Snackbar.js ***!
  \*****************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Snackbar)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AppCompConfig.js */ \"../app-components/lib/AppCompConfig.js\");\n/* harmony import */ var _button_Button_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./button/Button.js */ \"../app-components/lib/button/Button.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__, _button_Button_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__, _button_Button_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass Snackbar extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    timeoutId;\n    totalDuration;\n    startTime = 0;\n    remainingTime;\n    constructor(options) {\n        super(\".snackbar\");\n        this.totalDuration = options.duration ?? 5000;\n        this.remainingTime = this.totalDuration;\n        this.createSnackbarContent(options.message);\n        this.addEventListeners();\n        _common_module_app__WEBPACK_IMPORTED_MODULE_0__.BodyNode.append(this);\n        this.startDismissTimer();\n    }\n    createSnackbarContent(message) {\n        this.append((0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"p\", message), (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".button-container\", new _button_Button_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](\".close\", {\n            type: _button_Button_js__WEBPACK_IMPORTED_MODULE_2__.ButtonType.Icon,\n            icon: new _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].CloseIcon(),\n            onClick: () => this.remove(),\n        })));\n    }\n    addEventListeners() {\n        this.onDom(\"mouseover\", this.pauseDismissTimer);\n        this.onDom(\"mouseout\", this.resumeDismissTimer);\n    }\n    startDismissTimer() {\n        this.startTime = Date.now();\n        this.timeoutId = window.setTimeout(() => this.remove(), this.remainingTime);\n    }\n    pauseDismissTimer = () => {\n        if (this.timeoutId !== undefined) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = undefined;\n            const elapsedTime = Date.now() - this.startTime;\n            this.remainingTime -= elapsedTime;\n            if (this.remainingTime <= 0) {\n                this.remove();\n            }\n        }\n    };\n    resumeDismissTimer = () => {\n        if (this.timeoutId === undefined && this.remainingTime > 0) {\n            this.startDismissTimer();\n        }\n    };\n    remove() {\n        if (this.timeoutId !== undefined) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = undefined;\n        }\n        super.remove();\n    }\n}\n//# sourceMappingURL=Snackbar.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/Snackbar.js?");

/***/ }),

/***/ "../app-components/lib/SvgIcon.js":
/*!****************************************!*\
  !*** ../app-components/lib/SvgIcon.js ***!
  \****************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SvgIcon)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass SvgIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor(classNamesOrViewBox, viewBoxOrPath, path) {\n        let classNames = \"\";\n        let viewBox;\n        let svgPath;\n        if (typeof path === \"string\") {\n            classNames = classNamesOrViewBox;\n            viewBox = viewBoxOrPath;\n            svgPath = path;\n        }\n        else {\n            viewBox = classNamesOrViewBox;\n            svgPath = viewBoxOrPath;\n        }\n        super(`.icon.svg${classNames}`);\n        const svg = `<svg fill=\"currentColor\" width=\"100%\" height=\"100%\" viewBox=\"${viewBox}\" xmlns=\"http://www.w3.org/2000/svg\">${svgPath}</svg>`;\n        this.htmlElement.innerHTML = svg;\n    }\n}\n//# sourceMappingURL=SvgIcon.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/SvgIcon.js?");

/***/ }),

/***/ "../app-components/lib/accordion/Accordion.js":
/*!****************************************************!*\
  !*** ../app-components/lib/accordion/Accordion.js ***!
  \****************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Accordion)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass Accordion extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor(...children) {\n        super(\".accordion\", ...children);\n    }\n}\n//# sourceMappingURL=Accordion.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/accordion/Accordion.js?");

/***/ }),

/***/ "../app-components/lib/accordion/AccordionItem.js":
/*!********************************************************!*\
  !*** ../app-components/lib/accordion/AccordionItem.js ***!
  \********************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AccordionItem)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../AppCompConfig.js */ \"../app-components/lib/AppCompConfig.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nclass AccordionItem extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    iconContainer;\n    constructor(options, ...children) {\n        super(\"details.accordion-item\");\n        this.append((0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"summary\", options.label, this.iconContainer = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".icon-container\")), (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".content\", ...children));\n        this.onDom(\"toggle\", () => {\n            this.iconContainer.clear().append(this.htmlElement.open\n                ? new _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].AccordionCloseIcon()\n                : new _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].AccordionOpenIcon());\n        });\n        if (options.open)\n            this.htmlElement.open = true;\n    }\n}\n//# sourceMappingURL=AccordionItem.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/accordion/AccordionItem.js?");

/***/ }),

/***/ "../app-components/lib/alerts/Alert.js":
/*!*********************************************!*\
  !*** ../app-components/lib/alerts/Alert.js ***!
  \*********************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Alert)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass Alert extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor(classNames, options) {\n        super(`.alert${classNames}`);\n        this.append((0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".icon-container\", options.icon), (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"p.message\", options.message));\n    }\n}\n//# sourceMappingURL=Alert.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/alerts/Alert.js?");

/***/ }),

/***/ "../app-components/lib/alerts/InfoAlert.js":
/*!*************************************************!*\
  !*** ../app-components/lib/alerts/InfoAlert.js ***!
  \*************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InfoAlert)\n/* harmony export */ });\n/* harmony import */ var _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AppCompConfig.js */ \"../app-components/lib/AppCompConfig.js\");\n/* harmony import */ var _Alert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Alert.js */ \"../app-components/lib/alerts/Alert.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_AppCompConfig_js__WEBPACK_IMPORTED_MODULE_0__, _Alert_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_AppCompConfig_js__WEBPACK_IMPORTED_MODULE_0__, _Alert_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nclass InfoAlert extends _Alert_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(message) {\n        super(\".info\", {\n            icon: new _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].InfoIcon(),\n            message,\n        });\n    }\n}\n//# sourceMappingURL=InfoAlert.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/alerts/InfoAlert.js?");

/***/ }),

/***/ "../app-components/lib/alerts/WarningAlert.js":
/*!****************************************************!*\
  !*** ../app-components/lib/alerts/WarningAlert.js ***!
  \****************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WarningAlert)\n/* harmony export */ });\n/* harmony import */ var _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AppCompConfig.js */ \"../app-components/lib/AppCompConfig.js\");\n/* harmony import */ var _Alert_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Alert.js */ \"../app-components/lib/alerts/Alert.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_AppCompConfig_js__WEBPACK_IMPORTED_MODULE_0__, _Alert_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_AppCompConfig_js__WEBPACK_IMPORTED_MODULE_0__, _Alert_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nclass WarningAlert extends _Alert_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(message) {\n        super(\".warning\", {\n            icon: new _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].WarningIcon(),\n            message,\n        });\n    }\n}\n//# sourceMappingURL=WarningAlert.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/alerts/WarningAlert.js?");

/***/ }),

/***/ "../app-components/lib/button/Button.js":
/*!**********************************************!*\
  !*** ../app-components/lib/button/Button.js ***!
  \**********************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ButtonType: () => (/* binding */ ButtonType),\n/* harmony export */   \"default\": () => (/* binding */ Button)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../AppCompConfig.js */ \"../app-components/lib/AppCompConfig.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nvar ButtonType;\n(function (ButtonType) {\n    ButtonType[\"Text\"] = \"text\";\n    ButtonType[\"Contained\"] = \"contained\";\n    ButtonType[\"Outlined\"] = \"outlined\";\n    ButtonType[\"Icon\"] = \"icon\";\n})(ButtonType || (ButtonType = {}));\nclass Button extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    options;\n    iconContainer;\n    titleContainer;\n    loadingSpinner;\n    loading = false;\n    constructor(classNamesOrOptions, optionsOrUndefined) {\n        let classNames = \"\";\n        let options;\n        if (typeof classNamesOrOptions === \"string\") {\n            classNames = classNamesOrOptions;\n            options = optionsOrUndefined ?? {};\n        }\n        else {\n            options = classNamesOrOptions;\n        }\n        const type = options.type ?? ButtonType.Text;\n        super(`button${classNames}.${type}`);\n        this.options = options;\n        if (options.iconPosition === \"right\") {\n            this.append(this.titleContainer = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".title\", ...(Array.isArray(options.title) ? options.title : [options.title])), options.icon\n                ? this.iconContainer = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".right-icon-container\", options.icon.clone())\n                : undefined);\n        }\n        else {\n            this.append(options.icon\n                ? this.iconContainer = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".icon-container\", options.icon.clone())\n                : undefined, this.titleContainer = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".title\", ...(Array.isArray(options.title) ? options.title : [options.title])));\n        }\n        this.onDom(\"click\", (event) => {\n            if (!this.loading) {\n                if (options.onClick) {\n                    const promise = options.onClick(this, event);\n                    if (promise instanceof Promise) {\n                        this.startLoading();\n                        promise.finally(() => this.stopLoading());\n                    }\n                }\n                if (this.hasEvent(\"click\")) {\n                    const promise = this.emit(\"click\");\n                    if (promise instanceof Promise) {\n                        this.startLoading();\n                        promise.finally(() => this.stopLoading());\n                    }\n                }\n            }\n        });\n        if (options.disabled)\n            this.disable();\n    }\n    set title(title) {\n        this.titleContainer.clear().append(...(Array.isArray(title) ? title : [title]));\n    }\n    get title() {\n        return this.titleContainer.text;\n    }\n    disable() {\n        this.htmlElement.setAttribute(\"disabled\", \"disabled\");\n        this.addClass(\"disabled\");\n        return this;\n    }\n    enable() {\n        this.htmlElement.removeAttribute(\"disabled\");\n        this.removeClass(\"disabled\");\n        return this;\n    }\n    startLoading() {\n        if (!this.loading) {\n            this.loading = true;\n            this.addClass(\"loading\");\n            if (!this.removed) {\n                if (this.iconContainer) {\n                    this.iconContainer.clear().append(new _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].LoadingSpinner());\n                }\n                else {\n                    this.prepend(this.loadingSpinner = new _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].LoadingSpinner());\n                }\n            }\n        }\n        return this;\n    }\n    stopLoading() {\n        if (this.loading) {\n            this.loading = false;\n            this.removeClass(\"loading\");\n            if (!this.removed) {\n                if (this.iconContainer) {\n                    this.iconContainer.clear().append(this.options.icon?.clone());\n                }\n                else if (this.loadingSpinner) {\n                    this.loadingSpinner.remove();\n                    this.loadingSpinner = undefined;\n                }\n            }\n        }\n        return this;\n    }\n}\n//# sourceMappingURL=Button.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/button/Button.js?");

/***/ }),

/***/ "../app-components/lib/button/ButtonGroup.js":
/*!***************************************************!*\
  !*** ../app-components/lib/button/ButtonGroup.js ***!
  \***************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ButtonGroup)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass ButtonGroup extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor(...buttons) {\n        super(\".button-group\", ...buttons);\n    }\n}\n//# sourceMappingURL=ButtonGroup.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/button/ButtonGroup.js?");

/***/ }),

/***/ "../app-components/lib/dialogs/AlertDialog.js":
/*!****************************************************!*\
  !*** ../app-components/lib/dialogs/AlertDialog.js ***!
  \****************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AlertDialog)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _button_Button_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../button/Button.js */ \"../app-components/lib/button/Button.js\");\n/* harmony import */ var _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modal/StructuredModal.js */ \"../app-components/lib/modal/StructuredModal.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _button_Button_js__WEBPACK_IMPORTED_MODULE_1__, _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _button_Button_js__WEBPACK_IMPORTED_MODULE_1__, _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass AlertDialog extends _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n    constructor(classNamesOrOptions, optionsOrUndefined) {\n        let classNames = \"\";\n        let options;\n        if (typeof classNamesOrOptions === \"string\") {\n            classNames = classNamesOrOptions;\n            if (optionsOrUndefined === undefined) {\n                throw new Error(\"Expected options to be provided\");\n            }\n            options = optionsOrUndefined;\n        }\n        else {\n            options = classNamesOrOptions;\n        }\n        super(`.alert-dialog${classNames}`);\n        this\n            .appendToHeader((0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"h1\", options.icon, options.title))\n            .appendToMain((0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"p\", ...(Array.isArray(options.message)\n            ? options.message\n            : [options.message])))\n            .appendToFooter(new _button_Button_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\".confirm\", {\n            title: options.confirmButtonTitle ?? \"OK\",\n            onClick: async () => {\n                if (options.onConfirm)\n                    await options.onConfirm();\n                this.remove();\n            },\n        }));\n    }\n}\n//# sourceMappingURL=AlertDialog.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/dialogs/AlertDialog.js?");

/***/ }),

/***/ "../app-components/lib/dialogs/ConfirmDialog.js":
/*!******************************************************!*\
  !*** ../app-components/lib/dialogs/ConfirmDialog.js ***!
  \******************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ConfirmDialog)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _button_Button_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../button/Button.js */ \"../app-components/lib/button/Button.js\");\n/* harmony import */ var _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modal/StructuredModal.js */ \"../app-components/lib/modal/StructuredModal.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _button_Button_js__WEBPACK_IMPORTED_MODULE_1__, _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _button_Button_js__WEBPACK_IMPORTED_MODULE_1__, _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass ConfirmDialog extends _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"] {\n    resolveConfirm;\n    rejectConfirm;\n    constructor(classNamesOrOptions, optionsOrUndefined) {\n        let classNames = \"\";\n        let options;\n        if (typeof classNamesOrOptions === \"string\") {\n            classNames = classNamesOrOptions;\n            if (optionsOrUndefined === undefined) {\n                throw new Error(\"DropdownMenuOptions is required\");\n            }\n            options = optionsOrUndefined;\n        }\n        else {\n            options = classNamesOrOptions;\n        }\n        super(`.confirm-dialog${classNames}`);\n        this\n            .on(\"remove\", () => this.rejectConfirm?.(new Error(\"Canceled by user\")))\n            .appendToHeader((0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"h1\", options.icon, options.title))\n            .appendToMain(...(typeof options.message === \"string\"\n            ? [(0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"p\", options.message)]\n            : options.message))\n            .appendToFooter(new _button_Button_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\".cancel\", {\n            title: \"Cancel\",\n            onClick: () => this.remove(),\n        }), new _button_Button_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\".confirm\", {\n            type: _button_Button_js__WEBPACK_IMPORTED_MODULE_1__.ButtonType.Contained,\n            title: options.confirmButtonTitle ?? \"Confirm\",\n            onClick: async () => {\n                if (options.onConfirm)\n                    await options.onConfirm();\n                this.resolveConfirm?.();\n                this.rejectConfirm = undefined;\n                this.remove();\n            },\n        }));\n    }\n    async waitForConfirmation() {\n        return new Promise((resolve, reject) => {\n            this.resolveConfirm = resolve;\n            this.rejectConfirm = reject;\n        });\n    }\n}\n//# sourceMappingURL=ConfirmDialog.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/dialogs/ConfirmDialog.js?");

/***/ }),

/***/ "../app-components/lib/dialogs/ErrorDialog.js":
/*!****************************************************!*\
  !*** ../app-components/lib/dialogs/ErrorDialog.js ***!
  \****************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ErrorDialog)\n/* harmony export */ });\n/* harmony import */ var _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AppCompConfig.js */ \"../app-components/lib/AppCompConfig.js\");\n/* harmony import */ var _AlertDialog_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AlertDialog.js */ \"../app-components/lib/dialogs/AlertDialog.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_AppCompConfig_js__WEBPACK_IMPORTED_MODULE_0__, _AlertDialog_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_AppCompConfig_js__WEBPACK_IMPORTED_MODULE_0__, _AlertDialog_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nclass ErrorDialog extends _AlertDialog_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    constructor(options) {\n        super(\".error-dialog\", {\n            icon: new _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ErrorIcon(),\n            ...options,\n        });\n    }\n}\n//# sourceMappingURL=ErrorDialog.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/dialogs/ErrorDialog.js?");

/***/ }),

/***/ "../app-components/lib/dialogs/PromptDialog.js":
/*!*****************************************************!*\
  !*** ../app-components/lib/dialogs/PromptDialog.js ***!
  \*****************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PromptDialog)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _button_Button_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../button/Button.js */ \"../app-components/lib/button/Button.js\");\n/* harmony import */ var _form_Input_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../form/Input.js */ \"../app-components/lib/form/Input.js\");\n/* harmony import */ var _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../modal/StructuredModal.js */ \"../app-components/lib/modal/StructuredModal.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _button_Button_js__WEBPACK_IMPORTED_MODULE_1__, _form_Input_js__WEBPACK_IMPORTED_MODULE_2__, _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_3__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _button_Button_js__WEBPACK_IMPORTED_MODULE_1__, _form_Input_js__WEBPACK_IMPORTED_MODULE_2__, _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nclass PromptDialog extends _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n    resolveConfirm;\n    rejectConfirm;\n    input;\n    constructor(classNamesOrOptions, optionsOrUndefined) {\n        let classNames = \"\";\n        let options;\n        if (typeof classNamesOrOptions === \"string\") {\n            classNames = classNamesOrOptions;\n            if (optionsOrUndefined === undefined) {\n                throw new Error(\"DropdownMenuOptions is required\");\n            }\n            options = optionsOrUndefined;\n        }\n        else {\n            options = classNamesOrOptions;\n        }\n        super(`.prompt-dialog${classNames}`);\n        this\n            .on(\"remove\", () => this.rejectConfirm?.(new Error(\"Canceled by user\")))\n            .appendToHeader((0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"h1\", options.icon, options.title))\n            .appendToMain(...(typeof options.message === \"string\"\n            ? [(0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"p\", options.message)]\n            : options.message), this.input = new _form_Input_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({ value: options.value }))\n            .appendToFooter(new _button_Button_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\".cancel\", {\n            title: \"Cancel\",\n            onClick: () => this.remove(),\n        }), new _button_Button_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\".confirm\", {\n            type: _button_Button_js__WEBPACK_IMPORTED_MODULE_1__.ButtonType.Contained,\n            title: options.confirmButtonTitle ?? \"Confirm\",\n            onClick: async () => {\n                if (options.onConfirm)\n                    await options.onConfirm(this.input.value);\n                this.resolveConfirm?.(this.input.value);\n                this.rejectConfirm = undefined;\n                this.remove();\n            },\n        }));\n        this.input.focus();\n        this.input.onDom(\"keydown\", async (e) => {\n            if (e.key === \"Enter\") {\n                if (options.onConfirm)\n                    await options.onConfirm(this.input.value);\n                this.resolveConfirm?.(this.input.value);\n                this.rejectConfirm = undefined;\n                this.remove();\n            }\n        });\n    }\n    async waitForConfirmation() {\n        return new Promise((resolve, reject) => {\n            this.resolveConfirm = resolve;\n            this.rejectConfirm = reject;\n        });\n    }\n}\n//# sourceMappingURL=PromptDialog.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/dialogs/PromptDialog.js?");

/***/ }),

/***/ "../app-components/lib/dialogs/QuantityInputDialog.js":
/*!************************************************************!*\
  !*** ../app-components/lib/dialogs/QuantityInputDialog.js ***!
  \************************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ QuantityInputDialog)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _button_Button_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../button/Button.js */ \"../app-components/lib/button/Button.js\");\n/* harmony import */ var _form_QuantityInput_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../form/QuantityInput.js */ \"../app-components/lib/form/QuantityInput.js\");\n/* harmony import */ var _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../modal/StructuredModal.js */ \"../app-components/lib/modal/StructuredModal.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _button_Button_js__WEBPACK_IMPORTED_MODULE_1__, _form_QuantityInput_js__WEBPACK_IMPORTED_MODULE_2__, _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_3__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _button_Button_js__WEBPACK_IMPORTED_MODULE_1__, _form_QuantityInput_js__WEBPACK_IMPORTED_MODULE_2__, _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_3__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\nclass QuantityInputDialog extends _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"] {\n    resolveConfirm;\n    rejectConfirm;\n    input;\n    constructor(classNamesOrOptions, optionsOrUndefined) {\n        let classNames = \"\";\n        let options;\n        if (typeof classNamesOrOptions === \"string\") {\n            classNames = classNamesOrOptions;\n            if (optionsOrUndefined === undefined) {\n                throw new Error(\"DropdownMenuOptions is required\");\n            }\n            options = optionsOrUndefined;\n        }\n        else {\n            options = classNamesOrOptions;\n        }\n        super(`.quantity-input-dialog${classNames}`);\n        this\n            .on(\"remove\", () => this.rejectConfirm?.(new Error(\"Canceled by user\")))\n            .appendToHeader((0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"h1\", options.icon, options.title))\n            .appendToMain(...(typeof options.message === \"string\"\n            ? [(0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"p\", options.message)]\n            : options.message), this.input = new _form_QuantityInput_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n            value: options.value,\n            min: options.min,\n            max: options.max,\n        }))\n            .appendToFooter(new _button_Button_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\".cancel\", {\n            title: \"Cancel\",\n            onClick: () => this.remove(),\n        }), new _button_Button_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\".confirm\", {\n            type: _button_Button_js__WEBPACK_IMPORTED_MODULE_1__.ButtonType.Contained,\n            title: options.confirmButtonTitle ?? \"Confirm\",\n            onClick: async () => {\n                const value = this.input.value;\n                if (value !== undefined) {\n                    if (options.onConfirm)\n                        await options.onConfirm(value);\n                    this.resolveConfirm?.(value);\n                    this.rejectConfirm = undefined;\n                    this.remove();\n                }\n            },\n        }));\n    }\n    async waitForConfirmation() {\n        return new Promise((resolve, reject) => {\n            this.resolveConfirm = resolve;\n            this.rejectConfirm = reject;\n        });\n    }\n}\n//# sourceMappingURL=QuantityInputDialog.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/dialogs/QuantityInputDialog.js?");

/***/ }),

/***/ "../app-components/lib/filetree/FileNameInput.js":
/*!*******************************************************!*\
  !*** ../app-components/lib/filetree/FileNameInput.js ***!
  \*******************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FileNameInput)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass FileNameInput extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    removing = false;\n    constructor(onConfirm) {\n        super(\"input.file-name-input\");\n        this.on(\"visible\", () => this.htmlElement.focus());\n        this.onDom(\"keydown\", (event) => {\n            if (this.removing)\n                return;\n            if (event.key === \"Enter\") {\n                if (this.htmlElement.value) {\n                    onConfirm(this.htmlElement.value);\n                }\n                this.removing = true;\n                this.remove();\n            }\n            else if (event.key === \"Escape\") {\n                this.removing = true;\n                this.remove();\n            }\n        });\n        this.onDom(\"blur\", () => {\n            if (this.removing)\n                return;\n            if (this.htmlElement.value) {\n                onConfirm(this.htmlElement.value);\n            }\n            this.removing = true;\n            this.remove();\n        });\n    }\n}\n//# sourceMappingURL=FileNameInput.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/filetree/FileNameInput.js?");

/***/ }),

/***/ "../app-components/lib/filetree/FileTree.js":
/*!**************************************************!*\
  !*** ../app-components/lib/filetree/FileTree.js ***!
  \**************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FileTree)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _FileNameInput_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FileNameInput.js */ \"../app-components/lib/filetree/FileNameInput.js\");\n/* harmony import */ var _FileTreeNode_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FileTreeNode.js */ \"../app-components/lib/filetree/FileTreeNode.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _FileNameInput_js__WEBPACK_IMPORTED_MODULE_1__, _FileTreeNode_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _FileNameInput_js__WEBPACK_IMPORTED_MODULE_1__, _FileTreeNode_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass FileTree extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    options;\n    selectedNodeId;\n    fileTreeNodeMap = new Map();\n    constructor(options, data) {\n        super(\"ul.file-tree\");\n        this.options = options;\n        this.setData(data);\n    }\n    setData(data) {\n        this.clear();\n        const processedData = [...data];\n        if (this.options.sortByName) {\n            processedData.sort((a, b) => a.name.localeCompare(b.name));\n        }\n        for (const nodeData of processedData) {\n            this.registerNode(nodeData.id, new _FileTreeNode_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, nodeData).appendTo(this));\n        }\n    }\n    isAlwaysExpanded() {\n        return this.options.alwaysExpanded ?? false;\n    }\n    findNode(id) {\n        return this.fileTreeNodeMap.get(id);\n    }\n    registerNode(id, node) {\n        if (this.fileTreeNodeMap.has(id)) {\n            throw new Error(`Node with id ${id} already exists`);\n        }\n        this.fileTreeNodeMap.set(id, node);\n    }\n    add(parentIdOrData, dataOrUndefined) {\n        let parentId;\n        let data;\n        if (typeof parentIdOrData === \"string\") {\n            parentId = parentIdOrData;\n            if (!dataOrUndefined) {\n                throw new Error(\"data is required when parentId is provided\");\n            }\n            data = dataOrUndefined;\n        }\n        else {\n            data = parentIdOrData;\n        }\n        if (parentId === undefined) {\n            const node = new _FileTreeNode_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](this, data);\n            this.registerNode(data.id, node);\n            if (this.options.sortByName) {\n                const children = this.children;\n                let inserted = false;\n                for (let i = 0; i < children.length; i++) {\n                    const child = children[i];\n                    if (data.name.localeCompare(child.getName()) < 0) {\n                        node.appendTo(this, i);\n                        inserted = true;\n                        break;\n                    }\n                }\n                if (!inserted) {\n                    node.appendTo(this);\n                }\n            }\n            else {\n                node.appendTo(this);\n            }\n        }\n        else {\n            const parent = this.findNode(parentId);\n            if (!parent) {\n                throw new Error(`Parent node with id ${parentId} not found`);\n            }\n            parent.add(data);\n        }\n    }\n    removeNode(id) {\n        const node = this.findNode(id);\n        if (!node) {\n            throw new Error(`Node with id ${id} not found`);\n        }\n        node.remove();\n        this.fileTreeNodeMap.delete(id);\n        this.emit(\"nodeRemoved\", id);\n    }\n    setSelectedNodeId(id) {\n        if (this.selectedNodeId === id)\n            return;\n        if (this.selectedNodeId) {\n            const previousNode = this.findNode(this.selectedNodeId);\n            previousNode?.removeClass(\"selected\");\n        }\n        if (id) {\n            const node = this.findNode(id);\n            node?.addClass(\"selected\");\n        }\n        this.selectedNodeId = id;\n    }\n    nodeSelected(id) {\n        if (this.selectedNodeId === id)\n            return;\n        this.setSelectedNodeId(id);\n        this.emit(\"nodeSelected\", id);\n    }\n    nodeCreated(parentId, name) {\n        this.emit(\"nodeCreated\", parentId, name);\n    }\n    createFileNameInput(parentId) {\n        if (parentId === undefined) {\n            new _FileNameInput_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]((name) => this.nodeCreated(parentId, name)).appendTo(this);\n        }\n        else {\n            const parent = this.findNode(parentId);\n            if (!parent) {\n                throw new Error(`Parent node with id ${parentId} not found`);\n            }\n            parent.createFileNameInput();\n        }\n    }\n    selectNode(id) {\n        const node = this.findNode(id);\n        if (!node) {\n            throw new Error(`Node with id ${id} not found`);\n        }\n        node.select();\n    }\n    deselectNode() {\n        this.setSelectedNodeId(undefined);\n    }\n    clear(...except) {\n        this.fileTreeNodeMap.clear();\n        return super.clear(...except);\n    }\n}\n//# sourceMappingURL=FileTree.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/filetree/FileTree.js?");

/***/ }),

/***/ "../app-components/lib/filetree/FileTreeNode.js":
/*!******************************************************!*\
  !*** ../app-components/lib/filetree/FileTreeNode.js ***!
  \******************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FileTreeNode)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../AppCompConfig.js */ \"../app-components/lib/AppCompConfig.js\");\n/* harmony import */ var _FileNameInput_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./FileNameInput.js */ \"../app-components/lib/filetree/FileNameInput.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__, _FileNameInput_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__, _FileNameInput_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass FileTreeNode extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    tree;\n    data;\n    expanded = false;\n    main;\n    folderToggleIconContainer;\n    iconContainer;\n    nameContainer;\n    childrenContainer;\n    constructor(tree, data) {\n        super(\"li.file-tree-node\");\n        this.tree = tree;\n        this.data = data;\n        this.append(this.main = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"main\", data.type === \"directory\"\n            ? this.folderToggleIconContainer = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".icon-container\", new _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].FolderCollapsedIcon())\n            : undefined, data.icon\n            ? this.iconContainer = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".icon-container\", data.icon.clone())\n            : undefined, this.nameContainer = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".name\", ...(Array.isArray(data.name) ? data.name : [data.name]))));\n        this.main.onDom(\"click\", () => this.select());\n        if (data.type === \"directory\") {\n            this.childrenContainer = new _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode(\"ul.children-container\").appendTo(this);\n            const processedChildren = [...data.children];\n            if (this.tree.options.sortByName) {\n                processedChildren.sort((a, b) => a.name.localeCompare(b.name));\n            }\n            for (const childData of processedChildren) {\n                this.add(childData);\n            }\n            if (this.tree.isAlwaysExpanded()) {\n                this.expand();\n            }\n            else {\n                this.main.onDom(\"click\", () => this.expanded ? this.collapse() : this.expand());\n            }\n        }\n        if (this.tree.options.openContextMenu) {\n            _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomUtils.enhanceWithContextMenu(this.main, (event) => {\n                this.tree.options.openContextMenu?.(event.clientX, event.clientY, this.data.id);\n            });\n        }\n    }\n    select() {\n        this.tree.nodeSelected(this.data.id);\n    }\n    getName() {\n        return this.data.name;\n    }\n    expand() {\n        this.expanded = true;\n        this.addClass(\"expanded\");\n        this.folderToggleIconContainer?.clear().append(new _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].FolderExpandedIcon());\n    }\n    collapse() {\n        this.expanded = false;\n        this.removeClass(\"expanded\");\n        this.folderToggleIconContainer?.clear().append(new _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].FolderCollapsedIcon());\n    }\n    add(data) {\n        if (this.data.type !== \"directory\") {\n            throw new Error(\"Cannot add child to a file node\");\n        }\n        const node = new FileTreeNode(this.tree, data);\n        this.tree.registerNode(data.id, node);\n        if (this.tree.options.sortByName) {\n            const children = this.childrenContainer.children;\n            let inserted = false;\n            for (let i = 0; i < children.length; i++) {\n                const child = children[i];\n                if (node.getName().localeCompare(child.getName()) < 0) {\n                    node.appendTo(this.childrenContainer, i);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                node.appendTo(this.childrenContainer);\n            }\n        }\n        else {\n            node.appendTo(this.childrenContainer);\n        }\n    }\n    createFileNameInput() {\n        this.expand();\n        new _FileNameInput_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]((name) => this.tree.nodeCreated(this.data.id, name))\n            .appendTo(this);\n    }\n}\n//# sourceMappingURL=FileTreeNode.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/filetree/FileTreeNode.js?");

/***/ }),

/***/ "../app-components/lib/form/Checkbox.js":
/*!**********************************************!*\
  !*** ../app-components/lib/form/Checkbox.js ***!
  \**********************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Checkbox)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass Checkbox extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    input;\n    constructor(classNamesOrOptions, optionsOrUndefined) {\n        let classNames = \"\";\n        let options;\n        if (typeof classNamesOrOptions === \"string\") {\n            classNames = classNamesOrOptions;\n            options = optionsOrUndefined ?? {};\n        }\n        else {\n            options = classNamesOrOptions ?? {};\n        }\n        super(`label.checkbox${classNames}${options.required === true ? \".required\" : \"\"}`);\n        this.append(this.input = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"input\", {\n            type: \"checkbox\",\n            checked: options.checked,\n            onchange: () => {\n                options.onChange?.(this.input.htmlElement.checked);\n                this.emit(\"valueChanged\", this.input.htmlElement.checked);\n            },\n        }), options.label ? (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"span.label\", options.label) : undefined);\n    }\n    isChecked() {\n        return this.input.htmlElement.checked;\n    }\n}\n//# sourceMappingURL=Checkbox.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/form/Checkbox.js?");

/***/ }),

/***/ "../app-components/lib/form/FileDropzone.js":
/*!**************************************************!*\
  !*** ../app-components/lib/form/FileDropzone.js ***!
  \**************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FileDropzone)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _InvisibleFileInput_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./InvisibleFileInput.js */ \"../app-components/lib/form/InvisibleFileInput.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _InvisibleFileInput_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _InvisibleFileInput_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nclass FileDropzone extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    invisibleFileInput;\n    constructor(classNames, options, ...children) {\n        super(`.file-dropzone${classNames}`, ...children);\n        this.append(this.invisibleFileInput = new _InvisibleFileInput_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]({\n            accept: options.accept,\n            multiple: options.multiple,\n            onChange: (files) => {\n                if (files.length > 0)\n                    options.onUpload(files);\n            },\n        }));\n        this.onDom(\"click\", () => {\n            this.invisibleFileInput.openFileSelector();\n        });\n        this.onDom(\"dragenter\", (event) => {\n            event.preventDefault();\n            this.addClass(\"drag-hover\");\n        });\n        this.onDom(\"dragover\", (event) => {\n            event.preventDefault();\n            this.addClass(\"drag-hover\");\n            event.dataTransfer.dropEffect = \"copy\";\n        });\n        this.onDom(\"dragleave\", () => {\n            this.removeClass(\"drag-hover\");\n        });\n        this.onDom(\"drop\", (event) => {\n            event.preventDefault();\n            this.removeClass(\"drag-hover\");\n            if (event.dataTransfer && event.dataTransfer.files.length > 0) {\n                options.onUpload(Array.from(event.dataTransfer.files));\n            }\n        });\n    }\n}\n//# sourceMappingURL=FileDropzone.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/form/FileDropzone.js?");

/***/ }),

/***/ "../app-components/lib/form/Form.js":
/*!******************************************!*\
  !*** ../app-components/lib/form/Form.js ***!
  \******************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Form)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass Form extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor(...children) {\n        super(\".form\", ...children);\n    }\n}\n//# sourceMappingURL=Form.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/form/Form.js?");

/***/ }),

/***/ "../app-components/lib/form/Input.js":
/*!*******************************************!*\
  !*** ../app-components/lib/form/Input.js ***!
  \*******************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Input)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass Input extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    input;\n    previousValue = \"\";\n    constructor(classNamesOrOptions, optionsOrUndefined) {\n        let classNames = \"\";\n        let options;\n        if (typeof classNamesOrOptions === \"string\") {\n            classNames = classNamesOrOptions;\n            options = optionsOrUndefined ?? {};\n        }\n        else {\n            options = classNamesOrOptions ?? {};\n        }\n        super(`label.input${classNames}${options.required === true ? \".required\" : \"\"}`);\n        if (options.autoCapitalize) {\n            this.htmlElement.autocapitalize = options.autoCapitalize;\n        }\n        this.append(options.label ? (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"span.label\", options.label) : undefined, this.input = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(options.multiline ? \"textarea\" : \"input\", {\n            placeholder: options.placeholder ?? \"\",\n            value: options.value ?? \"\",\n            readOnly: options.readOnly,\n            onkeyup: () => this.handleInput(),\n        }), options.suffixIcon ? (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".suffix-icon\", options.suffixIcon) : undefined);\n        if (options.value)\n            this.previousValue = options.value;\n        if (options.onKeyDown) {\n            this.input.onDom(\"keydown\", (e) => options.onKeyDown(e));\n        }\n        if (options.onChange) {\n            this.on(\"valueChanged\", (v) => options.onChange(v));\n        }\n        if (options.onClick) {\n            this.onDom(\"click\", () => options.onClick(this));\n        }\n    }\n    handleInput = () => {\n        const newValue = this.value;\n        if (newValue !== this.previousValue) {\n            this.emit(\"valueChanged\", newValue);\n            this.previousValue = newValue;\n        }\n    };\n    get value() {\n        return this.input.htmlElement.value;\n    }\n    set value(value) {\n        if (this.input.htmlElement.value === value)\n            return;\n        this.input.htmlElement.value = value;\n        if (!this.readOnly)\n            this.handleInput();\n    }\n    get readOnly() {\n        return this.input.htmlElement.readOnly;\n    }\n    set readOnly(readOnly) {\n        this.input.htmlElement.readOnly = readOnly;\n    }\n    focus() {\n        this.input.htmlElement.focus();\n    }\n}\n//# sourceMappingURL=Input.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/form/Input.js?");

/***/ }),

/***/ "../app-components/lib/form/InvisibleFileInput.js":
/*!********************************************************!*\
  !*** ../app-components/lib/form/InvisibleFileInput.js ***!
  \********************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InvisibleFileInput)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass InvisibleFileInput extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    options;\n    constructor(options) {\n        super(\"input.invisible-file-input\", {\n            type: \"file\",\n            ...options,\n            style: { display: \"none\" },\n            onchange: () => this.handleChange(),\n        });\n        this.options = options;\n    }\n    openFileSelector() {\n        this.htmlElement.click();\n    }\n    handleChange() {\n        const files = this.htmlElement.files;\n        if (files)\n            this.options.onChange(Array.from(files));\n        this.htmlElement.value = \"\";\n    }\n}\n//# sourceMappingURL=InvisibleFileInput.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/form/InvisibleFileInput.js?");

/***/ }),

/***/ "../app-components/lib/form/QuantityInput.js":
/*!***************************************************!*\
  !*** ../app-components/lib/form/QuantityInput.js ***!
  \***************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ QuantityInput)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../AppCompConfig.js */ \"../app-components/lib/AppCompConfig.js\");\n/* harmony import */ var _button_Button_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../button/Button.js */ \"../app-components/lib/button/Button.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__, _button_Button_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__, _button_Button_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass QuantityInput extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    options;\n    minusButton;\n    input;\n    plusButton;\n    previousValue;\n    constructor(classNamesOrOptions, optionsOrUndefined) {\n        let classNames = \"\";\n        let options;\n        if (typeof classNamesOrOptions === \"string\") {\n            classNames = classNamesOrOptions;\n            options = optionsOrUndefined ?? {};\n        }\n        else {\n            options = classNamesOrOptions ?? {};\n        }\n        super(`.quantity-input${classNames}${options.required === true ? \".required\" : \"\"}`);\n        this.options = options;\n        this.append(options.label ? (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"span.label\", options.label) : undefined, (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"main\", this.minusButton = new _button_Button_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n            type: _button_Button_js__WEBPACK_IMPORTED_MODULE_2__.ButtonType.Icon,\n            icon: new _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].MinusIcon(),\n            disabled: options.readOnly || options.value === options.min,\n            onClick: () => {\n                const value = this.value;\n                if (value === undefined)\n                    return;\n                this.value = value - 1;\n            },\n        }), this.input = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"input\", {\n            type: \"number\",\n            placeholder: options.placeholder ?? \"\",\n            value: options.value ? String(options.value) : \"\",\n            min: options.min ? String(options.min) : undefined,\n            max: options.max ? String(options.max) : undefined,\n            readOnly: options.readOnly,\n            onkeyup: () => this.handleQuantityInput(),\n        }), this.plusButton = new _button_Button_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({\n            type: _button_Button_js__WEBPACK_IMPORTED_MODULE_2__.ButtonType.Icon,\n            icon: new _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].PlusIcon(),\n            disabled: options.readOnly || options.value === options.max,\n            onClick: () => {\n                const value = this.value;\n                if (value === undefined)\n                    return;\n                this.value = value + 1;\n            },\n        })));\n        if (options.onChange) {\n            this.on(\"valueChanged\", (v) => options.onChange(v));\n        }\n    }\n    handleQuantityInput = () => {\n        const newValue = this.value;\n        if (newValue === undefined) {\n            this.previousValue = undefined;\n            this.minusButton.disable();\n            this.plusButton.enable();\n        }\n        else {\n            if (newValue !== this.previousValue) {\n                this.emit(\"valueChanged\", newValue);\n                this.previousValue = newValue;\n                newValue === this.options.min\n                    ? this.minusButton.disable()\n                    : this.minusButton.enable();\n                newValue === this.options.max\n                    ? this.plusButton.disable()\n                    : this.plusButton.enable();\n            }\n        }\n    };\n    get value() {\n        const value = parseInt(this.input.htmlElement.value, 10);\n        return isNaN(value) ? undefined : value;\n    }\n    set value(value) {\n        const stringValue = value === undefined ? \"\" : String(value);\n        if (this.input.htmlElement.value === stringValue)\n            return;\n        this.input.htmlElement.value = stringValue;\n        this.handleQuantityInput();\n    }\n    get readOnly() {\n        return this.input.htmlElement.readOnly;\n    }\n    set readOnly(readOnly) {\n        this.input.htmlElement.readOnly = readOnly;\n    }\n    focus() {\n        this.input.htmlElement.focus();\n    }\n}\n//# sourceMappingURL=QuantityInput.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/form/QuantityInput.js?");

/***/ }),

/***/ "../app-components/lib/form/Select.js":
/*!********************************************!*\
  !*** ../app-components/lib/form/Select.js ***!
  \********************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Select)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass Select extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    select;\n    constructor(options) {\n        super(`label.select${options.required === true ? \".required\" : \"\"}`);\n        this.append(options.label ? (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"span.label\", options.label) : undefined, this.select = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"select\", (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"option\", { value: \"\", disabled: true, selected: true }, options.placeholder), ...options.options.map((option) => (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"option\", { value: option.value }, option.label)), { value: options.value }));\n        this.select.onDom(\"change\", () => {\n            if (options.onChange)\n                options.onChange(this.value);\n        });\n    }\n    get value() {\n        return this.select.htmlElement.value;\n    }\n    set value(value) {\n        if (this.select.htmlElement.value === value)\n            return;\n        this.select.htmlElement.value = value;\n    }\n}\n//# sourceMappingURL=Select.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/form/Select.js?");

/***/ }),

/***/ "../app-components/lib/index.js":
/*!**************************************!*\
  !*** ../app-components/lib/index.js ***!
  \**************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Accordion: () => (/* reexport safe */ _accordion_Accordion_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   AccordionItem: () => (/* reexport safe */ _accordion_AccordionItem_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   AlertDialog: () => (/* reexport safe */ _dialogs_AlertDialog_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   AppCompConfig: () => (/* reexport safe */ _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   Button: () => (/* reexport safe */ _button_Button_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]),\n/* harmony export */   ButtonGroup: () => (/* reexport safe */ _button_ButtonGroup_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   ButtonType: () => (/* reexport safe */ _button_Button_js__WEBPACK_IMPORTED_MODULE_5__.ButtonType),\n/* harmony export */   Checkbox: () => (/* reexport safe */ _form_Checkbox_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]),\n/* harmony export */   ConfirmDialog: () => (/* reexport safe */ _dialogs_ConfirmDialog_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]),\n/* harmony export */   DefaultAvatar: () => (/* reexport safe */ _DefaultAvatar_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   DropdownMenu: () => (/* reexport safe */ _menu_DropdownMenu_js__WEBPACK_IMPORTED_MODULE_21__[\"default\"]),\n/* harmony export */   DropdownMenuGroup: () => (/* reexport safe */ _menu_DropdownMenuGroup_js__WEBPACK_IMPORTED_MODULE_22__[\"default\"]),\n/* harmony export */   DropdownMenuItem: () => (/* reexport safe */ _menu_DropdownMenuItem_js__WEBPACK_IMPORTED_MODULE_23__[\"default\"]),\n/* harmony export */   ErrorDialog: () => (/* reexport safe */ _dialogs_ErrorDialog_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]),\n/* harmony export */   FileDropzone: () => (/* reexport safe */ _form_FileDropzone_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"]),\n/* harmony export */   FileTree: () => (/* reexport safe */ _filetree_FileTree_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"]),\n/* harmony export */   Form: () => (/* reexport safe */ _form_Form_js__WEBPACK_IMPORTED_MODULE_16__[\"default\"]),\n/* harmony export */   InfoAlert: () => (/* reexport safe */ _alerts_InfoAlert_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   Input: () => (/* reexport safe */ _form_Input_js__WEBPACK_IMPORTED_MODULE_17__[\"default\"]),\n/* harmony export */   InvisibleFileInput: () => (/* reexport safe */ _form_InvisibleFileInput_js__WEBPACK_IMPORTED_MODULE_18__[\"default\"]),\n/* harmony export */   Modal: () => (/* reexport safe */ _modal_Modal_js__WEBPACK_IMPORTED_MODULE_24__[\"default\"]),\n/* harmony export */   PromptDialog: () => (/* reexport safe */ _dialogs_PromptDialog_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"]),\n/* harmony export */   QuantityInput: () => (/* reexport safe */ _form_QuantityInput_js__WEBPACK_IMPORTED_MODULE_19__[\"default\"]),\n/* harmony export */   QuantityInputDialog: () => (/* reexport safe */ _dialogs_QuantityInputDialog_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"]),\n/* harmony export */   Select: () => (/* reexport safe */ _form_Select_js__WEBPACK_IMPORTED_MODULE_20__[\"default\"]),\n/* harmony export */   Snackbar: () => (/* reexport safe */ _Snackbar_js__WEBPACK_IMPORTED_MODULE_26__[\"default\"]),\n/* harmony export */   StructuredModal: () => (/* reexport safe */ _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_25__[\"default\"]),\n/* harmony export */   SvgIcon: () => (/* reexport safe */ _SvgIcon_js__WEBPACK_IMPORTED_MODULE_27__[\"default\"]),\n/* harmony export */   Tab: () => (/* reexport safe */ _tab_Tab_js__WEBPACK_IMPORTED_MODULE_28__[\"default\"]),\n/* harmony export */   TabGroup: () => (/* reexport safe */ _tab_TabGroup_js__WEBPACK_IMPORTED_MODULE_29__[\"default\"]),\n/* harmony export */   WarningAlert: () => (/* reexport safe */ _alerts_WarningAlert_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _accordion_Accordion_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accordion/Accordion.js */ \"../app-components/lib/accordion/Accordion.js\");\n/* harmony import */ var _accordion_AccordionItem_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./accordion/AccordionItem.js */ \"../app-components/lib/accordion/AccordionItem.js\");\n/* harmony import */ var _alerts_InfoAlert_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./alerts/InfoAlert.js */ \"../app-components/lib/alerts/InfoAlert.js\");\n/* harmony import */ var _alerts_WarningAlert_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./alerts/WarningAlert.js */ \"../app-components/lib/alerts/WarningAlert.js\");\n/* harmony import */ var _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AppCompConfig.js */ \"../app-components/lib/AppCompConfig.js\");\n/* harmony import */ var _button_Button_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./button/Button.js */ \"../app-components/lib/button/Button.js\");\n/* harmony import */ var _button_ButtonGroup_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./button/ButtonGroup.js */ \"../app-components/lib/button/ButtonGroup.js\");\n/* harmony import */ var _DefaultAvatar_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./DefaultAvatar.js */ \"../app-components/lib/DefaultAvatar.js\");\n/* harmony import */ var _dialogs_AlertDialog_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./dialogs/AlertDialog.js */ \"../app-components/lib/dialogs/AlertDialog.js\");\n/* harmony import */ var _dialogs_ConfirmDialog_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./dialogs/ConfirmDialog.js */ \"../app-components/lib/dialogs/ConfirmDialog.js\");\n/* harmony import */ var _dialogs_ErrorDialog_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./dialogs/ErrorDialog.js */ \"../app-components/lib/dialogs/ErrorDialog.js\");\n/* harmony import */ var _dialogs_PromptDialog_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dialogs/PromptDialog.js */ \"../app-components/lib/dialogs/PromptDialog.js\");\n/* harmony import */ var _dialogs_QuantityInputDialog_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dialogs/QuantityInputDialog.js */ \"../app-components/lib/dialogs/QuantityInputDialog.js\");\n/* harmony import */ var _filetree_FileTree_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./filetree/FileTree.js */ \"../app-components/lib/filetree/FileTree.js\");\n/* harmony import */ var _form_Checkbox_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./form/Checkbox.js */ \"../app-components/lib/form/Checkbox.js\");\n/* harmony import */ var _form_FileDropzone_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./form/FileDropzone.js */ \"../app-components/lib/form/FileDropzone.js\");\n/* harmony import */ var _form_Form_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./form/Form.js */ \"../app-components/lib/form/Form.js\");\n/* harmony import */ var _form_Input_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./form/Input.js */ \"../app-components/lib/form/Input.js\");\n/* harmony import */ var _form_InvisibleFileInput_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./form/InvisibleFileInput.js */ \"../app-components/lib/form/InvisibleFileInput.js\");\n/* harmony import */ var _form_QuantityInput_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./form/QuantityInput.js */ \"../app-components/lib/form/QuantityInput.js\");\n/* harmony import */ var _form_Select_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./form/Select.js */ \"../app-components/lib/form/Select.js\");\n/* harmony import */ var _menu_DropdownMenu_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./menu/DropdownMenu.js */ \"../app-components/lib/menu/DropdownMenu.js\");\n/* harmony import */ var _menu_DropdownMenuGroup_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./menu/DropdownMenuGroup.js */ \"../app-components/lib/menu/DropdownMenuGroup.js\");\n/* harmony import */ var _menu_DropdownMenuItem_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./menu/DropdownMenuItem.js */ \"../app-components/lib/menu/DropdownMenuItem.js\");\n/* harmony import */ var _modal_Modal_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./modal/Modal.js */ \"../app-components/lib/modal/Modal.js\");\n/* harmony import */ var _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./modal/StructuredModal.js */ \"../app-components/lib/modal/StructuredModal.js\");\n/* harmony import */ var _Snackbar_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./Snackbar.js */ \"../app-components/lib/Snackbar.js\");\n/* harmony import */ var _SvgIcon_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./SvgIcon.js */ \"../app-components/lib/SvgIcon.js\");\n/* harmony import */ var _tab_Tab_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./tab/Tab.js */ \"../app-components/lib/tab/Tab.js\");\n/* harmony import */ var _tab_TabGroup_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./tab/TabGroup.js */ \"../app-components/lib/tab/TabGroup.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_accordion_Accordion_js__WEBPACK_IMPORTED_MODULE_0__, _accordion_AccordionItem_js__WEBPACK_IMPORTED_MODULE_1__, _alerts_InfoAlert_js__WEBPACK_IMPORTED_MODULE_2__, _alerts_WarningAlert_js__WEBPACK_IMPORTED_MODULE_3__, _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_4__, _button_Button_js__WEBPACK_IMPORTED_MODULE_5__, _button_ButtonGroup_js__WEBPACK_IMPORTED_MODULE_6__, _DefaultAvatar_js__WEBPACK_IMPORTED_MODULE_7__, _dialogs_AlertDialog_js__WEBPACK_IMPORTED_MODULE_8__, _dialogs_ConfirmDialog_js__WEBPACK_IMPORTED_MODULE_9__, _dialogs_ErrorDialog_js__WEBPACK_IMPORTED_MODULE_10__, _dialogs_PromptDialog_js__WEBPACK_IMPORTED_MODULE_11__, _dialogs_QuantityInputDialog_js__WEBPACK_IMPORTED_MODULE_12__, _filetree_FileTree_js__WEBPACK_IMPORTED_MODULE_13__, _form_Checkbox_js__WEBPACK_IMPORTED_MODULE_14__, _form_FileDropzone_js__WEBPACK_IMPORTED_MODULE_15__, _form_Form_js__WEBPACK_IMPORTED_MODULE_16__, _form_Input_js__WEBPACK_IMPORTED_MODULE_17__, _form_InvisibleFileInput_js__WEBPACK_IMPORTED_MODULE_18__, _form_QuantityInput_js__WEBPACK_IMPORTED_MODULE_19__, _form_Select_js__WEBPACK_IMPORTED_MODULE_20__, _menu_DropdownMenu_js__WEBPACK_IMPORTED_MODULE_21__, _menu_DropdownMenuGroup_js__WEBPACK_IMPORTED_MODULE_22__, _menu_DropdownMenuItem_js__WEBPACK_IMPORTED_MODULE_23__, _modal_Modal_js__WEBPACK_IMPORTED_MODULE_24__, _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_25__, _Snackbar_js__WEBPACK_IMPORTED_MODULE_26__, _SvgIcon_js__WEBPACK_IMPORTED_MODULE_27__, _tab_Tab_js__WEBPACK_IMPORTED_MODULE_28__, _tab_TabGroup_js__WEBPACK_IMPORTED_MODULE_29__]);\n([_accordion_Accordion_js__WEBPACK_IMPORTED_MODULE_0__, _accordion_AccordionItem_js__WEBPACK_IMPORTED_MODULE_1__, _alerts_InfoAlert_js__WEBPACK_IMPORTED_MODULE_2__, _alerts_WarningAlert_js__WEBPACK_IMPORTED_MODULE_3__, _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_4__, _button_Button_js__WEBPACK_IMPORTED_MODULE_5__, _button_ButtonGroup_js__WEBPACK_IMPORTED_MODULE_6__, _DefaultAvatar_js__WEBPACK_IMPORTED_MODULE_7__, _dialogs_AlertDialog_js__WEBPACK_IMPORTED_MODULE_8__, _dialogs_ConfirmDialog_js__WEBPACK_IMPORTED_MODULE_9__, _dialogs_ErrorDialog_js__WEBPACK_IMPORTED_MODULE_10__, _dialogs_PromptDialog_js__WEBPACK_IMPORTED_MODULE_11__, _dialogs_QuantityInputDialog_js__WEBPACK_IMPORTED_MODULE_12__, _filetree_FileTree_js__WEBPACK_IMPORTED_MODULE_13__, _form_Checkbox_js__WEBPACK_IMPORTED_MODULE_14__, _form_FileDropzone_js__WEBPACK_IMPORTED_MODULE_15__, _form_Form_js__WEBPACK_IMPORTED_MODULE_16__, _form_Input_js__WEBPACK_IMPORTED_MODULE_17__, _form_InvisibleFileInput_js__WEBPACK_IMPORTED_MODULE_18__, _form_QuantityInput_js__WEBPACK_IMPORTED_MODULE_19__, _form_Select_js__WEBPACK_IMPORTED_MODULE_20__, _menu_DropdownMenu_js__WEBPACK_IMPORTED_MODULE_21__, _menu_DropdownMenuGroup_js__WEBPACK_IMPORTED_MODULE_22__, _menu_DropdownMenuItem_js__WEBPACK_IMPORTED_MODULE_23__, _modal_Modal_js__WEBPACK_IMPORTED_MODULE_24__, _modal_StructuredModal_js__WEBPACK_IMPORTED_MODULE_25__, _Snackbar_js__WEBPACK_IMPORTED_MODULE_26__, _SvgIcon_js__WEBPACK_IMPORTED_MODULE_27__, _tab_Tab_js__WEBPACK_IMPORTED_MODULE_28__, _tab_TabGroup_js__WEBPACK_IMPORTED_MODULE_29__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/index.js?");

/***/ }),

/***/ "../app-components/lib/menu/DropdownMenu.js":
/*!**************************************************!*\
  !*** ../app-components/lib/menu/DropdownMenu.js ***!
  \**************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DropdownMenu)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass DropdownMenu extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    _options;\n    header;\n    main;\n    footer;\n    constructor(classNamesOrOptions, optionsOrUndefined) {\n        let classNames = \"\";\n        let options;\n        if (typeof classNamesOrOptions === \"string\") {\n            classNames = classNamesOrOptions;\n            if (optionsOrUndefined === undefined) {\n                throw new Error(\"DropdownMenuOptions is required\");\n            }\n            options = optionsOrUndefined;\n        }\n        else {\n            options = classNamesOrOptions;\n        }\n        super(`.dropdown-menu${classNames}`);\n        this._options = options;\n        window.getSelection()?.empty();\n        for (const node of _common_module_app__WEBPACK_IMPORTED_MODULE_0__.BodyNode.children) {\n            if (node instanceof DropdownMenu)\n                node.remove();\n        }\n        this.append(this.header = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"header\"), this.main = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"main\"), this.footer = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"footer\"));\n        this.onWindow(\"click\", (event) => {\n            if (!this.htmlElement.contains(event.target)) {\n                this.remove();\n            }\n        }).onWindow(\"touchstart\", (event) => {\n            if (!this.htmlElement.contains(event.target)) {\n                this.remove();\n            }\n        }).onWindow(\"keydown\", (event) => {\n            if (event.key === \"Escape\")\n                this.remove();\n        });\n        this.appendTo(_common_module_app__WEBPACK_IMPORTED_MODULE_0__.BodyNode).adjustPosition();\n    }\n    adjustPosition() {\n        const rect = this.calculateRect();\n        let left = 0, top = 0;\n        if (this._options.left !== undefined) {\n            left = this._options.left;\n        }\n        else if (this._options.right !== undefined) {\n            left = this._options.right - rect.width;\n        }\n        if (this._options.top !== undefined) {\n            top = this._options.top;\n        }\n        else if (this._options.bottom !== undefined) {\n            top = this._options.bottom - rect.height;\n        }\n        if (left + rect.width > window.innerWidth) {\n            left = window.innerWidth - rect.width;\n        }\n        if (left < 0)\n            left = 0;\n        if (top + rect.height > window.innerHeight) {\n            top = window.innerHeight - rect.height;\n        }\n        if (top < 0)\n            top = 0;\n        this.style({ left: `${left}px`, top: `${top}px` });\n    }\n    appendToHeader(...children) {\n        this.header.append(...children);\n        this.adjustPosition();\n        return this;\n    }\n    appendToMain(...children) {\n        this.main.append(...children);\n        this.adjustPosition();\n        return this;\n    }\n    appendToFooter(...children) {\n        this.footer.append(...children);\n        this.adjustPosition();\n        return this;\n    }\n}\n//# sourceMappingURL=DropdownMenu.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/menu/DropdownMenu.js?");

/***/ }),

/***/ "../app-components/lib/menu/DropdownMenuGroup.js":
/*!*******************************************************!*\
  !*** ../app-components/lib/menu/DropdownMenuGroup.js ***!
  \*******************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DropdownMenuGroup)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass DropdownMenuGroup extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor(...items) {\n        super(\".dropdown-menu-group\", ...items);\n    }\n}\n//# sourceMappingURL=DropdownMenuGroup.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/menu/DropdownMenuGroup.js?");

/***/ }),

/***/ "../app-components/lib/menu/DropdownMenuItem.js":
/*!******************************************************!*\
  !*** ../app-components/lib/menu/DropdownMenuItem.js ***!
  \******************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DropdownMenuItem)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass DropdownMenuItem extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor(options) {\n        super(\"a.dropdown-menu-item\");\n        this.append(options.icon, options.label);\n        this.onDom(\"click\", () => options.onClick());\n    }\n}\n//# sourceMappingURL=DropdownMenuItem.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/menu/DropdownMenuItem.js?");

/***/ }),

/***/ "../app-components/lib/modal/Modal.js":
/*!********************************************!*\
  !*** ../app-components/lib/modal/Modal.js ***!
  \********************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Modal)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nconst nonModalDialogContainer = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".non-modal-dialog-container\").appendTo(_common_module_app__WEBPACK_IMPORTED_MODULE_0__.BodyNode);\nnonModalDialogContainer.onDom(\"click\", (event) => {\n    if (event.target === nonModalDialogContainer.htmlElement) {\n        for (const dialog of nonModalDialogContainer.children) {\n            if (dialog instanceof Modal) {\n                dialog.htmlElement.close();\n            }\n        }\n    }\n});\nclass Modal extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    modal;\n    closeListener = () => this.remove();\n    constructor(classNames, modal = true) {\n        super(`dialog.modal${classNames}`);\n        this.modal = modal;\n        this\n            .onDom(\"close\", this.closeListener)\n            .onDom(\"click\", (event) => {\n            const rect = this.calculateRect();\n            if (event.clientX < rect.left ||\n                event.clientX > rect.right ||\n                event.clientY < rect.top ||\n                event.clientY > rect.bottom) {\n                this.htmlElement.close();\n            }\n        })\n            .appendTo(modal ? _common_module_app__WEBPACK_IMPORTED_MODULE_0__.BodyNode : nonModalDialogContainer);\n        modal ? this.htmlElement.showModal() : this.htmlElement.show();\n        if (!modal) {\n            for (const bodyNodeChild of _common_module_app__WEBPACK_IMPORTED_MODULE_0__.BodyNode.children) {\n                if (bodyNodeChild instanceof Modal && bodyNodeChild.modal) {\n                    bodyNodeChild.off(\"remove\", bodyNodeChild.closeListener);\n                    bodyNodeChild.htmlElement.close();\n                }\n            }\n            this.on(\"remove\", (() => {\n                for (const bodyNodeChild of _common_module_app__WEBPACK_IMPORTED_MODULE_0__.BodyNode.children) {\n                    if (bodyNodeChild instanceof Modal && bodyNodeChild.modal) {\n                        bodyNodeChild.htmlElement.showModal();\n                        bodyNodeChild.on(\"remove\", bodyNodeChild.closeListener);\n                    }\n                }\n            }));\n        }\n    }\n}\n//# sourceMappingURL=Modal.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/modal/Modal.js?");

/***/ }),

/***/ "../app-components/lib/modal/StructuredModal.js":
/*!******************************************************!*\
  !*** ../app-components/lib/modal/StructuredModal.js ***!
  \******************************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ StructuredModal)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _Modal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Modal.js */ \"../app-components/lib/modal/Modal.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _Modal_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _Modal_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nclass StructuredModal extends _Modal_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"] {\n    header;\n    main;\n    footer;\n    constructor(classNames, modal = true) {\n        super(`.structured-modal${classNames}`, modal);\n        super.append(this.header = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"header\"), this.main = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"main\"), this.footer = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\"footer\"));\n    }\n    appendToHeader(...children) {\n        this.header.append(...children);\n        return this;\n    }\n    appendToMain(...children) {\n        this.main.append(...children);\n        return this;\n    }\n    appendToFooter(...children) {\n        this.footer.append(...children);\n        return this;\n    }\n}\n//# sourceMappingURL=StructuredModal.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/modal/StructuredModal.js?");

/***/ }),

/***/ "../app-components/lib/tab/Tab.js":
/*!****************************************!*\
  !*** ../app-components/lib/tab/Tab.js ***!
  \****************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Tab)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass Tab extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    options;\n    constructor(options) {\n        super(\".tab\");\n        this.options = options;\n        this.text = options.label;\n        this.onDom(\"click\", () => this.select());\n        if (this.options.openContextMenu) {\n            _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomUtils.enhanceWithContextMenu(this, (event) => {\n                this.options.openContextMenu?.(event.clientX, event.clientY);\n            });\n        }\n    }\n    getValue() {\n        return this.options.value;\n    }\n    select() {\n        this.addClass(\"selected\");\n        this.emit(\"selected\");\n    }\n    deselect() {\n        this.removeClass(\"selected\");\n        this.emit(\"deselected\");\n    }\n}\n//# sourceMappingURL=Tab.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/tab/Tab.js?");

/***/ }),

/***/ "../app-components/lib/tab/TabGroup.js":
/*!*********************************************!*\
  !*** ../app-components/lib/tab/TabGroup.js ***!
  \*********************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TabGroup)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../AppCompConfig.js */ \"../app-components/lib/AppCompConfig.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nclass TabGroup extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    store;\n    background;\n    tabs = [];\n    selectedTab;\n    constructor(id, ...tabs) {\n        super(\".tab-group\");\n        if (typeof id === \"string\") {\n            this.store = new _common_module_app__WEBPACK_IMPORTED_MODULE_0__.Store(`tab-group-${id}`);\n        }\n        else if (id) {\n            tabs.unshift(id);\n        }\n        this.background = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".background\").appendTo(this);\n        for (const tab of tabs) {\n            this.addTab(tab);\n        }\n    }\n    init() {\n        const storedValue = this.store?.get(\"selected\");\n        if (storedValue) {\n            this.selectTab(storedValue);\n        }\n        else {\n            this.tabs[0]?.select();\n        }\n        return this;\n    }\n    getSelectedValue() {\n        return this.selectedTab?.getValue();\n    }\n    updateTabBackgroundOnSelect() {\n        if (this.selectedTab) {\n            _AppCompConfig_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].updateTabBackgroundOnSelect(this.background, this.selectedTab);\n        }\n    }\n    addTab(tab) {\n        tab.on(\"selected\", () => {\n            if (this.selectedTab === tab)\n                return;\n            this.selectedTab?.deselect();\n            this.selectedTab = tab;\n            this.store?.setPermanent(\"selected\", tab.getValue());\n            this.updateTabBackgroundOnSelect();\n            this.emit(\"tabSelected\", tab.getValue());\n        });\n        this.tabs.push(tab);\n        this.append(tab);\n    }\n    selectTab(value) {\n        const foundTab = this.tabs.find((tab) => tab.getValue() === value);\n        if (foundTab)\n            foundTab.select();\n        else\n            this.tabs[0]?.select();\n    }\n    removeTab(value) {\n        const foundTab = this.tabs.find((tab) => tab.getValue() === value);\n        if (foundTab) {\n            foundTab.remove();\n            if (this.selectedTab === foundTab) {\n                this.selectedTab = undefined;\n                this.tabs[0]?.select();\n            }\n            this.tabs = this.tabs.filter((tab) => tab.getValue() !== value);\n        }\n    }\n}\n//# sourceMappingURL=TabGroup.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-components/lib/tab/TabGroup.js?");

/***/ }),

/***/ "../app-module/lib/SPAInitializer.js":
/*!*******************************************!*\
  !*** ../app-module/lib/SPAInitializer.js ***!
  \*******************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _route_Router_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./route/Router.js */ \"../app-module/lib/route/Router.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_route_Router_js__WEBPACK_IMPORTED_MODULE_0__]);\n_route_Router_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass SPAInitializer {\n    static INITIAL_PATH_KEY = \"initialPath\";\n    init() {\n        const initialPath = sessionStorage[SPAInitializer.INITIAL_PATH_KEY];\n        if (initialPath) {\n            _route_Router_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].goWithoutHistory(initialPath);\n            sessionStorage.removeItem(SPAInitializer.INITIAL_PATH_KEY);\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new SPAInitializer());\n//# sourceMappingURL=SPAInitializer.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/SPAInitializer.js?");

/***/ }),

/***/ "../app-module/lib/dom/BodyNode.js":
/*!*****************************************!*\
  !*** ../app-module/lib/dom/BodyNode.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _DomNode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DomNode.js */ \"../app-module/lib/dom/DomNode.js\");\n\nclass BodyNode extends _DomNode_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(document.body);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new BodyNode());\n//# sourceMappingURL=BodyNode.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/dom/BodyNode.js?");

/***/ }),

/***/ "../app-module/lib/dom/DomNode.js":
/*!****************************************!*\
  !*** ../app-module/lib/dom/DomNode.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DomNode)\n/* harmony export */ });\n/* harmony import */ var _WindowEventTreeNode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./WindowEventTreeNode.js */ \"../app-module/lib/dom/WindowEventTreeNode.js\");\n\nfunction createElementBySelector(selector) {\n    const parts = (selector || \"div\").split(/([#.])/);\n    const tagName = parts[0] || \"div\";\n    const element = document.createElement(tagName);\n    let currentType = \"\";\n    for (let i = 1; i < parts.length; i += 2) {\n        currentType = parts[i];\n        const value = parts[i + 1];\n        if (currentType === \"#\")\n            element.id = value;\n        else if (currentType === \".\")\n            element.classList.add(value);\n    }\n    return element;\n}\nclass DomNode extends _WindowEventTreeNode_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    htmlElement;\n    constructor(elementOrSelector, ...children) {\n        super();\n        this.htmlElement = elementOrSelector instanceof Element\n            ? elementOrSelector\n            : createElementBySelector(elementOrSelector ?? \"\");\n        this.append(...children);\n    }\n    prependText(text) {\n        if (this.htmlElement instanceof HTMLTextAreaElement) {\n            this.htmlElement.value = text + this.htmlElement.value;\n        }\n        else {\n            const fragment = document.createDocumentFragment();\n            text.split(\"\\n\").forEach((line, index) => {\n                if (index > 0)\n                    fragment.appendChild(document.createElement(\"br\"));\n                fragment.appendChild(document.createTextNode(line));\n            });\n            this.htmlElement.prepend(fragment);\n        }\n        return this;\n    }\n    appendText(text) {\n        if (this.htmlElement instanceof HTMLTextAreaElement) {\n            this.htmlElement.value += text;\n        }\n        else {\n            const fragment = document.createDocumentFragment();\n            text.split(\"\\n\").forEach((line, index) => {\n                if (index > 0)\n                    fragment.appendChild(document.createElement(\"br\"));\n                fragment.appendChild(document.createTextNode(line));\n            });\n            this.htmlElement.appendChild(fragment);\n        }\n        return this;\n    }\n    prepend(...children) {\n        for (const child of children) {\n            if (child === undefined)\n                continue;\n            else if (child instanceof DomNode)\n                child.appendTo(this, 0);\n            else if (typeof child === \"string\")\n                this.prependText(child);\n            else {\n                Object.assign(this.htmlElement, child);\n                if (child.style)\n                    this.style(child.style);\n            }\n        }\n        return this;\n    }\n    append(...children) {\n        for (const child of children) {\n            if (child === undefined)\n                continue;\n            else if (child instanceof DomNode)\n                child.appendTo(this);\n            else if (typeof child === \"string\")\n                this.appendText(child);\n            else {\n                Object.assign(this.htmlElement, child);\n                if (child.style)\n                    this.style(child.style);\n            }\n        }\n        return this;\n    }\n    isVisible() {\n        if (this.parent) {\n            return this.parent.isVisible() ||\n                this.parent.htmlElement === document.body;\n        }\n        return false;\n    }\n    notifyVisibility() {\n        this.emit(\"visible\", ...[]);\n        this.children.forEach((child) => child.notifyVisibility());\n    }\n    appendTo(parent, index) {\n        if (index === undefined || index >= parent.htmlElement.childNodes.length) {\n            parent.htmlElement.appendChild(this.htmlElement);\n        }\n        else {\n            const referenceNode = parent.htmlElement.childNodes[index];\n            parent.htmlElement.insertBefore(this.htmlElement, referenceNode);\n        }\n        super.appendTo(parent, index);\n        if (this.isVisible())\n            this.notifyVisibility();\n        return this;\n    }\n    clear(...except) {\n        super.clear(...except);\n        if (this.children.length === 0)\n            this.htmlElement.innerHTML = \"\";\n        return this;\n    }\n    remove() {\n        if (this.removed)\n            return;\n        this.emit(\"remove\", ...[]);\n        this.htmlElement.remove();\n        super.remove();\n    }\n    set text(text) {\n        this.clear();\n        if (text)\n            this.appendText(text);\n    }\n    get text() {\n        return this.htmlElement.textContent ?? \"\";\n    }\n    addClass(...classNames) {\n        this.htmlElement.classList.add(...classNames);\n        return this;\n    }\n    hasClass(className) {\n        return this.htmlElement.classList.contains(className);\n    }\n    removeClass(...classNames) {\n        this.htmlElement.classList.remove(...classNames);\n        return this;\n    }\n    style(styles) {\n        if (typeof styles === \"string\") {\n            return this.htmlElement.style.getPropertyValue(styles);\n        }\n        else {\n            Object.assign(this.htmlElement.style, styles);\n            return this;\n        }\n    }\n    onDom(type, listener, options) {\n        this.htmlElement.addEventListener(type, listener, options);\n        return this;\n    }\n    offDom(type, listener, options) {\n        this.htmlElement.removeEventListener(type, listener, options);\n        return this;\n    }\n    calculateRect() {\n        return this.htmlElement.getBoundingClientRect();\n    }\n    clone() {\n        return new DomNode(this.htmlElement.cloneNode(true));\n    }\n}\n//# sourceMappingURL=DomNode.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/dom/DomNode.js?");

/***/ }),

/***/ "../app-module/lib/dom/QueriedDomNode.js":
/*!***********************************************!*\
  !*** ../app-module/lib/dom/QueriedDomNode.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ QueriedDomNode)\n/* harmony export */ });\n/* harmony import */ var _DomNode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./DomNode.js */ \"../app-module/lib/dom/DomNode.js\");\n\nclass QueriedDomNode extends _DomNode_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor(selector) {\n        super(document.querySelector(selector));\n    }\n    isVisible() {\n        return true;\n    }\n}\n//# sourceMappingURL=QueriedDomNode.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/dom/QueriedDomNode.js?");

/***/ }),

/***/ "../app-module/lib/dom/WindowEventTreeNode.js":
/*!****************************************************!*\
  !*** ../app-module/lib/dom/WindowEventTreeNode.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WindowEventTreeNode)\n/* harmony export */ });\n/* harmony import */ var _common_module_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/ts */ \"../ts-module/lib/index.js\");\n\nclass WindowEventTreeNode extends _common_module_ts__WEBPACK_IMPORTED_MODULE_0__.EventTreeNode {\n    listeners = [];\n    onWindow(type, listener, options) {\n        const boundListener = (event) => {\n            listener.call(this, event);\n        };\n        window.addEventListener(type, boundListener, options);\n        this.listeners.push({\n            type,\n            listener: boundListener,\n            options,\n            originalListener: listener,\n        });\n        return this;\n    }\n    offWindow(type, listener, options) {\n        const index = this.listeners.findIndex((l) => l.type === type && l.originalListener === listener);\n        if (index !== -1) {\n            const { listener: boundListener } = this.listeners[index];\n            window.removeEventListener(type, boundListener, options);\n            this.listeners.splice(index, 1);\n        }\n        return this;\n    }\n    remove() {\n        this.listeners.forEach(({ type, listener, options }) => window.removeEventListener(type, listener, options));\n        this.listeners = [];\n        super.remove();\n    }\n}\n//# sourceMappingURL=WindowEventTreeNode.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/dom/WindowEventTreeNode.js?");

/***/ }),

/***/ "../app-module/lib/dom/el.js":
/*!***********************************!*\
  !*** ../app-module/lib/dom/el.js ***!
  \***********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ el)\n/* harmony export */ });\n/* harmony import */ var _common_module_universal_page__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/universal-page */ \"../universal-page-module/lib/index.js\");\n/* harmony import */ var _DomNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./DomNode.js */ \"../app-module/lib/dom/DomNode.js\");\n\n\nfunction el(elementOrSelector, ...children) {\n    return new _DomNode_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](elementOrSelector, ...children);\n}\n_common_module_universal_page__WEBPACK_IMPORTED_MODULE_0__.el.impl = el;\n_common_module_universal_page__WEBPACK_IMPORTED_MODULE_0__.html.impl = (htmlContent) => {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(htmlContent, \"text/html\");\n    return new _DomNode_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"](doc.body.firstChild);\n};\n//# sourceMappingURL=el.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/dom/el.js?");

/***/ }),

/***/ "../app-module/lib/i18n/I18nMessageManager.js":
/*!****************************************************!*\
  !*** ../app-module/lib/i18n/I18nMessageManager.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass I18nMessageManager {\n    messages = {};\n    addMessage(language, key, message) {\n        if (!this.messages[language]) {\n            this.messages[language] = {};\n        }\n        this.messages[language][key] = message;\n    }\n    addMessages(language, messages) {\n        if (!this.messages[language]) {\n            this.messages[language] = {};\n        }\n        this.messages[language] = { ...this.messages[language], ...messages };\n    }\n    addMessagesBulk(messages) {\n        for (const [language, messageDictionary] of Object.entries(messages)) {\n            if (!this.messages[language]) {\n                this.messages[language] = {};\n            }\n            this.messages[language] = {\n                ...this.messages[language],\n                ...messageDictionary,\n            };\n        }\n    }\n    getMessage(language, key) {\n        const path = key.split(\".\");\n        let current = this.messages[language];\n        if (!current) {\n            console.error(`Language \"${language}\" not exists.`);\n            return \"\";\n        }\n        for (const segment of path) {\n            if (current[segment] === undefined) {\n                console.error(`Message key \"${key}\" not exists in language \"${language}\".`);\n                return \"\";\n            }\n            current = current[segment];\n        }\n        if (typeof current !== \"string\") {\n            console.error(`The value for \"${key}\" is not a string.`);\n            return \"\";\n        }\n        return current;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new I18nMessageManager());\n//# sourceMappingURL=I18nMessageManager.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/i18n/I18nMessageManager.js?");

/***/ }),

/***/ "../app-module/lib/i18n/msg.js":
/*!*************************************!*\
  !*** ../app-module/lib/i18n/msg.js ***!
  \*************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ msg)\n/* harmony export */ });\n/* harmony import */ var _utils_BrowserInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../utils/BrowserInfo.js */ \"../app-module/lib/utils/BrowserInfo.js\");\n/* harmony import */ var _I18nMessageManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./I18nMessageManager.js */ \"../app-module/lib/i18n/I18nMessageManager.js\");\n\n\nfunction msg(key, params) {\n    const message = _I18nMessageManager_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getMessage(_utils_BrowserInfo_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].languageCode, key);\n    if (!params)\n        return message;\n    return message.replace(/%\\{(\\w+)\\}/g, (match, paramKey) => {\n        const replacement = params[paramKey];\n        return replacement !== undefined ? String(replacement) : match;\n    });\n}\n//# sourceMappingURL=msg.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/i18n/msg.js?");

/***/ }),

/***/ "../app-module/lib/index.js":
/*!**********************************!*\
  !*** ../app-module/lib/index.js ***!
  \**********************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BodyNode: () => (/* reexport safe */ _dom_BodyNode_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   BrowserInfo: () => (/* reexport safe */ _utils_BrowserInfo_js__WEBPACK_IMPORTED_MODULE_11__[\"default\"]),\n/* harmony export */   DomNode: () => (/* reexport safe */ _dom_DomNode_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   DomUtils: () => (/* reexport safe */ _utils_DomUtils_js__WEBPACK_IMPORTED_MODULE_12__[\"default\"]),\n/* harmony export */   FontLoader: () => (/* reexport safe */ _loaders_FontLoader_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   I18nMessageManager: () => (/* reexport safe */ _i18n_I18nMessageManager_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   ImageOptimizer: () => (/* reexport safe */ _utils_ImageOptimizer_js__WEBPACK_IMPORTED_MODULE_13__[\"default\"]),\n/* harmony export */   QueriedDomNode: () => (/* reexport safe */ _dom_QueriedDomNode_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   Router: () => (/* reexport safe */ _route_Router_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   SPAInitializer: () => (/* reexport safe */ _SPAInitializer_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]),\n/* harmony export */   Store: () => (/* reexport safe */ _store_Store_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]),\n/* harmony export */   StyleUtils: () => (/* reexport safe */ _utils_StyleUtils_js__WEBPACK_IMPORTED_MODULE_14__[\"default\"]),\n/* harmony export */   View: () => (/* reexport safe */ _route_View_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   WebSocketClient: () => (/* reexport safe */ _websocket_WebSocketClient_js__WEBPACK_IMPORTED_MODULE_15__[\"default\"]),\n/* harmony export */   el: () => (/* reexport safe */ _dom_el_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   msg: () => (/* reexport safe */ _i18n_msg_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _dom_BodyNode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dom/BodyNode.js */ \"../app-module/lib/dom/BodyNode.js\");\n/* harmony import */ var _dom_DomNode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dom/DomNode.js */ \"../app-module/lib/dom/DomNode.js\");\n/* harmony import */ var _dom_el_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./dom/el.js */ \"../app-module/lib/dom/el.js\");\n/* harmony import */ var _dom_QueriedDomNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./dom/QueriedDomNode.js */ \"../app-module/lib/dom/QueriedDomNode.js\");\n/* harmony import */ var _i18n_I18nMessageManager_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./i18n/I18nMessageManager.js */ \"../app-module/lib/i18n/I18nMessageManager.js\");\n/* harmony import */ var _i18n_msg_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./i18n/msg.js */ \"../app-module/lib/i18n/msg.js\");\n/* harmony import */ var _loaders_FontLoader_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./loaders/FontLoader.js */ \"../app-module/lib/loaders/FontLoader.js\");\n/* harmony import */ var _route_Router_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./route/Router.js */ \"../app-module/lib/route/Router.js\");\n/* harmony import */ var _route_View_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./route/View.js */ \"../app-module/lib/route/View.js\");\n/* harmony import */ var _SPAInitializer_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./SPAInitializer.js */ \"../app-module/lib/SPAInitializer.js\");\n/* harmony import */ var _store_Store_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./store/Store.js */ \"../app-module/lib/store/Store.js\");\n/* harmony import */ var _utils_BrowserInfo_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/BrowserInfo.js */ \"../app-module/lib/utils/BrowserInfo.js\");\n/* harmony import */ var _utils_DomUtils_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/DomUtils.js */ \"../app-module/lib/utils/DomUtils.js\");\n/* harmony import */ var _utils_ImageOptimizer_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./utils/ImageOptimizer.js */ \"../app-module/lib/utils/ImageOptimizer.js\");\n/* harmony import */ var _utils_StyleUtils_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./utils/StyleUtils.js */ \"../app-module/lib/utils/StyleUtils.js\");\n/* harmony import */ var _websocket_WebSocketClient_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./websocket/WebSocketClient.js */ \"../app-module/lib/websocket/WebSocketClient.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_route_Router_js__WEBPACK_IMPORTED_MODULE_7__, _SPAInitializer_js__WEBPACK_IMPORTED_MODULE_9__]);\n([_route_Router_js__WEBPACK_IMPORTED_MODULE_7__, _SPAInitializer_js__WEBPACK_IMPORTED_MODULE_9__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/index.js?");

/***/ }),

/***/ "../app-module/lib/loaders/FontLoader.js":
/*!***********************************************!*\
  !*** ../app-module/lib/loaders/FontLoader.js ***!
  \***********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _common_module_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/ts */ \"../ts-module/lib/index.js\");\n\nclass FontLoader extends _common_module_ts__WEBPACK_IMPORTED_MODULE_0__.ResourceLoader {\n    async loadResource(fontName) {\n        const loadPromise = (async () => {\n            if (\"fonts\" in document) {\n                await document.fonts.load(`1em ${fontName}`);\n                await document.fonts.ready;\n            }\n            else {\n                const span = window.document.createElement(\"span\");\n                span.style.fontFamily = \"sans-serif\";\n                span.style.position = \"absolute\";\n                span.style.visibility = \"hidden\";\n                span.style.fontSize = \"72px\";\n                span.textContent = \"FontCheck\";\n                window.document.body.appendChild(span);\n                const initialWidth = span.offsetWidth;\n                span.style.fontFamily = `${fontName}, sans-serif`;\n                await new Promise((resolve) => {\n                    const checkInterval = setInterval(() => {\n                        if (span.offsetWidth !== initialWidth) {\n                            clearInterval(checkInterval);\n                            document.body.removeChild(span);\n                            resolve();\n                        }\n                    }, 100);\n                });\n            }\n            this.pendingLoads.delete(fontName);\n            return true;\n        })();\n        this.pendingLoads.set(fontName, loadPromise);\n        return await loadPromise;\n    }\n    cleanup(_) {\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new FontLoader());\n//# sourceMappingURL=FontLoader.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/loaders/FontLoader.js?");

/***/ }),

/***/ "../app-module/lib/route/Router.js":
/*!*****************************************!*\
  !*** ../app-module/lib/route/Router.js ***!
  \*****************************************/
/***/ ((__webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(__webpack_module__, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _common_module_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/ts */ \"../ts-module/lib/index.js\");\n\nif (!window.URLPattern) {\n    await __webpack_require__.e(/*! import() */ \"vendors-app-module_node_modules_urlpattern-polyfill_index_js\").then(__webpack_require__.bind(__webpack_require__, /*! urlpattern-polyfill */ \"../app-module/node_modules/urlpattern-polyfill/index.js\"));\n}\nclass Router extends _common_module_ts__WEBPACK_IMPORTED_MODULE_0__.EventContainer {\n    prefix = \"\";\n    routes = [];\n    isViewOpening = false;\n    activeViews = [];\n    constructor() {\n        super();\n        window.addEventListener(\"popstate\", (event) => this.updateActiveViews(event.state));\n    }\n    openView(View, data) {\n        this.isViewOpening = true;\n        const view = new View();\n        view.changeData(data);\n        this.activeViews.push(view);\n        this.isViewOpening = false;\n    }\n    add(pathname, View, exclude) {\n        const pathnames = Array.isArray(pathname) ? pathname : [pathname];\n        const urlPatterns = pathnames.map((path) => new URLPattern({ pathname: `${this.prefix}${path}` }));\n        const excludePatterns = Array.isArray(exclude)\n            ? exclude.map((path) => new URLPattern({ pathname: `${this.prefix}${path}` }))\n            : [];\n        this.routes.push({ urlPatterns, excludePatterns, View });\n        const urlPatternParams = urlPatterns.find((pattern) => pattern.test({ pathname: location.pathname }))?.exec({ pathname: location.pathname })?.pathname.groups;\n        const excludePatternParams = excludePatterns.find((pattern) => pattern.test({ pathname: location.pathname }))?.exec({ pathname: location.pathname })?.pathname.groups;\n        if (urlPatternParams && !excludePatternParams) {\n            this.openView(View, urlPatternParams);\n        }\n        return this;\n    }\n    updateActiveViews(data) {\n        for (const route of this.routes) {\n            const openingView = this.activeViews.find((view) => view instanceof route.View);\n            const urlPatternParams = route.urlPatterns.find((pattern) => pattern.test({ pathname: location.pathname }))?.exec({ pathname: location.pathname })?.pathname.groups;\n            const excludePatternParams = route.excludePatterns.find((pattern) => pattern.test({ pathname: location.pathname }))?.exec({ pathname: location.pathname })?.pathname.groups;\n            if (urlPatternParams) {\n                if (data)\n                    Object.assign(data, urlPatternParams);\n                else\n                    data = urlPatternParams;\n            }\n            delete data?.[\"0\"];\n            if (urlPatternParams && !excludePatternParams) {\n                openingView\n                    ? openingView.changeData(data)\n                    : this.openView(route.View, data);\n            }\n            else if (openingView) {\n                openingView.close();\n                _common_module_ts__WEBPACK_IMPORTED_MODULE_0__.ArrayUtils.pull(this.activeViews, openingView);\n            }\n        }\n    }\n    performNavigation(pathname, data, replace) {\n        replace\n            ? history.replaceState(undefined, \"\", `${this.prefix}${pathname}`)\n            : history.pushState(undefined, \"\", `${this.prefix}${pathname}`);\n        this.emit(\"routeChanged\", pathname, data);\n        this.updateActiveViews(data);\n        window.scrollTo(0, 0);\n    }\n    go(pathname, data) {\n        if (location.pathname !== `${this.prefix}${pathname}`) {\n            if (this.isViewOpening) {\n                setTimeout(() => this.performNavigation(pathname, data, false), 0);\n            }\n            else {\n                this.performNavigation(pathname, data, false);\n            }\n        }\n    }\n    goWithoutHistory(pathname, data) {\n        if (location.pathname !== `${this.prefix}${pathname}`) {\n            if (this.isViewOpening) {\n                setTimeout(() => this.performNavigation(pathname, data, true), 0);\n            }\n            else {\n                this.performNavigation(pathname, data, true);\n            }\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new Router());\n//# sourceMappingURL=Router.js.map\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } }, 1);\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/route/Router.js?");

/***/ }),

/***/ "../app-module/lib/route/View.js":
/*!***************************************!*\
  !*** ../app-module/lib/route/View.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ View)\n/* harmony export */ });\nclass View {\n    eventListeners = new Map();\n    container;\n    changeData(data) { }\n    addViewManagedEvent(target, eventName, listener) {\n        if (!this.eventListeners.has(target)) {\n            this.eventListeners.set(target, new Map());\n        }\n        const targetListeners = this.eventListeners.get(target);\n        targetListeners.set(eventName, listener);\n        target.on(eventName, listener);\n        return this;\n    }\n    removeAllEvents() {\n        for (const [target, listeners] of this.eventListeners) {\n            for (const [eventName, listener] of listeners) {\n                target.off(eventName, listener);\n            }\n        }\n        this.eventListeners.clear();\n    }\n    close() {\n        this.removeAllEvents();\n        this.container.remove();\n    }\n}\n//# sourceMappingURL=View.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/route/View.js?");

/***/ }),

/***/ "../app-module/lib/store/Store.js":
/*!****************************************!*\
  !*** ../app-module/lib/store/Store.js ***!
  \****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Store)\n/* harmony export */ });\n/* harmony import */ var _common_module_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/ts */ \"../ts-module/lib/index.js\");\n\nclass Store {\n    prefix;\n    static getStorage(permanent) {\n        return permanent ? localStorage : sessionStorage;\n    }\n    static isStorageAvailable() {\n        try {\n            const testKey = \"__test__\";\n            sessionStorage.setItem(testKey, \"test\");\n            sessionStorage.removeItem(testKey);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    constructor(name) {\n        if (!_common_module_ts__WEBPACK_IMPORTED_MODULE_0__.StringUtils.isKebabCase(name)) {\n            throw new Error(\"Name must be in kebab-case format (lowercase and hyphens only).\");\n        }\n        this.prefix = `${name}/`;\n    }\n    getFullKey(key) {\n        return this.prefix + key;\n    }\n    static isQuotaExceededError(e) {\n        return e instanceof DOMException && (e.code === 22 ||\n            e.code === 1014 ||\n            e.name === \"QuotaExceededError\" ||\n            e.name === \"NS_ERROR_DOM_QUOTA_REACHED\");\n    }\n    setValue(key, value, permanent) {\n        const storage = Store.getStorage(permanent);\n        const fullKey = this.getFullKey(key);\n        try {\n            storage.setItem(fullKey, JSON.stringify(value));\n        }\n        catch (e) {\n            if (Store.isQuotaExceededError(e)) {\n                storage.clear();\n                location.reload();\n            }\n            else {\n                throw e;\n            }\n        }\n    }\n    setTemporary(key, value) {\n        this.setValue(key, value, false);\n    }\n    setPermanent(key, value) {\n        this.setValue(key, value, true);\n    }\n    get(key) {\n        const fullKey = this.getFullKey(key);\n        const value = sessionStorage.getItem(fullKey) ??\n            localStorage.getItem(fullKey);\n        if (value === null)\n            return undefined;\n        try {\n            return _common_module_ts__WEBPACK_IMPORTED_MODULE_0__.JsonUtils.parseWithUndefined(value);\n        }\n        catch (e) {\n            console.error(`Failed to parse ${fullKey}: ${value}`);\n            console.error(e);\n        }\n    }\n    getAll() {\n        const result = {};\n        const processStorage = (storage) => {\n            for (let i = 0; i < storage.length; i++) {\n                const key = storage.key(i);\n                if (key?.startsWith(this.prefix)) {\n                    const value = storage.getItem(key);\n                    if (value !== null) {\n                        const parsedKey = key.slice(this.prefix.length);\n                        try {\n                            result[parsedKey] = _common_module_ts__WEBPACK_IMPORTED_MODULE_0__.JsonUtils.parseWithUndefined(value);\n                        }\n                        catch (e) {\n                            console.error(`Failed to parse ${key}: ${value}`);\n                            console.error(e);\n                        }\n                    }\n                }\n            }\n        };\n        processStorage(sessionStorage);\n        processStorage(localStorage);\n        return result;\n    }\n    isPermanent(key) {\n        return localStorage.getItem(this.getFullKey(key)) !== null;\n    }\n    remove(...keys) {\n        keys.forEach((key) => {\n            const fullKey = this.getFullKey(key);\n            sessionStorage.removeItem(fullKey);\n            localStorage.removeItem(fullKey);\n        });\n    }\n    clear() {\n        [sessionStorage, localStorage].forEach((storage) => {\n            for (let i = storage.length - 1; i >= 0; i--) {\n                const key = storage.key(i);\n                if (key?.startsWith(this.prefix)) {\n                    storage.removeItem(key);\n                }\n            }\n        });\n    }\n}\n//# sourceMappingURL=Store.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/store/Store.js?");

/***/ }),

/***/ "../app-module/lib/utils/BrowserInfo.js":
/*!**********************************************!*\
  !*** ../app-module/lib/utils/BrowserInfo.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _store_Store_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../store/Store.js */ \"../app-module/lib/store/Store.js\");\n\nclass BrowserInfo {\n    _isAndroid;\n    _isIOS;\n    _isPageVisible = !document.hidden;\n    store = new _store_Store_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"browser-info\");\n    constructor() {\n        document.addEventListener(\"visibilitychange\", () => {\n            this._isPageVisible = !document.hidden;\n        });\n    }\n    isAndroid() {\n        return this._isAndroid ??\n            (this._isAndroid = /Android/i.test(navigator.userAgent));\n    }\n    isIOS() {\n        return this._isIOS ??\n            (this._isIOS = /iPhone|iPad|iPod/i.test(navigator.userAgent));\n    }\n    isMobileDevice() {\n        return this.isAndroid() || this.isIOS();\n    }\n    isPageVisible() {\n        return this._isPageVisible;\n    }\n    hasPageFocus() {\n        return document.hasFocus();\n    }\n    normalizeLanguageCode(lang) {\n        const [mainLang, region] = lang.toLowerCase().split(\"-\");\n        if (mainLang === \"zh\") {\n            return region === \"tw\" || region === \"hk\" ? \"zh-TW\" : \"zh-CN\";\n        }\n        return mainLang;\n    }\n    get languageCode() {\n        const storedLang = this.store.get(\"lang\");\n        if (storedLang)\n            return storedLang;\n        const fullLang = navigator.language ||\n            (navigator.languages && navigator.languages[0]) || \"en-US\";\n        return this.normalizeLanguageCode(fullLang);\n    }\n    set languageCode(lang) {\n        this.store.setPermanent(\"lang\", this.normalizeLanguageCode(lang));\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new BrowserInfo());\n//# sourceMappingURL=BrowserInfo.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/utils/BrowserInfo.js?");

/***/ }),

/***/ "../app-module/lib/utils/DomUtils.js":
/*!*******************************************!*\
  !*** ../app-module/lib/utils/DomUtils.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _BrowserInfo_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BrowserInfo.js */ \"../app-module/lib/utils/BrowserInfo.js\");\n\nconst LONG_PRESS_DURATION = 500;\nclass DomUtils {\n    enhanceWithContextMenu(dom, handler) {\n        if (_BrowserInfo_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isIOS()) {\n            this.simulateContextMenuOnIOS(dom, handler);\n        }\n        else {\n            dom.onDom(\"contextmenu\", (event) => {\n                event.preventDefault();\n                handler(event);\n            });\n        }\n    }\n    simulateContextMenuOnIOS(dom, handler) {\n        let longPressTimer;\n        dom.style({ \"-webkit-user-select\": \"none\", \"user-select\": \"none\" });\n        const startLongPress = (event) => {\n            const touch = event.touches[0];\n            const simulatedEvent = new MouseEvent(\"contextmenu\", {\n                bubbles: true,\n                cancelable: true,\n                view: window,\n                clientX: touch?.clientX ?? 0,\n                clientY: touch?.clientY ?? 0,\n            });\n            longPressTimer = window.setTimeout(() => handler(simulatedEvent), LONG_PRESS_DURATION);\n        };\n        const cancelLongPress = () => {\n            clearTimeout(longPressTimer);\n        };\n        dom.onDom(\"touchstart\", startLongPress)\n            .onDom(\"touchend\", cancelLongPress)\n            .onDom(\"touchmove\", cancelLongPress);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new DomUtils());\n//# sourceMappingURL=DomUtils.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/utils/DomUtils.js?");

/***/ }),

/***/ "../app-module/lib/utils/ImageOptimizer.js":
/*!*************************************************!*\
  !*** ../app-module/lib/utils/ImageOptimizer.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass ImageOptimizer {\n    MAGIC_NUMBERS = {\n        GIF: [0x47, 0x49, 0x46],\n        GRAPHIC_CONTROL_EXTENSION: [0x21, 0xF9, 0x04],\n    };\n    DEFAULT_OPTIONS = {\n        contentType: \"image/jpeg\",\n        extension: \"jpg\",\n        quality: 0.8,\n    };\n    readFileAsBuffer(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(new Uint8Array(reader.result));\n            reader.onerror = () => reject(new Error(\"Failed to read file\"));\n            reader.readAsArrayBuffer(file);\n        });\n    }\n    readFileAsDataURL(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = (e) => resolve(e.target?.result);\n            reader.onerror = () => reject(new Error(\"Failed to read file\"));\n            reader.readAsDataURL(file);\n        });\n    }\n    loadImage(dataUrl) {\n        return new Promise((resolve, reject) => {\n            const img = new Image();\n            img.onload = () => resolve(img);\n            img.onerror = () => reject(new Error(\"Failed to load image\"));\n            img.src = dataUrl;\n        });\n    }\n    isGifFormat(buffer) {\n        return this.MAGIC_NUMBERS.GIF.every((byte, index) => buffer[index] === byte);\n    }\n    containsMultipleFrames(buffer) {\n        let frameCount = 0;\n        for (let i = 0; i < buffer.length - this.MAGIC_NUMBERS.GRAPHIC_CONTROL_EXTENSION.length; i++) {\n            const isFrameMarker = this.MAGIC_NUMBERS.GRAPHIC_CONTROL_EXTENSION.every((byte, offset) => buffer[i + offset] === byte);\n            if (isFrameMarker) {\n                frameCount++;\n                if (frameCount > 1)\n                    return true;\n            }\n        }\n        return false;\n    }\n    async isAnimatedGif(file) {\n        try {\n            const buffer = await this.readFileAsBuffer(file);\n            if (!this.isGifFormat(buffer)) {\n                throw new Error(\"Invalid GIF format\");\n            }\n            return this.containsMultipleFrames(buffer);\n        }\n        catch (error) {\n            throw new Error(`Failed to analyze GIF: ${error.message}`);\n        }\n    }\n    calculateOptimalDimensions(originalDimensions, targetDimensions) {\n        const { width: origWidth, height: origHeight } = originalDimensions;\n        const { width: targetWidth, height: targetHeight } = targetDimensions;\n        if (origWidth <= targetWidth && origHeight <= targetHeight) {\n            return { width: origWidth, height: origHeight };\n        }\n        const scaleFactor = Math.min(targetWidth / origWidth, targetHeight / origHeight);\n        return {\n            width: Math.round(origWidth * scaleFactor),\n            height: Math.round(origHeight * scaleFactor),\n        };\n    }\n    async optimizeImageUsingCanvas(image, dimensions) {\n        const canvas = document.createElement(\"canvas\");\n        const ctx = canvas.getContext(\"2d\");\n        if (!ctx) {\n            throw new Error(\"Failed to get canvas context\");\n        }\n        canvas.width = dimensions.width;\n        canvas.height = dimensions.height;\n        ctx.drawImage(image, 0, 0, dimensions.width, dimensions.height);\n        return new Promise((resolve, reject) => {\n            canvas.toBlob((blob) => {\n                if (blob)\n                    resolve(blob);\n                else\n                    reject(new Error(\"Canvas to Blob conversion failed\"));\n            }, this.DEFAULT_OPTIONS.contentType, this.DEFAULT_OPTIONS.quality);\n        });\n    }\n    async optimizeImage(file, maxWidth, maxHeight) {\n        if (!file.type.startsWith(\"image/\")) {\n            throw new Error(\"The provided file is not an image.\");\n        }\n        if (file.type === \"image/gif\") {\n            const isAnimated = await this.isAnimatedGif(file);\n            if (isAnimated) {\n                throw new Error(\"Animated GIFs are not compressed.\");\n            }\n        }\n        const dataUrl = await this.readFileAsDataURL(file);\n        const image = await this.loadImage(dataUrl);\n        const optimalDimensions = this.calculateOptimalDimensions({ width: image.width, height: image.height }, { width: maxWidth, height: maxHeight });\n        const optimizedBlob = await this.optimizeImageUsingCanvas(image, optimalDimensions);\n        if (optimizedBlob.size >= file.size) {\n            return file;\n        }\n        const newFileName = file.name.replace(/\\.[^.]+$/, `.${this.DEFAULT_OPTIONS.extension}`);\n        return new File([optimizedBlob], newFileName, {\n            type: this.DEFAULT_OPTIONS.contentType,\n        });\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new ImageOptimizer());\n//# sourceMappingURL=ImageOptimizer.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/utils/ImageOptimizer.js?");

/***/ }),

/***/ "../app-module/lib/utils/StyleUtils.js":
/*!*********************************************!*\
  !*** ../app-module/lib/utils/StyleUtils.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass StyleUtils {\n    applyTextStroke(target, width, color) {\n        let shadow = \"\";\n        for (let i = -width; i <= width; i++) {\n            for (let j = -width; j <= width; j++) {\n                if (i !== 0 || j !== 0) {\n                    shadow += `${i}px ${j}px 0 ${color},`;\n                }\n            }\n        }\n        shadow = shadow.slice(0, -1);\n        target.style({ textShadow: shadow });\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new StyleUtils());\n//# sourceMappingURL=StyleUtils.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/utils/StyleUtils.js?");

/***/ }),

/***/ "../app-module/lib/websocket/WebSocketClient.js":
/*!******************************************************!*\
  !*** ../app-module/lib/websocket/WebSocketClient.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ WebSocketClient)\n/* harmony export */ });\n/* harmony import */ var _common_module_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/ts */ \"../ts-module/lib/index.js\");\n\nclass WebSocketClient extends _common_module_ts__WEBPACK_IMPORTED_MODULE_0__.EventContainer {\n    url;\n    socket;\n    messageHandlers = [];\n    isConnected() {\n        return this.socket !== undefined;\n    }\n    constructor(url) {\n        super();\n        this.url = url;\n        this.connect();\n    }\n    connect() {\n        const socket = new WebSocket(this.url);\n        socket.onopen = () => {\n            this.socket = socket;\n            this.emit(\"connect\");\n        };\n        socket.onmessage = (event) => {\n            for (const handler of this.messageHandlers) {\n                handler(event.data);\n            }\n        };\n        socket.onclose = () => {\n            this.socket = undefined;\n            this.emit(\"disconnect\");\n            setTimeout(() => this.connect(), 1000);\n        };\n    }\n    send(data) {\n        if (!this.socket)\n            throw new Error(\"Socket is not connected\");\n        this.socket.send(data);\n    }\n    onMessage(handler) {\n        this.messageHandlers.push(handler);\n    }\n}\n//# sourceMappingURL=WebSocketClient.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../app-module/lib/websocket/WebSocketClient.js?");

/***/ }),

/***/ "../markdown-module/lib/MarkdownConverter.js":
/*!***************************************************!*\
  !*** ../markdown-module/lib/MarkdownConverter.js ***!
  \***************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var dompurify__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dompurify */ \"../markdown-module/node_modules/dompurify/dist/purify.es.mjs\");\n/* harmony import */ var marked__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! marked */ \"../markdown-module/node_modules/marked/lib/marked.esm.js\");\n/* harmony import */ var turndown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! turndown */ \"../markdown-module/node_modules/turndown/lib/turndown.browser.es.js\");\n\n\n\nconst turndownService = new turndown__WEBPACK_IMPORTED_MODULE_2__[\"default\"]({ codeBlockStyle: \"fenced\" });\nturndownService.addRule(\"strikethrough\", {\n    filter: [\"del\", \"s\", \"strike\"],\n    replacement: (content) => \"~\" + content + \"~\",\n});\nturndownService.addRule(\"heading\", {\n    filter: \"h1\",\n    replacement: (content) => \"# \" + content,\n});\nclass MarkdownConverter {\n    async convertMarkdownToHtml(markdown) {\n        return dompurify__WEBPACK_IMPORTED_MODULE_0__[\"default\"].sanitize(await (0,marked__WEBPACK_IMPORTED_MODULE_1__.marked)(markdown));\n    }\n    convertHtmlToMarkdown(html) {\n        return turndownService.turndown(html);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new MarkdownConverter());\n//# sourceMappingURL=MarkdownConverter.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../markdown-module/lib/MarkdownConverter.js?");

/***/ }),

/***/ "../markdown-module/lib/index.js":
/*!***************************************!*\
  !*** ../markdown-module/lib/index.js ***!
  \***************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MarkdownConverter: () => (/* reexport safe */ _MarkdownConverter_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _MarkdownConverter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./MarkdownConverter.js */ \"../markdown-module/lib/MarkdownConverter.js\");\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../markdown-module/lib/index.js?");

/***/ }),

/***/ "../markdown-module/node_modules/dompurify/dist/purify.es.mjs":
/*!********************************************************************!*\
  !*** ../markdown-module/node_modules/dompurify/dist/purify.es.mjs ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ purify)\n/* harmony export */ });\n/*! @license DOMPurify 3.2.4 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.4/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.4';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : {};\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : {};\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w]/g, currentNode.innerHTML) && regExpTest(/<[/\\w]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      let value = name === 'value' ? attrValue : stringTrim(attrValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Remove attribute */\n      _removeAttribute(name, currentNode);\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      try {\n        if (namespaceURI) {\n          currentNode.setAttributeNS(namespaceURI, name, value);\n        } else {\n          /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n          currentNode.setAttribute(name, value);\n        }\n        if (_isClobbered(currentNode)) {\n          _forceRemove(currentNode);\n        } else {\n          arrayPop(DOMPurify.removed);\n        }\n      } catch (_) {}\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\n\n//# sourceMappingURL=purify.es.mjs.map\n\n\n//# sourceURL=webpack://@common-module/markdown-editor/../markdown-module/node_modules/dompurify/dist/purify.es.mjs?");

/***/ }),

/***/ "../markdown-module/node_modules/marked/lib/marked.esm.js":
/*!****************************************************************!*\
  !*** ../markdown-module/node_modules/marked/lib/marked.esm.js ***!
  \****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Hooks: () => (/* binding */ _Hooks),\n/* harmony export */   Lexer: () => (/* binding */ _Lexer),\n/* harmony export */   Marked: () => (/* binding */ Marked),\n/* harmony export */   Parser: () => (/* binding */ _Parser),\n/* harmony export */   Renderer: () => (/* binding */ _Renderer),\n/* harmony export */   TextRenderer: () => (/* binding */ _TextRenderer),\n/* harmony export */   Tokenizer: () => (/* binding */ _Tokenizer),\n/* harmony export */   defaults: () => (/* binding */ _defaults),\n/* harmony export */   getDefaults: () => (/* binding */ _getDefaults),\n/* harmony export */   lexer: () => (/* binding */ lexer),\n/* harmony export */   marked: () => (/* binding */ marked),\n/* harmony export */   options: () => (/* binding */ options),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   parseInline: () => (/* binding */ parseInline),\n/* harmony export */   parser: () => (/* binding */ parser),\n/* harmony export */   setOptions: () => (/* binding */ setOptions),\n/* harmony export */   use: () => (/* binding */ use),\n/* harmony export */   walkTokens: () => (/* binding */ walkTokens)\n/* harmony export */ });\n/**\n * marked v15.0.7 - a markdown parser\n * Copyright (c) 2011-2025, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null,\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\nconst noopTest = { exec: () => null };\nfunction edit(regex, opt = '') {\n    let source = typeof regex === 'string' ? regex : regex.source;\n    const obj = {\n        replace: (name, val) => {\n            let valSource = typeof val === 'string' ? val : val.source;\n            valSource = valSource.replace(other.caret, '$1');\n            source = source.replace(name, valSource);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(source, opt);\n        },\n    };\n    return obj;\n}\nconst other = {\n    codeRemoveIndent: /^(?: {1,4}| {0,3}\\t)/gm,\n    outputLinkReplace: /\\\\([\\[\\]])/g,\n    indentCodeCompensation: /^(\\s+)(?:```)/,\n    beginningSpace: /^\\s+/,\n    endingHash: /#$/,\n    startingSpaceChar: /^ /,\n    endingSpaceChar: / $/,\n    nonSpaceChar: /[^ ]/,\n    newLineCharGlobal: /\\n/g,\n    tabCharGlobal: /\\t/g,\n    multipleSpaceGlobal: /\\s+/g,\n    blankLine: /^[ \\t]*$/,\n    doubleBlankLine: /\\n[ \\t]*\\n[ \\t]*$/,\n    blockquoteStart: /^ {0,3}>/,\n    blockquoteSetextReplace: /\\n {0,3}((?:=+|-+) *)(?=\\n|$)/g,\n    blockquoteSetextReplace2: /^ {0,3}>[ \\t]?/gm,\n    listReplaceTabs: /^\\t+/,\n    listReplaceNesting: /^ {1,4}(?=( {4})*[^ ])/g,\n    listIsTask: /^\\[[ xX]\\] /,\n    listReplaceTask: /^\\[[ xX]\\] +/,\n    anyLine: /\\n.*\\n/,\n    hrefBrackets: /^<(.*)>$/,\n    tableDelimiter: /[:|]/,\n    tableAlignChars: /^\\||\\| *$/g,\n    tableRowBlankLine: /\\n[ \\t]*$/,\n    tableAlignRight: /^ *-+: *$/,\n    tableAlignCenter: /^ *:-+: *$/,\n    tableAlignLeft: /^ *:-+ *$/,\n    startATag: /^<a /i,\n    endATag: /^<\\/a>/i,\n    startPreScriptTag: /^<(pre|code|kbd|script)(\\s|>)/i,\n    endPreScriptTag: /^<\\/(pre|code|kbd|script)(\\s|>)/i,\n    startAngleBracket: /^</,\n    endAngleBracket: />$/,\n    pedanticHrefTitle: /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/,\n    unicodeAlphaNumeric: /[\\p{L}\\p{N}]/u,\n    escapeTest: /[&<>\"']/,\n    escapeReplace: /[&<>\"']/g,\n    escapeTestNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/,\n    escapeReplaceNoEncode: /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/g,\n    unescapeTest: /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig,\n    caret: /(^|[^\\[])\\^/g,\n    percentDecode: /%25/g,\n    findPipe: /\\|/g,\n    splitPipe: / \\|/,\n    slashPipe: /\\\\\\|/g,\n    carriageReturn: /\\r\\n|\\r/g,\n    spaceLine: /^ +$/gm,\n    notSpaceStart: /^\\S*/,\n    endingNewline: /\\n$/,\n    listItemRegex: (bull) => new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`),\n    nextBulletRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`),\n    hrRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`),\n    fencesBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`),\n    headingBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`),\n    htmlBeginRegex: (indent) => new RegExp(`^ {0,${Math.min(3, indent - 1)}}<(?:[a-z].*>|!--)`, 'i'),\n};\n/**\n * Block-Level Grammar\n */\nconst newline = /^(?:[ \\t]*(?:\\n|$))+/;\nconst blockCode = /^((?: {4}| {0,3}\\t)[^\\n]+(?:\\n(?:[ \\t]*(?:\\n|$))*)?)+/;\nconst fences = /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/;\nconst hr = /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/;\nconst heading = /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/;\nconst bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nconst lheadingCore = /^(?!bull |blockCode|fences|blockquote|heading|html|table)((?:.|\\n(?!\\s*?\\n|bull |blockCode|fences|blockquote|heading|html|table))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/;\nconst lheading = edit(lheadingCore)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .replace(/\\|table/g, '') // table not in commonmark\n    .getRegex();\nconst lheadingGfm = edit(lheadingCore)\n    .replace(/bull/g, bullet) // lists can interrupt\n    .replace(/blockCode/g, /(?: {4}| {0,3}\\t)/) // indented code blocks can interrupt\n    .replace(/fences/g, / {0,3}(?:`{3,}|~{3,})/) // fenced code blocks can interrupt\n    .replace(/blockquote/g, / {0,3}>/) // blockquote can interrupt\n    .replace(/heading/g, / {0,3}#{1,6}/) // ATX heading can interrupt\n    .replace(/html/g, / {0,3}<[^\\n>]+>\\n/) // block html can interrupt\n    .replace(/table/g, / {0,3}\\|?(?:[:\\- ]*\\|)+[\\:\\- ]*\\n/) // table can interrupt\n    .getRegex();\nconst _paragraph = /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/;\nconst blockText = /^[^\\n]+/;\nconst _blockLabel = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nconst def = edit(/^ {0,3}\\[(label)\\]: *(?:\\n[ \\t]*)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n[ \\t]*)?| *\\n[ \\t]*)(title))? *(?:\\n+|$)/)\n    .replace('label', _blockLabel)\n    .replace('title', /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/)\n    .getRegex();\nconst list = edit(/^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/)\n    .replace(/bull/g, bullet)\n    .getRegex();\nconst _tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|search|section|summary|table|tbody|td|tfoot|th|thead|title'\n    + '|tr|track|ul';\nconst _comment = /<!--(?:-?>|[\\s\\S]*?(?:-->|$))/;\nconst html = edit('^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n[ \\t]*)+\\\\n|$)' // (7) closing tag\n    + ')', 'i')\n    .replace('comment', _comment)\n    .replace('tag', _tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst paragraph = edit(_paragraph)\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockquote = edit(/^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/)\n    .replace('paragraph', paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nconst blockNormal = {\n    blockquote,\n    code: blockCode,\n    def,\n    fences,\n    heading,\n    hr,\n    html,\n    lheading,\n    list,\n    newline,\n    paragraph,\n    table: noopTest,\n    text: blockText,\n};\n/**\n * GFM Block Grammar\n */\nconst gfmTable = edit('^ *([^\\\\n ].*)\\\\n' // Header\n    + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)') // Cells\n    .replace('hr', hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', '(?: {4}| {0,3}\\t)[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', _tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nconst blockGfm = {\n    ...blockNormal,\n    lheading: lheadingGfm,\n    table: gfmTable,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n        .replace('|lheading', '') // setext headings don't interrupt commonmark paragraphs\n        .replace('table', gfmTable) // interrupt paragraphs with table\n        .replace('blockquote', ' {0,3}>')\n        .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n        .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n        .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n        .replace('tag', _tag) // pars can be interrupted by type (6) html blocks\n        .getRegex(),\n};\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nconst blockPedantic = {\n    ...blockNormal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', _comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest, // fences not supported\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(_paragraph)\n        .replace('hr', hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', lheading)\n        .replace('|table', '')\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .replace('|tag', '')\n        .getRegex(),\n};\n/**\n * Inline-Level Grammar\n */\nconst escape$1 = /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/;\nconst inlineCode = /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/;\nconst br = /^( {2,}|\\\\)\\n(?!\\s*$)/;\nconst inlineText = /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/;\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\nconst _punctuation = /[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpace = /[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpace = /[^\\s\\p{P}\\p{S}]/u;\nconst punctuation = edit(/^((?![*_])punctSpace)/, 'u')\n    .replace(/punctSpace/g, _punctuationOrSpace).getRegex();\n// GFM allows ~ inside strong and em for strikethrough\nconst _punctuationGfmStrongEm = /(?!~)[\\p{P}\\p{S}]/u;\nconst _punctuationOrSpaceGfmStrongEm = /(?!~)[\\s\\p{P}\\p{S}]/u;\nconst _notPunctuationOrSpaceGfmStrongEm = /(?:[^\\s\\p{P}\\p{S}]|~)/u;\n// sequences em should skip over [title](link), `code`, <html>\nconst blockSkip = /\\[[^[\\]]*?\\]\\((?:\\\\.|[^\\\\\\(\\)]|\\((?:\\\\.|[^\\\\\\(\\)])*\\))*\\)|`[^`]*?`|<[^<>]*?>/g;\nconst emStrongLDelimCore = /^(?:\\*+(?:((?!\\*)punct)|[^\\s*]))|^_+(?:((?!_)punct)|([^\\s_]))/;\nconst emStrongLDelim = edit(emStrongLDelimCore, 'u')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongLDelimGfm = edit(emStrongLDelimCore, 'u')\n    .replace(/punct/g, _punctuationGfmStrongEm)\n    .getRegex();\nconst emStrongRDelimAstCore = '^[^_*]*?__[^_*]*?\\\\*[^_*]*?(?=__)' // Skip orphan inside strong\n    + '|[^*]+(?=[^*])' // Consume to delim\n    + '|(?!\\\\*)punct(\\\\*+)(?=[\\\\s]|$)' // (1) #*** can only be a Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?!\\\\*)(?=punctSpace|$)' // (2) a***#, a*** can only be a Right Delimiter\n    + '|(?!\\\\*)punctSpace(\\\\*+)(?=notPunctSpace)' // (3) #***a, ***a can only be Left Delimiter\n    + '|[\\\\s](\\\\*+)(?!\\\\*)(?=punct)' // (4) ***# can only be Left Delimiter\n    + '|(?!\\\\*)punct(\\\\*+)(?!\\\\*)(?=punct)' // (5) #***# can be either Left or Right Delimiter\n    + '|notPunctSpace(\\\\*+)(?=notPunctSpace)'; // (6) a***a can be either Left or Right Delimiter\nconst emStrongRDelimAst = edit(emStrongRDelimAstCore, 'gu')\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst emStrongRDelimAstGfm = edit(emStrongRDelimAstCore, 'gu')\n    .replace(/notPunctSpace/g, _notPunctuationOrSpaceGfmStrongEm)\n    .replace(/punctSpace/g, _punctuationOrSpaceGfmStrongEm)\n    .replace(/punct/g, _punctuationGfmStrongEm)\n    .getRegex();\n// (6) Not allowed for _\nconst emStrongRDelimUnd = edit('^[^_*]*?\\\\*\\\\*[^_*]*?_[^_*]*?(?=\\\\*\\\\*)' // Skip orphan inside strong\n    + '|[^_]+(?=[^_])' // Consume to delim\n    + '|(?!_)punct(_+)(?=[\\\\s]|$)' // (1) #___ can only be a Right Delimiter\n    + '|notPunctSpace(_+)(?!_)(?=punctSpace|$)' // (2) a___#, a___ can only be a Right Delimiter\n    + '|(?!_)punctSpace(_+)(?=notPunctSpace)' // (3) #___a, ___a can only be Left Delimiter\n    + '|[\\\\s](_+)(?!_)(?=punct)' // (4) ___# can only be Left Delimiter\n    + '|(?!_)punct(_+)(?!_)(?=punct)', 'gu') // (5) #___# can be either Left or Right Delimiter\n    .replace(/notPunctSpace/g, _notPunctuationOrSpace)\n    .replace(/punctSpace/g, _punctuationOrSpace)\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst anyPunctuation = edit(/\\\\(punct)/, 'gu')\n    .replace(/punct/g, _punctuation)\n    .getRegex();\nconst autolink = edit(/^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/)\n    .replace('scheme', /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/)\n    .replace('email', /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/)\n    .getRegex();\nconst _inlineComment = edit(_comment).replace('(?:-->|$)', '-->').getRegex();\nconst tag = edit('^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>') // CDATA section\n    .replace('comment', _inlineComment)\n    .replace('attribute', /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/)\n    .getRegex();\nconst _inlineLabel = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\nconst link = edit(/^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/)\n    .replace('label', _inlineLabel)\n    .replace('href', /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/)\n    .replace('title', /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/)\n    .getRegex();\nconst reflink = edit(/^!?\\[(label)\\]\\[(ref)\\]/)\n    .replace('label', _inlineLabel)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst nolink = edit(/^!?\\[(ref)\\](?:\\[\\])?/)\n    .replace('ref', _blockLabel)\n    .getRegex();\nconst reflinkSearch = edit('reflink|nolink(?!\\\\()', 'g')\n    .replace('reflink', reflink)\n    .replace('nolink', nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\nconst inlineNormal = {\n    _backpedal: noopTest, // only used for GFM url\n    anyPunctuation,\n    autolink,\n    blockSkip,\n    br,\n    code: inlineCode,\n    del: noopTest,\n    emStrongLDelim,\n    emStrongRDelimAst,\n    emStrongRDelimUnd,\n    escape: escape$1,\n    link,\n    nolink,\n    punctuation,\n    reflink,\n    reflinkSearch,\n    tag,\n    text: inlineText,\n    url: noopTest,\n};\n/**\n * Pedantic Inline Grammar\n */\nconst inlinePedantic = {\n    ...inlineNormal,\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', _inlineLabel)\n        .getRegex(),\n};\n/**\n * GFM Inline Grammar\n */\nconst inlineGfm = {\n    ...inlineNormal,\n    emStrongRDelimAst: emStrongRDelimAstGfm,\n    emStrongLDelim: emStrongLDelimGfm,\n    url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/, 'i')\n        .replace('email', /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/)\n        .getRegex(),\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])((?:\\\\.|[^\\\\])*?(?:\\\\.|[^\\s~\\\\]))\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/,\n};\n/**\n * GFM + Line Breaks Inline Grammar\n */\nconst inlineBreaks = {\n    ...inlineGfm,\n    br: edit(br).replace('{2,}', '*').getRegex(),\n    text: edit(inlineGfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex(),\n};\n/**\n * exports\n */\nconst block = {\n    normal: blockNormal,\n    gfm: blockGfm,\n    pedantic: blockPedantic,\n};\nconst inline = {\n    normal: inlineNormal,\n    gfm: inlineGfm,\n    breaks: inlineBreaks,\n    pedantic: inlinePedantic,\n};\n\n/**\n * Helpers\n */\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n    if (encode) {\n        if (other.escapeTest.test(html)) {\n            return html.replace(other.escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (other.escapeTestNoEncode.test(html)) {\n            return html.replace(other.escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(other.percentDecode, '%');\n    }\n    catch {\n        return null;\n    }\n    return href;\n}\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(other.findPipe, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(other.splitPipe);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells.at(-1)?.trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(other.slashPipe, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && true) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer, rules) {\n    const href = link.href;\n    const title = link.title || null;\n    const text = cap[1].replace(rules.other.outputLinkReplace, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text),\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text,\n    };\n}\nfunction indentCodeCompensation(raw, text, rules) {\n    const matchIndentToCode = raw.match(rules.other.indentCodeCompensation);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(rules.other.beginningSpace);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    rules; // set by the lexer\n    lexer; // set by the lexer\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0],\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(this.rules.other.codeRemoveIndent, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text,\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '', this.rules);\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline.anyPunctuation, '$1') : cap[2],\n                text,\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (this.rules.other.endingHash.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || this.rules.other.endingSpaceChar.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: rtrim(cap[0], '\\n'),\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            let lines = rtrim(cap[0], '\\n').split('\\n');\n            let raw = '';\n            let text = '';\n            const tokens = [];\n            while (lines.length > 0) {\n                let inBlockquote = false;\n                const currentLines = [];\n                let i;\n                for (i = 0; i < lines.length; i++) {\n                    // get lines up to a continuation\n                    if (this.rules.other.blockquoteStart.test(lines[i])) {\n                        currentLines.push(lines[i]);\n                        inBlockquote = true;\n                    }\n                    else if (!inBlockquote) {\n                        currentLines.push(lines[i]);\n                    }\n                    else {\n                        break;\n                    }\n                }\n                lines = lines.slice(i);\n                const currentRaw = currentLines.join('\\n');\n                const currentText = currentRaw\n                    // precede setext continuation with 4 spaces so it isn't a setext\n                    .replace(this.rules.other.blockquoteSetextReplace, '\\n    $1')\n                    .replace(this.rules.other.blockquoteSetextReplace2, '');\n                raw = raw ? `${raw}\\n${currentRaw}` : currentRaw;\n                text = text ? `${text}\\n${currentText}` : currentText;\n                // parse blockquote lines as top level tokens\n                // merge paragraphs if this is a continuation\n                const top = this.lexer.state.top;\n                this.lexer.state.top = true;\n                this.lexer.blockTokens(currentText, tokens, true);\n                this.lexer.state.top = top;\n                // if there is no continuation then we are done\n                if (lines.length === 0) {\n                    break;\n                }\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'code') {\n                    // blockquote continuation cannot be preceded by a code block\n                    break;\n                }\n                else if (lastToken?.type === 'blockquote') {\n                    // include continuation in nested blockquote\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.blockquote(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - oldToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.text.length) + newToken.text;\n                    break;\n                }\n                else if (lastToken?.type === 'list') {\n                    // include continuation in nested list\n                    const oldToken = lastToken;\n                    const newText = oldToken.raw + '\\n' + lines.join('\\n');\n                    const newToken = this.list(newText);\n                    tokens[tokens.length - 1] = newToken;\n                    raw = raw.substring(0, raw.length - lastToken.raw.length) + newToken.raw;\n                    text = text.substring(0, text.length - oldToken.raw.length) + newToken.raw;\n                    lines = newText.substring(tokens.at(-1).raw.length).split('\\n');\n                    continue;\n                }\n            }\n            return {\n                type: 'blockquote',\n                raw,\n                tokens,\n                text,\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: [],\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = this.rules.other.listItemRegex(bull);\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                let raw = '';\n                let itemContents = '';\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(this.rules.other.listReplaceTabs, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let blankLine = !line.trim();\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else if (blankLine) {\n                    indent = cap[1].length + 1;\n                }\n                else {\n                    indent = cap[2].search(this.rules.other.nonSpaceChar); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                if (blankLine && this.rules.other.blankLine.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = this.rules.other.nextBulletRegex(indent);\n                    const hrRegex = this.rules.other.hrRegex(indent);\n                    const fencesBeginRegex = this.rules.other.fencesBeginRegex(indent);\n                    const headingBeginRegex = this.rules.other.headingBeginRegex(indent);\n                    const htmlBeginRegex = this.rules.other.htmlBeginRegex(indent);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        let nextLineWithoutTabs;\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(this.rules.other.listReplaceNesting, '  ');\n                            nextLineWithoutTabs = nextLine;\n                        }\n                        else {\n                            nextLineWithoutTabs = nextLine.replace(this.rules.other.tabCharGlobal, '    ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of html block\n                        if (htmlBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(nextLine)) {\n                            break;\n                        }\n                        if (nextLineWithoutTabs.search(this.rules.other.nonSpaceChar) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLineWithoutTabs.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.replace(this.rules.other.tabCharGlobal, '    ').search(this.rules.other.nonSpaceChar) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLineWithoutTabs.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (this.rules.other.doubleBlankLine.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = this.rules.other.listIsTask.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(this.rules.other.listReplaceTask, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: [],\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            const lastItem = list.items.at(-1);\n            if (lastItem) {\n                lastItem.raw = lastItem.raw.trimEnd();\n                lastItem.text = lastItem.text.trimEnd();\n            }\n            else {\n                // not a list since there were no items\n                return;\n            }\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => this.rules.other.anyLine.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0],\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const href = cap[2] ? cap[2].replace(this.rules.other.hrefBrackets, '$1').replace(this.rules.inline.anyPunctuation, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline.anyPunctuation, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title,\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (!cap) {\n            return;\n        }\n        if (!this.rules.other.tableDelimiter.test(cap[2])) {\n            // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n            return;\n        }\n        const headers = splitCells(cap[1]);\n        const aligns = cap[2].replace(this.rules.other.tableAlignChars, '').split('|');\n        const rows = cap[3]?.trim() ? cap[3].replace(this.rules.other.tableRowBlankLine, '').split('\\n') : [];\n        const item = {\n            type: 'table',\n            raw: cap[0],\n            header: [],\n            align: [],\n            rows: [],\n        };\n        if (headers.length !== aligns.length) {\n            // header and align columns must be equal, rows can be different.\n            return;\n        }\n        for (const align of aligns) {\n            if (this.rules.other.tableAlignRight.test(align)) {\n                item.align.push('right');\n            }\n            else if (this.rules.other.tableAlignCenter.test(align)) {\n                item.align.push('center');\n            }\n            else if (this.rules.other.tableAlignLeft.test(align)) {\n                item.align.push('left');\n            }\n            else {\n                item.align.push(null);\n            }\n        }\n        for (let i = 0; i < headers.length; i++) {\n            item.header.push({\n                text: headers[i],\n                tokens: this.lexer.inline(headers[i]),\n                header: true,\n                align: item.align[i],\n            });\n        }\n        for (const row of rows) {\n            item.rows.push(splitCells(row, item.header.length).map((cell, i) => {\n                return {\n                    text: cell,\n                    tokens: this.lexer.inline(cell),\n                    header: false,\n                    align: item.align[i],\n                };\n            }));\n        }\n        return item;\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1]),\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text),\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0]),\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: cap[1],\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && this.rules.other.startATag.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && this.rules.other.endATag.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && this.rules.other.startPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && this.rules.other.endPreScriptTag.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0],\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && this.rules.other.startAngleBracket.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = this.rules.other.pedanticHrefTitle.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (this.rules.other.startAngleBracket.test(href)) {\n                if (this.options.pedantic && !(this.rules.other.endAngleBracket.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline.anyPunctuation, '$1') : href,\n                title: title ? title.replace(this.rules.inline.anyPunctuation, '$1') : title,\n            }, cap[0], this.lexer, this.rules);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            const linkString = (cap[2] || cap[1]).replace(this.rules.other.multipleSpaceGlobal, ' ');\n            const link = links[linkString.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text,\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer, this.rules);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrongLDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(this.rules.other.unicodeAlphaNumeric))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrongRDelimAst : this.rules.inline.emStrongRDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text),\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text),\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(this.rules.other.newLineCharGlobal, ' ');\n            const hasNonSpaceChars = this.rules.other.nonSpaceChar.test(text);\n            const hasSpaceCharsOnBothEnds = this.rules.other.startingSpaceChar.test(text) && this.rules.other.endingSpaceChar.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text,\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0],\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2]),\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[1];\n                href = 'mailto:' + text;\n            }\n            else {\n                text = cap[1];\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = cap[0];\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])?.[0] ?? '';\n                } while (prevCapZero !== cap[0]);\n                text = cap[0];\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text,\n                    },\n                ],\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            const escaped = this.lexer.state.inRawBlock;\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                escaped,\n            };\n        }\n    }\n}\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true,\n        };\n        const rules = {\n            other,\n            block: block.normal,\n            inline: inline.normal,\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline,\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src.replace(other.carriageReturn, '\\n');\n        this.blockTokens(src, this.tokens);\n        for (let i = 0; i < this.inlineQueue.length; i++) {\n            const next = this.inlineQueue[i];\n            this.inlineTokens(next.src, next.tokens);\n        }\n        this.inlineQueue = [];\n        return this.tokens;\n    }\n    blockTokens(src, tokens = [], lastParagraphClipped = false) {\n        if (this.options.pedantic) {\n            src = src.replace(other.tabCharGlobal, '    ').replace(other.spaceLine, '');\n        }\n        while (src) {\n            let token;\n            if (this.options.extensions?.block?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.raw.length === 1 && lastToken !== undefined) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    lastToken.raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'paragraph' || lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title,\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                const lastToken = tokens.at(-1);\n                if (lastParagraphClipped && lastToken?.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = cutSrc.length !== src.length;\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue.at(-1).src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match = null;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index)\n                            + '[' + 'a'.repeat(match[0].length - 2) + ']'\n                            + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        let keepPrevChar = false;\n        let prevChar = '';\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            let token;\n            // extensions\n            if (this.options.extensions?.inline?.some((extTokenizer) => {\n                if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                    src = src.substring(token.raw.length);\n                    tokens.push(token);\n                    return true;\n                }\n                return false;\n            })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                const lastToken = tokens.at(-1);\n                if (token.type === 'text' && lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            let cutSrc = src;\n            if (this.options.extensions?.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                const lastToken = tokens.at(-1);\n                if (lastToken?.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    parser; // set by the parser\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(token) {\n        return '';\n    }\n    code({ text, lang, escaped }) {\n        const langString = (lang || '').match(other.notSpaceStart)?.[0];\n        const code = text.replace(other.endingNewline, '') + '\\n';\n        if (!langString) {\n            return '<pre><code>'\n                + (escaped ? code : escape(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape(langString)\n            + '\">'\n            + (escaped ? code : escape(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote({ tokens }) {\n        const body = this.parser.parse(tokens);\n        return `<blockquote>\\n${body}</blockquote>\\n`;\n    }\n    html({ text }) {\n        return text;\n    }\n    heading({ tokens, depth }) {\n        return `<h${depth}>${this.parser.parseInline(tokens)}</h${depth}>\\n`;\n    }\n    hr(token) {\n        return '<hr>\\n';\n    }\n    list(token) {\n        const ordered = token.ordered;\n        const start = token.start;\n        let body = '';\n        for (let j = 0; j < token.items.length; j++) {\n            const item = token.items[j];\n            body += this.listitem(item);\n        }\n        const type = ordered ? 'ol' : 'ul';\n        const startAttr = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startAttr + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(item) {\n        let itemBody = '';\n        if (item.task) {\n            const checkbox = this.checkbox({ checked: !!item.checked });\n            if (item.loose) {\n                if (item.tokens[0]?.type === 'paragraph') {\n                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + escape(item.tokens[0].tokens[0].text);\n                        item.tokens[0].tokens[0].escaped = true;\n                    }\n                }\n                else {\n                    item.tokens.unshift({\n                        type: 'text',\n                        raw: checkbox + ' ',\n                        text: checkbox + ' ',\n                        escaped: true,\n                    });\n                }\n            }\n            else {\n                itemBody += checkbox + ' ';\n            }\n        }\n        itemBody += this.parser.parse(item.tokens, !!item.loose);\n        return `<li>${itemBody}</li>\\n`;\n    }\n    checkbox({ checked }) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph({ tokens }) {\n        return `<p>${this.parser.parseInline(tokens)}</p>\\n`;\n    }\n    table(token) {\n        let header = '';\n        // header\n        let cell = '';\n        for (let j = 0; j < token.header.length; j++) {\n            cell += this.tablecell(token.header[j]);\n        }\n        header += this.tablerow({ text: cell });\n        let body = '';\n        for (let j = 0; j < token.rows.length; j++) {\n            const row = token.rows[j];\n            cell = '';\n            for (let k = 0; k < row.length; k++) {\n                cell += this.tablecell(row[k]);\n            }\n            body += this.tablerow({ text: cell });\n        }\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow({ text }) {\n        return `<tr>\\n${text}</tr>\\n`;\n    }\n    tablecell(token) {\n        const content = this.parser.parseInline(token.tokens);\n        const type = token.header ? 'th' : 'td';\n        const tag = token.align\n            ? `<${type} align=\"${token.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong({ tokens }) {\n        return `<strong>${this.parser.parseInline(tokens)}</strong>`;\n    }\n    em({ tokens }) {\n        return `<em>${this.parser.parseInline(tokens)}</em>`;\n    }\n    codespan({ text }) {\n        return `<code>${escape(text, true)}</code>`;\n    }\n    br(token) {\n        return '<br>';\n    }\n    del({ tokens }) {\n        return `<del>${this.parser.parseInline(tokens)}</del>`;\n    }\n    link({ href, title, tokens }) {\n        const text = this.parser.parseInline(tokens);\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + (escape(title)) + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image({ href, title, text }) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return escape(text);\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${escape(title)}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(token) {\n        return 'tokens' in token && token.tokens\n            ? this.parser.parseInline(token.tokens)\n            : ('escaped' in token && token.escaped ? token.text : escape(token.text));\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong({ text }) {\n        return text;\n    }\n    em({ text }) {\n        return text;\n    }\n    codespan({ text }) {\n        return text;\n    }\n    del({ text }) {\n        return text;\n    }\n    html({ text }) {\n        return text;\n    }\n    text({ text }) {\n        return text;\n    }\n    link({ text }) {\n        return '' + text;\n    }\n    image({ text }) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.renderer.parser = this;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const genericToken = anyToken;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'space': {\n                    out += this.renderer.space(token);\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr(token);\n                    continue;\n                }\n                case 'heading': {\n                    out += this.renderer.heading(token);\n                    continue;\n                }\n                case 'code': {\n                    out += this.renderer.code(token);\n                    continue;\n                }\n                case 'table': {\n                    out += this.renderer.table(token);\n                    continue;\n                }\n                case 'blockquote': {\n                    out += this.renderer.blockquote(token);\n                    continue;\n                }\n                case 'list': {\n                    out += this.renderer.list(token);\n                    continue;\n                }\n                case 'html': {\n                    out += this.renderer.html(token);\n                    continue;\n                }\n                case 'paragraph': {\n                    out += this.renderer.paragraph(token);\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = this.renderer.text(textToken);\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + this.renderer.text(textToken);\n                    }\n                    if (top) {\n                        out += this.renderer.paragraph({\n                            type: 'paragraph',\n                            raw: body,\n                            text: body,\n                            tokens: [{ type: 'text', raw: body, text: body, escaped: true }],\n                        });\n                    }\n                    else {\n                        out += body;\n                    }\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer = this.renderer) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const anyToken = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions?.renderers?.[anyToken.type]) {\n                const ret = this.options.extensions.renderers[anyToken.type].call({ parser: this }, anyToken);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(anyToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            const token = anyToken;\n            switch (token.type) {\n                case 'escape': {\n                    out += renderer.text(token);\n                    break;\n                }\n                case 'html': {\n                    out += renderer.html(token);\n                    break;\n                }\n                case 'link': {\n                    out += renderer.link(token);\n                    break;\n                }\n                case 'image': {\n                    out += renderer.image(token);\n                    break;\n                }\n                case 'strong': {\n                    out += renderer.strong(token);\n                    break;\n                }\n                case 'em': {\n                    out += renderer.em(token);\n                    break;\n                }\n                case 'codespan': {\n                    out += renderer.codespan(token);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br(token);\n                    break;\n                }\n                case 'del': {\n                    out += renderer.del(token);\n                    break;\n                }\n                case 'text': {\n                    out += renderer.text(token);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    block;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess',\n        'processAllTokens',\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n    /**\n     * Process all tokens before walk tokens\n     */\n    processAllTokens(tokens) {\n        return tokens;\n    }\n    /**\n     * Provide function to tokenize markdown\n     */\n    provideLexer() {\n        return this.block ? _Lexer.lex : _Lexer.lexInline;\n    }\n    /**\n     * Provide function to parse tokens\n     */\n    provideParser() {\n        return this.block ? _Parser.parse : _Parser.parseInline;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.parseMarkdown(true);\n    parseInline = this.parseMarkdown(false);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            const tokens = genericToken[childTokens].flat(Infinity);\n                            values = values.concat(this.walkTokens(tokens, callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    if (!(prop in renderer)) {\n                        throw new Error(`renderer '${prop}' does not exist`);\n                    }\n                    if (['options', 'parser'].includes(prop)) {\n                        // ignore options property\n                        continue;\n                    }\n                    const rendererProp = prop;\n                    const rendererFunc = pack.renderer[rendererProp];\n                    const prevRenderer = renderer[rendererProp];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererProp] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    if (!(prop in tokenizer)) {\n                        throw new Error(`tokenizer '${prop}' does not exist`);\n                    }\n                    if (['options', 'rules', 'lexer'].includes(prop)) {\n                        // ignore options, rules, and lexer properties\n                        continue;\n                    }\n                    const tokenizerProp = prop;\n                    const tokenizerFunc = pack.tokenizer[tokenizerProp];\n                    const prevTokenizer = tokenizer[tokenizerProp];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    // @ts-expect-error cannot type tokenizer function dynamically\n                    tokenizer[tokenizerProp] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    if (!(prop in hooks)) {\n                        throw new Error(`hook '${prop}' does not exist`);\n                    }\n                    if (['options', 'block'].includes(prop)) {\n                        // ignore options and block properties\n                        continue;\n                    }\n                    const hooksProp = prop;\n                    const hooksFunc = pack.hooks[hooksProp];\n                    const prevHook = hooks[hooksProp];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        // @ts-expect-error cannot type hook function dynamically\n                        hooks[hooksProp] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    parseMarkdown(blockType) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const parse = (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            const throwError = this.onError(!!opt.silent, !!opt.async);\n            // throw error if an extension set async to true but parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                return throwError(new Error('marked(): The async option was set to true by an extension. Remove async: false from the parse options object to return a Promise.'));\n            }\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n                opt.hooks.block = blockType;\n            }\n            const lexer = opt.hooks ? opt.hooks.provideLexer() : (blockType ? _Lexer.lex : _Lexer.lexInline);\n            const parser = opt.hooks ? opt.hooks.provideParser() : (blockType ? _Parser.parse : _Parser.parseInline);\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.hooks ? opt.hooks.processAllTokens(tokens) : tokens)\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                let tokens = lexer(src, opt);\n                if (opt.hooks) {\n                    tokens = opt.hooks.processAllTokens(tokens);\n                }\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n        return parse;\n    }\n    onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\n\n//# sourceMappingURL=marked.esm.js.map\n\n\n//# sourceURL=webpack://@common-module/markdown-editor/../markdown-module/node_modules/marked/lib/marked.esm.js?");

/***/ }),

/***/ "../markdown-module/node_modules/turndown/lib/turndown.browser.es.js":
/*!***************************************************************************!*\
  !*** ../markdown-module/node_modules/turndown/lib/turndown.browser.es.js ***!
  \***************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction extend (destination) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (source.hasOwnProperty(key)) destination[key] = source[key];\n    }\n  }\n  return destination\n}\n\nfunction repeat (character, count) {\n  return Array(count + 1).join(character)\n}\n\nfunction trimLeadingNewlines (string) {\n  return string.replace(/^\\n*/, '')\n}\n\nfunction trimTrailingNewlines (string) {\n  // avoid match-at-end regexp bottleneck, see #370\n  var indexEnd = string.length;\n  while (indexEnd > 0 && string[indexEnd - 1] === '\\n') indexEnd--;\n  return string.substring(0, indexEnd)\n}\n\nvar blockElements = [\n  'ADDRESS', 'ARTICLE', 'ASIDE', 'AUDIO', 'BLOCKQUOTE', 'BODY', 'CANVAS',\n  'CENTER', 'DD', 'DIR', 'DIV', 'DL', 'DT', 'FIELDSET', 'FIGCAPTION', 'FIGURE',\n  'FOOTER', 'FORM', 'FRAMESET', 'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'HEADER',\n  'HGROUP', 'HR', 'HTML', 'ISINDEX', 'LI', 'MAIN', 'MENU', 'NAV', 'NOFRAMES',\n  'NOSCRIPT', 'OL', 'OUTPUT', 'P', 'PRE', 'SECTION', 'TABLE', 'TBODY', 'TD',\n  'TFOOT', 'TH', 'THEAD', 'TR', 'UL'\n];\n\nfunction isBlock (node) {\n  return is(node, blockElements)\n}\n\nvar voidElements = [\n  'AREA', 'BASE', 'BR', 'COL', 'COMMAND', 'EMBED', 'HR', 'IMG', 'INPUT',\n  'KEYGEN', 'LINK', 'META', 'PARAM', 'SOURCE', 'TRACK', 'WBR'\n];\n\nfunction isVoid (node) {\n  return is(node, voidElements)\n}\n\nfunction hasVoid (node) {\n  return has(node, voidElements)\n}\n\nvar meaningfulWhenBlankElements = [\n  'A', 'TABLE', 'THEAD', 'TBODY', 'TFOOT', 'TH', 'TD', 'IFRAME', 'SCRIPT',\n  'AUDIO', 'VIDEO'\n];\n\nfunction isMeaningfulWhenBlank (node) {\n  return is(node, meaningfulWhenBlankElements)\n}\n\nfunction hasMeaningfulWhenBlank (node) {\n  return has(node, meaningfulWhenBlankElements)\n}\n\nfunction is (node, tagNames) {\n  return tagNames.indexOf(node.nodeName) >= 0\n}\n\nfunction has (node, tagNames) {\n  return (\n    node.getElementsByTagName &&\n    tagNames.some(function (tagName) {\n      return node.getElementsByTagName(tagName).length\n    })\n  )\n}\n\nvar rules = {};\n\nrules.paragraph = {\n  filter: 'p',\n\n  replacement: function (content) {\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.lineBreak = {\n  filter: 'br',\n\n  replacement: function (content, node, options) {\n    return options.br + '\\n'\n  }\n};\n\nrules.heading = {\n  filter: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'],\n\n  replacement: function (content, node, options) {\n    var hLevel = Number(node.nodeName.charAt(1));\n\n    if (options.headingStyle === 'setext' && hLevel < 3) {\n      var underline = repeat((hLevel === 1 ? '=' : '-'), content.length);\n      return (\n        '\\n\\n' + content + '\\n' + underline + '\\n\\n'\n      )\n    } else {\n      return '\\n\\n' + repeat('#', hLevel) + ' ' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.blockquote = {\n  filter: 'blockquote',\n\n  replacement: function (content) {\n    content = content.replace(/^\\n+|\\n+$/g, '');\n    content = content.replace(/^/gm, '> ');\n    return '\\n\\n' + content + '\\n\\n'\n  }\n};\n\nrules.list = {\n  filter: ['ul', 'ol'],\n\n  replacement: function (content, node) {\n    var parent = node.parentNode;\n    if (parent.nodeName === 'LI' && parent.lastElementChild === node) {\n      return '\\n' + content\n    } else {\n      return '\\n\\n' + content + '\\n\\n'\n    }\n  }\n};\n\nrules.listItem = {\n  filter: 'li',\n\n  replacement: function (content, node, options) {\n    content = content\n      .replace(/^\\n+/, '') // remove leading newlines\n      .replace(/\\n+$/, '\\n') // replace trailing newlines with just a single one\n      .replace(/\\n/gm, '\\n    '); // indent\n    var prefix = options.bulletListMarker + '   ';\n    var parent = node.parentNode;\n    if (parent.nodeName === 'OL') {\n      var start = parent.getAttribute('start');\n      var index = Array.prototype.indexOf.call(parent.children, node);\n      prefix = (start ? Number(start) + index : index + 1) + '.  ';\n    }\n    return (\n      prefix + content + (node.nextSibling && !/\\n$/.test(content) ? '\\n' : '')\n    )\n  }\n};\n\nrules.indentedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'indented' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    return (\n      '\\n\\n    ' +\n      node.firstChild.textContent.replace(/\\n/g, '\\n    ') +\n      '\\n\\n'\n    )\n  }\n};\n\nrules.fencedCodeBlock = {\n  filter: function (node, options) {\n    return (\n      options.codeBlockStyle === 'fenced' &&\n      node.nodeName === 'PRE' &&\n      node.firstChild &&\n      node.firstChild.nodeName === 'CODE'\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var className = node.firstChild.getAttribute('class') || '';\n    var language = (className.match(/language-(\\S+)/) || [null, ''])[1];\n    var code = node.firstChild.textContent;\n\n    var fenceChar = options.fence.charAt(0);\n    var fenceSize = 3;\n    var fenceInCodeRegex = new RegExp('^' + fenceChar + '{3,}', 'gm');\n\n    var match;\n    while ((match = fenceInCodeRegex.exec(code))) {\n      if (match[0].length >= fenceSize) {\n        fenceSize = match[0].length + 1;\n      }\n    }\n\n    var fence = repeat(fenceChar, fenceSize);\n\n    return (\n      '\\n\\n' + fence + language + '\\n' +\n      code.replace(/\\n$/, '') +\n      '\\n' + fence + '\\n\\n'\n    )\n  }\n};\n\nrules.horizontalRule = {\n  filter: 'hr',\n\n  replacement: function (content, node, options) {\n    return '\\n\\n' + options.hr + '\\n\\n'\n  }\n};\n\nrules.inlineLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'inlined' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node) {\n    var href = node.getAttribute('href');\n    if (href) href = href.replace(/([()])/g, '\\\\$1');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title.replace(/\"/g, '\\\\\"') + '\"';\n    return '[' + content + '](' + href + title + ')'\n  }\n};\n\nrules.referenceLink = {\n  filter: function (node, options) {\n    return (\n      options.linkStyle === 'referenced' &&\n      node.nodeName === 'A' &&\n      node.getAttribute('href')\n    )\n  },\n\n  replacement: function (content, node, options) {\n    var href = node.getAttribute('href');\n    var title = cleanAttribute(node.getAttribute('title'));\n    if (title) title = ' \"' + title + '\"';\n    var replacement;\n    var reference;\n\n    switch (options.linkReferenceStyle) {\n      case 'collapsed':\n        replacement = '[' + content + '][]';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      case 'shortcut':\n        replacement = '[' + content + ']';\n        reference = '[' + content + ']: ' + href + title;\n        break\n      default:\n        var id = this.references.length + 1;\n        replacement = '[' + content + '][' + id + ']';\n        reference = '[' + id + ']: ' + href + title;\n    }\n\n    this.references.push(reference);\n    return replacement\n  },\n\n  references: [],\n\n  append: function (options) {\n    var references = '';\n    if (this.references.length) {\n      references = '\\n\\n' + this.references.join('\\n') + '\\n\\n';\n      this.references = []; // Reset references\n    }\n    return references\n  }\n};\n\nrules.emphasis = {\n  filter: ['em', 'i'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.emDelimiter + content + options.emDelimiter\n  }\n};\n\nrules.strong = {\n  filter: ['strong', 'b'],\n\n  replacement: function (content, node, options) {\n    if (!content.trim()) return ''\n    return options.strongDelimiter + content + options.strongDelimiter\n  }\n};\n\nrules.code = {\n  filter: function (node) {\n    var hasSiblings = node.previousSibling || node.nextSibling;\n    var isCodeBlock = node.parentNode.nodeName === 'PRE' && !hasSiblings;\n\n    return node.nodeName === 'CODE' && !isCodeBlock\n  },\n\n  replacement: function (content) {\n    if (!content) return ''\n    content = content.replace(/\\r?\\n|\\r/g, ' ');\n\n    var extraSpace = /^`|^ .*?[^ ].* $|`$/.test(content) ? ' ' : '';\n    var delimiter = '`';\n    var matches = content.match(/`+/gm) || [];\n    while (matches.indexOf(delimiter) !== -1) delimiter = delimiter + '`';\n\n    return delimiter + extraSpace + content + extraSpace + delimiter\n  }\n};\n\nrules.image = {\n  filter: 'img',\n\n  replacement: function (content, node) {\n    var alt = cleanAttribute(node.getAttribute('alt'));\n    var src = node.getAttribute('src') || '';\n    var title = cleanAttribute(node.getAttribute('title'));\n    var titlePart = title ? ' \"' + title + '\"' : '';\n    return src ? '![' + alt + ']' + '(' + src + titlePart + ')' : ''\n  }\n};\n\nfunction cleanAttribute (attribute) {\n  return attribute ? attribute.replace(/(\\n+\\s*)+/g, '\\n') : ''\n}\n\n/**\n * Manages a collection of rules used to convert HTML to Markdown\n */\n\nfunction Rules (options) {\n  this.options = options;\n  this._keep = [];\n  this._remove = [];\n\n  this.blankRule = {\n    replacement: options.blankReplacement\n  };\n\n  this.keepReplacement = options.keepReplacement;\n\n  this.defaultRule = {\n    replacement: options.defaultReplacement\n  };\n\n  this.array = [];\n  for (var key in options.rules) this.array.push(options.rules[key]);\n}\n\nRules.prototype = {\n  add: function (key, rule) {\n    this.array.unshift(rule);\n  },\n\n  keep: function (filter) {\n    this._keep.unshift({\n      filter: filter,\n      replacement: this.keepReplacement\n    });\n  },\n\n  remove: function (filter) {\n    this._remove.unshift({\n      filter: filter,\n      replacement: function () {\n        return ''\n      }\n    });\n  },\n\n  forNode: function (node) {\n    if (node.isBlank) return this.blankRule\n    var rule;\n\n    if ((rule = findRule(this.array, node, this.options))) return rule\n    if ((rule = findRule(this._keep, node, this.options))) return rule\n    if ((rule = findRule(this._remove, node, this.options))) return rule\n\n    return this.defaultRule\n  },\n\n  forEach: function (fn) {\n    for (var i = 0; i < this.array.length; i++) fn(this.array[i], i);\n  }\n};\n\nfunction findRule (rules, node, options) {\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n    if (filterValue(rule, node, options)) return rule\n  }\n  return void 0\n}\n\nfunction filterValue (rule, node, options) {\n  var filter = rule.filter;\n  if (typeof filter === 'string') {\n    if (filter === node.nodeName.toLowerCase()) return true\n  } else if (Array.isArray(filter)) {\n    if (filter.indexOf(node.nodeName.toLowerCase()) > -1) return true\n  } else if (typeof filter === 'function') {\n    if (filter.call(rule, node, options)) return true\n  } else {\n    throw new TypeError('`filter` needs to be a string, array, or function')\n  }\n}\n\n/**\n * The collapseWhitespace function is adapted from collapse-whitespace\n * by Luc Thevenard.\n *\n * The MIT License (MIT)\n *\n * Copyright (c) 2014 Luc Thevenard <lucthevenard@gmail.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * collapseWhitespace(options) removes extraneous whitespace from an the given element.\n *\n * @param {Object} options\n */\nfunction collapseWhitespace (options) {\n  var element = options.element;\n  var isBlock = options.isBlock;\n  var isVoid = options.isVoid;\n  var isPre = options.isPre || function (node) {\n    return node.nodeName === 'PRE'\n  };\n\n  if (!element.firstChild || isPre(element)) return\n\n  var prevText = null;\n  var keepLeadingWs = false;\n\n  var prev = null;\n  var node = next(prev, element, isPre);\n\n  while (node !== element) {\n    if (node.nodeType === 3 || node.nodeType === 4) { // Node.TEXT_NODE or Node.CDATA_SECTION_NODE\n      var text = node.data.replace(/[ \\r\\n\\t]+/g, ' ');\n\n      if ((!prevText || / $/.test(prevText.data)) &&\n          !keepLeadingWs && text[0] === ' ') {\n        text = text.substr(1);\n      }\n\n      // `text` might be empty at this point.\n      if (!text) {\n        node = remove(node);\n        continue\n      }\n\n      node.data = text;\n\n      prevText = node;\n    } else if (node.nodeType === 1) { // Node.ELEMENT_NODE\n      if (isBlock(node) || node.nodeName === 'BR') {\n        if (prevText) {\n          prevText.data = prevText.data.replace(/ $/, '');\n        }\n\n        prevText = null;\n        keepLeadingWs = false;\n      } else if (isVoid(node) || isPre(node)) {\n        // Avoid trimming space around non-block, non-BR void elements and inline PRE.\n        prevText = null;\n        keepLeadingWs = true;\n      } else if (prevText) {\n        // Drop protection if set previously.\n        keepLeadingWs = false;\n      }\n    } else {\n      node = remove(node);\n      continue\n    }\n\n    var nextNode = next(prev, node, isPre);\n    prev = node;\n    node = nextNode;\n  }\n\n  if (prevText) {\n    prevText.data = prevText.data.replace(/ $/, '');\n    if (!prevText.data) {\n      remove(prevText);\n    }\n  }\n}\n\n/**\n * remove(node) removes the given node from the DOM and returns the\n * next node in the sequence.\n *\n * @param {Node} node\n * @return {Node} node\n */\nfunction remove (node) {\n  var next = node.nextSibling || node.parentNode;\n\n  node.parentNode.removeChild(node);\n\n  return next\n}\n\n/**\n * next(prev, current, isPre) returns the next node in the sequence, given the\n * current and previous nodes.\n *\n * @param {Node} prev\n * @param {Node} current\n * @param {Function} isPre\n * @return {Node}\n */\nfunction next (prev, current, isPre) {\n  if ((prev && prev.parentNode === current) || isPre(current)) {\n    return current.nextSibling || current.parentNode\n  }\n\n  return current.firstChild || current.nextSibling || current.parentNode\n}\n\n/*\n * Set up window for Node.js\n */\n\nvar root = (typeof window !== 'undefined' ? window : {});\n\n/*\n * Parsing HTML strings\n */\n\nfunction canParseHTMLNatively () {\n  var Parser = root.DOMParser;\n  var canParse = false;\n\n  // Adapted from https://gist.github.com/1129031\n  // Firefox/Opera/IE throw errors on unsupported types\n  try {\n    // WebKit returns null on unsupported types\n    if (new Parser().parseFromString('', 'text/html')) {\n      canParse = true;\n    }\n  } catch (e) {}\n\n  return canParse\n}\n\nfunction createHTMLParser () {\n  var Parser = function () {};\n\n  {\n    if (shouldUseActiveX()) {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = new window.ActiveXObject('htmlfile');\n        doc.designMode = 'on'; // disable on-page scripts\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    } else {\n      Parser.prototype.parseFromString = function (string) {\n        var doc = document.implementation.createHTMLDocument('');\n        doc.open();\n        doc.write(string);\n        doc.close();\n        return doc\n      };\n    }\n  }\n  return Parser\n}\n\nfunction shouldUseActiveX () {\n  var useActiveX = false;\n  try {\n    document.implementation.createHTMLDocument('').open();\n  } catch (e) {\n    if (root.ActiveXObject) useActiveX = true;\n  }\n  return useActiveX\n}\n\nvar HTMLParser = canParseHTMLNatively() ? root.DOMParser : createHTMLParser();\n\nfunction RootNode (input, options) {\n  var root;\n  if (typeof input === 'string') {\n    var doc = htmlParser().parseFromString(\n      // DOM parsers arrange elements in the <head> and <body>.\n      // Wrapping in a custom element ensures elements are reliably arranged in\n      // a single element.\n      '<x-turndown id=\"turndown-root\">' + input + '</x-turndown>',\n      'text/html'\n    );\n    root = doc.getElementById('turndown-root');\n  } else {\n    root = input.cloneNode(true);\n  }\n  collapseWhitespace({\n    element: root,\n    isBlock: isBlock,\n    isVoid: isVoid,\n    isPre: options.preformattedCode ? isPreOrCode : null\n  });\n\n  return root\n}\n\nvar _htmlParser;\nfunction htmlParser () {\n  _htmlParser = _htmlParser || new HTMLParser();\n  return _htmlParser\n}\n\nfunction isPreOrCode (node) {\n  return node.nodeName === 'PRE' || node.nodeName === 'CODE'\n}\n\nfunction Node (node, options) {\n  node.isBlock = isBlock(node);\n  node.isCode = node.nodeName === 'CODE' || node.parentNode.isCode;\n  node.isBlank = isBlank(node);\n  node.flankingWhitespace = flankingWhitespace(node, options);\n  return node\n}\n\nfunction isBlank (node) {\n  return (\n    !isVoid(node) &&\n    !isMeaningfulWhenBlank(node) &&\n    /^\\s*$/i.test(node.textContent) &&\n    !hasVoid(node) &&\n    !hasMeaningfulWhenBlank(node)\n  )\n}\n\nfunction flankingWhitespace (node, options) {\n  if (node.isBlock || (options.preformattedCode && node.isCode)) {\n    return { leading: '', trailing: '' }\n  }\n\n  var edges = edgeWhitespace(node.textContent);\n\n  // abandon leading ASCII WS if left-flanked by ASCII WS\n  if (edges.leadingAscii && isFlankedByWhitespace('left', node, options)) {\n    edges.leading = edges.leadingNonAscii;\n  }\n\n  // abandon trailing ASCII WS if right-flanked by ASCII WS\n  if (edges.trailingAscii && isFlankedByWhitespace('right', node, options)) {\n    edges.trailing = edges.trailingNonAscii;\n  }\n\n  return { leading: edges.leading, trailing: edges.trailing }\n}\n\nfunction edgeWhitespace (string) {\n  var m = string.match(/^(([ \\t\\r\\n]*)(\\s*))(?:(?=\\S)[\\s\\S]*\\S)?((\\s*?)([ \\t\\r\\n]*))$/);\n  return {\n    leading: m[1], // whole string for whitespace-only strings\n    leadingAscii: m[2],\n    leadingNonAscii: m[3],\n    trailing: m[4], // empty for whitespace-only strings\n    trailingNonAscii: m[5],\n    trailingAscii: m[6]\n  }\n}\n\nfunction isFlankedByWhitespace (side, node, options) {\n  var sibling;\n  var regExp;\n  var isFlanked;\n\n  if (side === 'left') {\n    sibling = node.previousSibling;\n    regExp = / $/;\n  } else {\n    sibling = node.nextSibling;\n    regExp = /^ /;\n  }\n\n  if (sibling) {\n    if (sibling.nodeType === 3) {\n      isFlanked = regExp.test(sibling.nodeValue);\n    } else if (options.preformattedCode && sibling.nodeName === 'CODE') {\n      isFlanked = false;\n    } else if (sibling.nodeType === 1 && !isBlock(sibling)) {\n      isFlanked = regExp.test(sibling.textContent);\n    }\n  }\n  return isFlanked\n}\n\nvar reduce = Array.prototype.reduce;\nvar escapes = [\n  [/\\\\/g, '\\\\\\\\'],\n  [/\\*/g, '\\\\*'],\n  [/^-/g, '\\\\-'],\n  [/^\\+ /g, '\\\\+ '],\n  [/^(=+)/g, '\\\\$1'],\n  [/^(#{1,6}) /g, '\\\\$1 '],\n  [/`/g, '\\\\`'],\n  [/^~~~/g, '\\\\~~~'],\n  [/\\[/g, '\\\\['],\n  [/\\]/g, '\\\\]'],\n  [/^>/g, '\\\\>'],\n  [/_/g, '\\\\_'],\n  [/^(\\d+)\\. /g, '$1\\\\. ']\n];\n\nfunction TurndownService (options) {\n  if (!(this instanceof TurndownService)) return new TurndownService(options)\n\n  var defaults = {\n    rules: rules,\n    headingStyle: 'setext',\n    hr: '* * *',\n    bulletListMarker: '*',\n    codeBlockStyle: 'indented',\n    fence: '```',\n    emDelimiter: '_',\n    strongDelimiter: '**',\n    linkStyle: 'inlined',\n    linkReferenceStyle: 'full',\n    br: '  ',\n    preformattedCode: false,\n    blankReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' : ''\n    },\n    keepReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + node.outerHTML + '\\n\\n' : node.outerHTML\n    },\n    defaultReplacement: function (content, node) {\n      return node.isBlock ? '\\n\\n' + content + '\\n\\n' : content\n    }\n  };\n  this.options = extend({}, defaults, options);\n  this.rules = new Rules(this.options);\n}\n\nTurndownService.prototype = {\n  /**\n   * The entry point for converting a string or DOM node to Markdown\n   * @public\n   * @param {String|HTMLElement} input The string or DOM node to convert\n   * @returns A Markdown representation of the input\n   * @type String\n   */\n\n  turndown: function (input) {\n    if (!canConvert(input)) {\n      throw new TypeError(\n        input + ' is not a string, or an element/document/fragment node.'\n      )\n    }\n\n    if (input === '') return ''\n\n    var output = process.call(this, new RootNode(input, this.options));\n    return postProcess.call(this, output)\n  },\n\n  /**\n   * Add one or more plugins\n   * @public\n   * @param {Function|Array} plugin The plugin or array of plugins to add\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  use: function (plugin) {\n    if (Array.isArray(plugin)) {\n      for (var i = 0; i < plugin.length; i++) this.use(plugin[i]);\n    } else if (typeof plugin === 'function') {\n      plugin(this);\n    } else {\n      throw new TypeError('plugin must be a Function or an Array of Functions')\n    }\n    return this\n  },\n\n  /**\n   * Adds a rule\n   * @public\n   * @param {String} key The unique key of the rule\n   * @param {Object} rule The rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  addRule: function (key, rule) {\n    this.rules.add(key, rule);\n    return this\n  },\n\n  /**\n   * Keep a node (as HTML) that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  keep: function (filter) {\n    this.rules.keep(filter);\n    return this\n  },\n\n  /**\n   * Remove a node that matches the filter\n   * @public\n   * @param {String|Array|Function} filter The unique key of the rule\n   * @returns The Turndown instance for chaining\n   * @type Object\n   */\n\n  remove: function (filter) {\n    this.rules.remove(filter);\n    return this\n  },\n\n  /**\n   * Escapes Markdown syntax\n   * @public\n   * @param {String} string The string to escape\n   * @returns A string with Markdown syntax escaped\n   * @type String\n   */\n\n  escape: function (string) {\n    return escapes.reduce(function (accumulator, escape) {\n      return accumulator.replace(escape[0], escape[1])\n    }, string)\n  }\n};\n\n/**\n * Reduces a DOM node down to its Markdown string equivalent\n * @private\n * @param {HTMLElement} parentNode The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction process (parentNode) {\n  var self = this;\n  return reduce.call(parentNode.childNodes, function (output, node) {\n    node = new Node(node, self.options);\n\n    var replacement = '';\n    if (node.nodeType === 3) {\n      replacement = node.isCode ? node.nodeValue : self.escape(node.nodeValue);\n    } else if (node.nodeType === 1) {\n      replacement = replacementForNode.call(self, node);\n    }\n\n    return join(output, replacement)\n  }, '')\n}\n\n/**\n * Appends strings as each rule requires and trims the output\n * @private\n * @param {String} output The conversion output\n * @returns A trimmed version of the ouput\n * @type String\n */\n\nfunction postProcess (output) {\n  var self = this;\n  this.rules.forEach(function (rule) {\n    if (typeof rule.append === 'function') {\n      output = join(output, rule.append(self.options));\n    }\n  });\n\n  return output.replace(/^[\\t\\r\\n]+/, '').replace(/[\\t\\r\\n\\s]+$/, '')\n}\n\n/**\n * Converts an element node to its Markdown equivalent\n * @private\n * @param {HTMLElement} node The node to convert\n * @returns A Markdown representation of the node\n * @type String\n */\n\nfunction replacementForNode (node) {\n  var rule = this.rules.forNode(node);\n  var content = process.call(this, node);\n  var whitespace = node.flankingWhitespace;\n  if (whitespace.leading || whitespace.trailing) content = content.trim();\n  return (\n    whitespace.leading +\n    rule.replacement(content, node, this.options) +\n    whitespace.trailing\n  )\n}\n\n/**\n * Joins replacement to the current output with appropriate number of new lines\n * @private\n * @param {String} output The current conversion output\n * @param {String} replacement The string to append to the output\n * @returns Joined output\n * @type String\n */\n\nfunction join (output, replacement) {\n  var s1 = trimTrailingNewlines(output);\n  var s2 = trimLeadingNewlines(replacement);\n  var nls = Math.max(output.length - s1.length, replacement.length - s2.length);\n  var separator = '\\n\\n'.substring(0, nls);\n\n  return s1 + separator + s2\n}\n\n/**\n * Determines whether an input can be converted\n * @private\n * @param {String|HTMLElement} input Describe this parameter\n * @returns Describe what it returns\n * @type String|Object|Array|Boolean|Number\n */\n\nfunction canConvert (input) {\n  return (\n    input != null && (\n      typeof input === 'string' ||\n      (input.nodeType && (\n        input.nodeType === 1 || input.nodeType === 9 || input.nodeType === 11\n      ))\n    )\n  )\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (TurndownService);\n\n\n//# sourceURL=webpack://@common-module/markdown-editor/../markdown-module/node_modules/turndown/lib/turndown.browser.es.js?");

/***/ }),

/***/ "../ts-module/lib/communication/MessageChannelManager.js":
/*!***************************************************************!*\
  !*** ../ts-module/lib/communication/MessageChannelManager.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MessageChannelManager)\n/* harmony export */ });\nconst RESPONSE_CHANNEL = \"__response\";\nconst RESPONSE_ACTION = \"return\";\nconst ERROR_ACTION = \"error\";\nclass MessageChannelManager {\n    client;\n    channelHandlers = {};\n    requestCounter = 0;\n    pendingRequests = new Map();\n    constructor(client) {\n        this.client = client;\n        client.onMessage((rawMessage) => this.handleIncomingMessage(rawMessage));\n    }\n    on(channel, action, handler) {\n        if (!this.channelHandlers[channel]) {\n            this.channelHandlers[channel] = {};\n        }\n        const actionHandlers = this.channelHandlers[channel];\n        if (!actionHandlers[action]) {\n            actionHandlers[action] = [];\n        }\n        actionHandlers[action].push(handler);\n        return this;\n    }\n    off(channel, action, handler) {\n        const channelActions = this.channelHandlers[channel];\n        if (!channelActions)\n            return this;\n        const actionHandlers = channelActions[action];\n        if (!actionHandlers)\n            return this;\n        if (!handler) {\n            delete channelActions[action];\n        }\n        else {\n            const index = actionHandlers.indexOf(handler);\n            if (index !== -1) {\n                actionHandlers.splice(index, 1);\n            }\n            if (actionHandlers.length === 0) {\n                delete channelActions[action];\n            }\n        }\n        if (Object.keys(channelActions).length === 0) {\n            delete this.channelHandlers[channel];\n        }\n        return this;\n    }\n    send(channel, action, ...args) {\n        const message = { channel, action, args };\n        this.client.send(JSON.stringify(message));\n    }\n    request(channel, action, ...args) {\n        const requestId = `req_${++this.requestCounter}`;\n        const message = { channel, action, args, requestId };\n        return new Promise((resolve, reject) => {\n            this.pendingRequests.set(requestId, { resolve, reject });\n            this.client.send(JSON.stringify(message));\n        });\n    }\n    emit(message) {\n        const { channel, action, args } = message;\n        const channelActions = this.channelHandlers[channel];\n        const actionHandlers = channelActions?.[action];\n        if (!actionHandlers)\n            return [];\n        return actionHandlers.map((handler) => handler(...args));\n    }\n    async handleIncomingMessage(rawMessage) {\n        try {\n            const message = JSON.parse(rawMessage);\n            if (!message.channel || !message.action) {\n                console.warn(\"Invalid message format: Missing channel or action\", rawMessage);\n                return;\n            }\n            if (message.channel === RESPONSE_CHANNEL) {\n                this.processResponse(message);\n            }\n            else {\n                await this.processRequest(message);\n            }\n        }\n        catch (error) {\n            console.error(\"Failed to parse message:\", rawMessage, error);\n        }\n    }\n    processResponse(message) {\n        const { requestId, action, args } = message;\n        if (!requestId)\n            return;\n        const pendingRequest = this.pendingRequests.get(requestId);\n        if (!pendingRequest)\n            return;\n        if (action === RESPONSE_ACTION) {\n            pendingRequest.resolve(args[0]);\n        }\n        else if (action === ERROR_ACTION) {\n            pendingRequest.reject(args[0]);\n        }\n        this.pendingRequests.delete(requestId);\n    }\n    async processRequest(message) {\n        const { requestId } = message;\n        const results = this.emit(message);\n        if (requestId && results.length > 0) {\n            const result = results[0];\n            const responseMessage = {\n                channel: RESPONSE_CHANNEL,\n                action: RESPONSE_ACTION,\n                args: result instanceof Promise ? [await result] : [result],\n                requestId,\n            };\n            this.client.send(JSON.stringify(responseMessage));\n        }\n    }\n}\n//# sourceMappingURL=MessageChannelManager.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../ts-module/lib/communication/MessageChannelManager.js?");

/***/ }),

/***/ "../ts-module/lib/event/EventContainer.js":
/*!************************************************!*\
  !*** ../ts-module/lib/event/EventContainer.js ***!
  \************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EventContainer)\n/* harmony export */ });\nclass EventContainer {\n    events = {};\n    on(eventName, eventHandler) {\n        if (!this.events[eventName])\n            this.events[eventName] = [];\n        this.events[eventName].push(eventHandler);\n        return this;\n    }\n    off(eventName, eventHandler) {\n        const events = this.events[eventName];\n        if (!events)\n            return this;\n        if (!eventHandler) {\n            delete this.events[eventName];\n        }\n        else {\n            const index = events.indexOf(eventHandler);\n            if (index !== -1)\n                events.splice(index, 1);\n            if (events.length === 0)\n                delete this.events[eventName];\n        }\n        return this;\n    }\n    hasEvent(eventName) {\n        const events = this.events[eventName];\n        if (!events)\n            return false;\n        return events.length > 0;\n    }\n    async emit(eventName, ...args) {\n        const events = this.events[eventName];\n        if (!events)\n            return [];\n        const results = [];\n        const promises = [];\n        for (const handler of events) {\n            const result = handler(...args);\n            if (result instanceof Promise) {\n                promises.push(result);\n            }\n            else {\n                results.push(result);\n            }\n        }\n        return results.concat(await Promise.all(promises));\n    }\n}\n//# sourceMappingURL=EventContainer.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../ts-module/lib/event/EventContainer.js?");

/***/ }),

/***/ "../ts-module/lib/index.js":
/*!*********************************!*\
  !*** ../ts-module/lib/index.js ***!
  \*********************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ArrayUtils: () => (/* reexport safe */ _utils_ArrayUtils_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"]),\n/* harmony export */   Debouncer: () => (/* reexport safe */ _utils_Debouncer_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"]),\n/* harmony export */   EventContainer: () => (/* reexport safe */ _event_EventContainer_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   EventTreeNode: () => (/* reexport safe */ _tree_EventTreeNode_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   IntegerUtils: () => (/* reexport safe */ _utils_IntegerUtils_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]),\n/* harmony export */   JsonUtils: () => (/* reexport safe */ _utils_JsonUtils_js__WEBPACK_IMPORTED_MODULE_8__[\"default\"]),\n/* harmony export */   MessageChannelManager: () => (/* reexport safe */ _communication_MessageChannelManager_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   ObjectUtils: () => (/* reexport safe */ _utils_ObjectUtils_js__WEBPACK_IMPORTED_MODULE_9__[\"default\"]),\n/* harmony export */   ResourceLoader: () => (/* reexport safe */ _loaders_ResourceLoader_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   StringUtils: () => (/* reexport safe */ _utils_StringUtils_js__WEBPACK_IMPORTED_MODULE_10__[\"default\"]),\n/* harmony export */   TreeNode: () => (/* reexport safe */ _tree_TreeNode_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _communication_MessageChannelManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./communication/MessageChannelManager.js */ \"../ts-module/lib/communication/MessageChannelManager.js\");\n/* harmony import */ var _event_EventContainer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./event/EventContainer.js */ \"../ts-module/lib/event/EventContainer.js\");\n/* harmony import */ var _loaders_ResourceLoader_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./loaders/ResourceLoader.js */ \"../ts-module/lib/loaders/ResourceLoader.js\");\n/* harmony import */ var _tree_EventTreeNode_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tree/EventTreeNode.js */ \"../ts-module/lib/tree/EventTreeNode.js\");\n/* harmony import */ var _tree_TreeNode_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tree/TreeNode.js */ \"../ts-module/lib/tree/TreeNode.js\");\n/* harmony import */ var _utils_ArrayUtils_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./utils/ArrayUtils.js */ \"../ts-module/lib/utils/ArrayUtils.js\");\n/* harmony import */ var _utils_Debouncer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils/Debouncer.js */ \"../ts-module/lib/utils/Debouncer.js\");\n/* harmony import */ var _utils_IntegerUtils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/IntegerUtils.js */ \"../ts-module/lib/utils/IntegerUtils.js\");\n/* harmony import */ var _utils_JsonUtils_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./utils/JsonUtils.js */ \"../ts-module/lib/utils/JsonUtils.js\");\n/* harmony import */ var _utils_ObjectUtils_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./utils/ObjectUtils.js */ \"../ts-module/lib/utils/ObjectUtils.js\");\n/* harmony import */ var _utils_StringUtils_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./utils/StringUtils.js */ \"../ts-module/lib/utils/StringUtils.js\");\n\n\n\n\n\n\n\n\n\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../ts-module/lib/index.js?");

/***/ }),

/***/ "../ts-module/lib/loaders/ResourceLoader.js":
/*!**************************************************!*\
  !*** ../ts-module/lib/loaders/ResourceLoader.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ResourceLoader)\n/* harmony export */ });\nclass ResourceLoader {\n    resources = new Map();\n    pendingLoads = new Map();\n    refCount = new Map();\n    isResourceInUse(id) {\n        return this.refCount.has(id) && this.refCount.get(id) > 0;\n    }\n    incrementRefCount(id) {\n        this.refCount.set(id, (this.refCount.get(id) || 0) + 1);\n    }\n    async load(id, ...args) {\n        this.incrementRefCount(id);\n        if (this.resources.has(id))\n            return this.resources.get(id);\n        if (this.pendingLoads.has(id))\n            return await this.pendingLoads.get(id);\n        return await this.loadResource(id, ...args);\n    }\n    isLoaded(id) {\n        return this.resources.has(id);\n    }\n    release(id) {\n        const refCount = this.refCount.get(id);\n        if (refCount === undefined)\n            throw new Error(`Resource not found: ${id}`);\n        if (refCount === 1) {\n            this.refCount.delete(id);\n            const resource = this.resources.get(id);\n            if (resource) {\n                this.cleanup(resource, id);\n                this.resources.delete(id);\n            }\n        }\n        else {\n            this.refCount.set(id, refCount - 1);\n        }\n    }\n}\n//# sourceMappingURL=ResourceLoader.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../ts-module/lib/loaders/ResourceLoader.js?");

/***/ }),

/***/ "../ts-module/lib/tree/EventTreeNode.js":
/*!**********************************************!*\
  !*** ../ts-module/lib/tree/EventTreeNode.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EventTreeNode)\n/* harmony export */ });\n/* harmony import */ var _event_EventContainer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../event/EventContainer.js */ \"../ts-module/lib/event/EventContainer.js\");\n\nclass EventTreeNode extends _event_EventContainer_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    parent;\n    children = [];\n    removed = false;\n    subscriptions = [];\n    appendTo(parent, index) {\n        if (this.removed)\n            throw new Error(\"Node is removed\");\n        if (this.parent === parent) {\n            const currentIndex = this.parent.children.indexOf(this);\n            if (index !== undefined && index > currentIndex) {\n                index--;\n            }\n            this.parent.children.splice(currentIndex, 1);\n        }\n        else if (this.parent) {\n            this.remove();\n        }\n        this.parent = parent;\n        if (index !== undefined && index >= 0 && index < parent.children.length) {\n            parent.children.splice(index, 0, this);\n        }\n        else {\n            parent.children.push(this);\n        }\n        return this;\n    }\n    subscribe(container, eventName, handler) {\n        container.on(eventName, handler);\n        this.subscriptions.push({\n            container,\n            eventName: eventName,\n            handler,\n        });\n        return this;\n    }\n    unsubscribeFromAll() {\n        for (const sub of this.subscriptions) {\n            sub.container.off(sub.eventName, sub.handler);\n        }\n        this.subscriptions = [];\n    }\n    clear(...except) {\n        let i = 0;\n        while (this.children.length > except.length) {\n            const child = this.children[i];\n            !except.includes(child) ? child.remove() : i++;\n        }\n        return this;\n    }\n    remove() {\n        if (this.removed)\n            return;\n        this.removed = true;\n        this.unsubscribeFromAll();\n        if (this.parent) {\n            const index = this.parent.children.indexOf(this);\n            if (index > -1)\n                this.parent.children.splice(index, 1);\n            this.parent = undefined;\n        }\n        this.clear();\n    }\n}\n//# sourceMappingURL=EventTreeNode.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../ts-module/lib/tree/EventTreeNode.js?");

/***/ }),

/***/ "../ts-module/lib/tree/TreeNode.js":
/*!*****************************************!*\
  !*** ../ts-module/lib/tree/TreeNode.js ***!
  \*****************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ TreeNode)\n/* harmony export */ });\nclass TreeNode {\n    parent;\n    children = [];\n    removed = false;\n    appendTo(parent, index) {\n        if (this.removed)\n            throw new Error(\"Node is removed\");\n        if (this.parent === parent) {\n            const currentIndex = this.parent.children.indexOf(this);\n            if (index !== undefined && index > currentIndex) {\n                index--;\n            }\n            this.parent.children.splice(currentIndex, 1);\n        }\n        else if (this.parent) {\n            this.remove();\n        }\n        this.parent = parent;\n        if (index !== undefined && index >= 0 && index < parent.children.length) {\n            parent.children.splice(index, 0, this);\n        }\n        else {\n            parent.children.push(this);\n        }\n        return this;\n    }\n    clear() {\n        while (this.children.length > 0) {\n            this.children[0].remove();\n        }\n        return this;\n    }\n    remove() {\n        if (this.removed)\n            return;\n        this.removed = true;\n        if (this.parent) {\n            const index = this.parent.children.indexOf(this);\n            if (index > -1)\n                this.parent.children.splice(index, 1);\n            this.parent = undefined;\n        }\n        this.clear();\n    }\n}\n//# sourceMappingURL=TreeNode.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../ts-module/lib/tree/TreeNode.js?");

/***/ }),

/***/ "../ts-module/lib/utils/ArrayUtils.js":
/*!********************************************!*\
  !*** ../ts-module/lib/utils/ArrayUtils.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass ArrayUtils {\n    pull(array, ...removeList) {\n        for (const remove of removeList) {\n            const index = array.indexOf(remove);\n            if (index !== -1)\n                array.splice(index, 1);\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new ArrayUtils());\n//# sourceMappingURL=ArrayUtils.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../ts-module/lib/utils/ArrayUtils.js?");

/***/ }),

/***/ "../ts-module/lib/utils/Debouncer.js":
/*!*******************************************!*\
  !*** ../ts-module/lib/utils/Debouncer.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Debouncer)\n/* harmony export */ });\nclass Debouncer {\n    delayMs;\n    callback;\n    timeoutId = null;\n    constructor(delayMs, callback) {\n        this.delayMs = delayMs;\n        this.callback = callback;\n        if (delayMs < 0) {\n            throw new Error(\"Delay must be a non-negative number\");\n        }\n    }\n    execute(...args) {\n        this.clearPendingExecution();\n        this.timeoutId = setTimeout(() => {\n            this.callback(...args);\n            this.timeoutId = null;\n        }, this.delayMs);\n    }\n    cancel() {\n        this.clearPendingExecution();\n    }\n    isPending() {\n        return this.timeoutId !== null;\n    }\n    clearPendingExecution() {\n        if (this.timeoutId) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = null;\n        }\n    }\n}\n//# sourceMappingURL=Debouncer.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../ts-module/lib/utils/Debouncer.js?");

/***/ }),

/***/ "../ts-module/lib/utils/IntegerUtils.js":
/*!**********************************************!*\
  !*** ../ts-module/lib/utils/IntegerUtils.js ***!
  \**********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass IntegerUtils {\n    random(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new IntegerUtils());\n//# sourceMappingURL=IntegerUtils.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../ts-module/lib/utils/IntegerUtils.js?");

/***/ }),

/***/ "../ts-module/lib/utils/JsonUtils.js":
/*!*******************************************!*\
  !*** ../ts-module/lib/utils/JsonUtils.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass JsonUtils {\n    parseWithUndefined(data) {\n        return JSON.parse(data, (_, v) => v === null ? undefined : v);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new JsonUtils());\n//# sourceMappingURL=JsonUtils.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../ts-module/lib/utils/JsonUtils.js?");

/***/ }),

/***/ "../ts-module/lib/utils/ObjectUtils.js":
/*!*********************************************!*\
  !*** ../ts-module/lib/utils/ObjectUtils.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass ObjectUtils {\n    isEqual(obj1, obj2) {\n        if (obj1 === obj2) {\n            return true;\n        }\n        if (typeof obj1 !== \"object\" || obj1 === null ||\n            typeof obj2 !== \"object\" || obj2 === null) {\n            return false;\n        }\n        const keys1 = Object.keys(obj1);\n        const keys2 = Object.keys(obj2);\n        if (keys1.length !== keys2.length) {\n            return false;\n        }\n        for (const key of keys1) {\n            if (!keys2.includes(key) || !this.isEqual(obj1[key], obj2[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new ObjectUtils());\n//# sourceMappingURL=ObjectUtils.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../ts-module/lib/utils/ObjectUtils.js?");

/***/ }),

/***/ "../ts-module/lib/utils/StringUtils.js":
/*!*********************************************!*\
  !*** ../ts-module/lib/utils/StringUtils.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nclass StringUtils {\n    capitalize(input) {\n        const words = input.split(\" \");\n        const capitalizedWords = words.map((word) => {\n            if (word.length === 0)\n                return word;\n            return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n        });\n        return capitalizedWords.join(\" \");\n    }\n    isKebabCase(str) {\n        return /^[a-z0-9]+(-[a-z0-9]+)*$/.test(str);\n    }\n    formatNumberWithCommas(value, decimals) {\n        if (decimals === undefined || +(+value) > Number.MAX_SAFE_INTEGER) {\n            const parts = value.split(\".\");\n            parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            return parts[1] === \"0\" ? parts[0] : parts.join(\".\");\n        }\n        else {\n            const parts = String(+(+value).toFixed(decimals)).split(\".\");\n            parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n            return parts.join(\".\");\n        }\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new StringUtils());\n//# sourceMappingURL=StringUtils.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../ts-module/lib/utils/StringUtils.js?");

/***/ }),

/***/ "../universal-page-module/lib/el.js":
/*!******************************************!*\
  !*** ../universal-page-module/lib/el.js ***!
  \******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ el)\n/* harmony export */ });\nfunction el(selector, ...children) {\n    return el.impl(selector, ...children);\n}\nel.impl = (elementOrSelector, ...children) => {\n    throw new Error(\"Not implemented\");\n};\n//# sourceMappingURL=el.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../universal-page-module/lib/el.js?");

/***/ }),

/***/ "../universal-page-module/lib/html.js":
/*!********************************************!*\
  !*** ../universal-page-module/lib/html.js ***!
  \********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ html)\n/* harmony export */ });\nfunction html(htmlContent) {\n    return html.impl(htmlContent);\n}\nhtml.impl = (htmlContent) => {\n    throw new Error(\"Not implemented\");\n};\n//# sourceMappingURL=html.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../universal-page-module/lib/html.js?");

/***/ }),

/***/ "../universal-page-module/lib/index.js":
/*!*********************************************!*\
  !*** ../universal-page-module/lib/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   el: () => (/* reexport safe */ _el_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   html: () => (/* reexport safe */ _html_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _el_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./el.js */ \"../universal-page-module/lib/el.js\");\n/* harmony import */ var _html_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./html.js */ \"../universal-page-module/lib/html.js\");\n\n\n//# sourceMappingURL=index.js.map\n\n//# sourceURL=webpack://@common-module/markdown-editor/../universal-page-module/lib/index.js?");

/***/ }),

/***/ "./showcase/MarkdownEditorTest.ts":
/*!****************************************!*\
  !*** ./showcase/MarkdownEditorTest.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MarkdownEditorTest)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _src_markdown_editor_MarkdownEditor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../src/markdown-editor/MarkdownEditor.js */ \"./src/markdown-editor/MarkdownEditor.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _src_markdown_editor_MarkdownEditor_js__WEBPACK_IMPORTED_MODULE_1__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _src_markdown_editor_MarkdownEditor_js__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nclass MarkdownEditorTest extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.View {\n    constructor() {\n        super();\n        this.container = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".markdown-editor-test\", new _src_markdown_editor_MarkdownEditor_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]()).appendTo(_common_module_app__WEBPACK_IMPORTED_MODULE_0__.BodyNode);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/./showcase/MarkdownEditorTest.ts?");

/***/ }),

/***/ "./showcase/RichTextEditorTest.ts":
/*!****************************************!*\
  !*** ./showcase/RichTextEditorTest.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RichTextEditorTest)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _common_module_app_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @common-module/app-components */ \"../app-components/lib/index.js\");\n/* harmony import */ var _src_rich_text_editor_RichTextEditor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../src/rich-text-editor/RichTextEditor.js */ \"./src/rich-text-editor/RichTextEditor.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _common_module_app_components__WEBPACK_IMPORTED_MODULE_1__, _src_rich_text_editor_RichTextEditor_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _common_module_app_components__WEBPACK_IMPORTED_MODULE_1__, _src_rich_text_editor_RichTextEditor_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\nclass RichTextEditorTest extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.View {\n    richTextEditor;\n    constructor() {\n        super();\n        this.container = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".rich-text-editor-test\", this.richTextEditor = new _src_rich_text_editor_RichTextEditor_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"](), new _common_module_app_components__WEBPACK_IMPORTED_MODULE_1__.Button({\n            title: \"Get Content\",\n            onClick: () => {\n                console.log(this.richTextEditor.getContent());\n            },\n        })).appendTo(_common_module_app__WEBPACK_IMPORTED_MODULE_0__.BodyNode);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/./showcase/RichTextEditorTest.ts?");

/***/ }),

/***/ "./showcase/main.ts":
/*!**************************!*\
  !*** ./showcase/main.ts ***!
  \**************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _MarkdownEditorTest_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MarkdownEditorTest.js */ \"./showcase/MarkdownEditorTest.ts\");\n/* harmony import */ var _RichTextEditorTest_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./RichTextEditorTest.js */ \"./showcase/RichTextEditorTest.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _MarkdownEditorTest_js__WEBPACK_IMPORTED_MODULE_1__, _RichTextEditorTest_js__WEBPACK_IMPORTED_MODULE_2__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _MarkdownEditorTest_js__WEBPACK_IMPORTED_MODULE_1__, _RichTextEditorTest_js__WEBPACK_IMPORTED_MODULE_2__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__.Router\n    .add(\"/markdown-editor\", _MarkdownEditorTest_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n    .add(\"/rich-text-editor\", _RichTextEditorTest_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/./showcase/main.ts?");

/***/ }),

/***/ "./src/MarkdownEditorConfig.ts":
/*!*************************************!*\
  !*** ./src/MarkdownEditorConfig.ts ***!
  \*************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass DefaultBoldIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.bold\", \"B\");\n    }\n}\nclass DefaultItalicIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.italic\", \"I\");\n    }\n}\nclass DefaultStrikethroughIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.strikethrough\", \"S\");\n    }\n}\nclass DefaultHeadingIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.heading\", \"H\");\n    }\n}\nclass DefaultLinkIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.link\", \"🔗\");\n    }\n}\nclass DefaultBulletListIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.bullet-list\", \"•\");\n    }\n}\nclass DefaultNumberListIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.number-list\", \"1.\");\n    }\n}\nclass DefaultQuoteBlockIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.quote-block\", \"❝\");\n    }\n}\nclass DefaultCodeIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.code\", \"</>\");\n    }\n}\nclass DefaultCodeBlockIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.code-block\", \"```\");\n    }\n}\nclass DefaultTableIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.table\", \"📊\");\n    }\n}\nclass DefaultImageIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.image\", \"🖼️\");\n    }\n}\nclass DefaultYouTubeIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.youtube\", \"🎥\");\n    }\n}\nclass DefaultMoreIcon extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\"span.icon.more\", \"⋮\");\n    }\n}\nclass MarkdownEditorConfig {\n    BoldIcon = DefaultBoldIcon;\n    ItalicIcon = DefaultItalicIcon;\n    StrikethroughIcon = DefaultStrikethroughIcon;\n    HeadingIcon = DefaultHeadingIcon;\n    LinkIcon = DefaultLinkIcon;\n    BulletListIcon = DefaultBulletListIcon;\n    NumberListIcon = DefaultNumberListIcon;\n    QuoteBlockIcon = DefaultQuoteBlockIcon;\n    CodeIcon = DefaultCodeIcon;\n    CodeBlockIcon = DefaultCodeBlockIcon;\n    TableIcon = DefaultTableIcon;\n    ImageIcon = DefaultImageIcon;\n    YouTubeIcon = DefaultYouTubeIcon;\n    MoreIcon = DefaultMoreIcon;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new MarkdownEditorConfig());\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/./src/MarkdownEditorConfig.ts?");

/***/ }),

/***/ "./src/markdown-editor/MarkdownEditor.ts":
/*!***********************************************!*\
  !*** ./src/markdown-editor/MarkdownEditor.ts ***!
  \***********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MarkdownEditor)\n/* harmony export */ });\n/* harmony import */ var _StyledMarkdownArea_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StyledMarkdownArea.js */ \"./src/markdown-editor/StyledMarkdownArea.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_StyledMarkdownArea_js__WEBPACK_IMPORTED_MODULE_0__]);\n_StyledMarkdownArea_js__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass MarkdownEditor extends _StyledMarkdownArea_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super(\".markdown-editor\");\n        this.htmlElement.contentEditable = \"true\";\n        this.onDom(\"keydown\", (event) => this.onKeyDown(event));\n        this.onDom(\"paste\", () => setTimeout(() => this.updateStyles(), 0));\n    }\n    onKeyDown(event) {\n        if ((event.metaKey || event.ctrlKey) && event.key === \"b\") {\n            event.preventDefault();\n            this.toggleMarkdownStyle(\"**\");\n        }\n        else if ((event.metaKey || event.ctrlKey) && event.key === \"i\") {\n            event.preventDefault();\n            this.toggleMarkdownStyle(\"*\");\n        }\n        else if ((event.shiftKey && event.key === \"*\") ||\n            (event.key === \"Backspace\") ||\n            (event.key === \"Delete\")) {\n            setTimeout(() => this.updateStyles(), 0);\n        }\n    }\n    toggleMarkdownStyle(marker) {\n        const selection = window.getSelection();\n        if (!selection || selection.rangeCount === 0)\n            return;\n        const range = selection.getRangeAt(0);\n        const selectedText = range.toString();\n        if (!selectedText)\n            return;\n        let newText;\n        if (selectedText.startsWith(marker) && selectedText.endsWith(marker)) {\n            newText = selectedText.slice(marker.length, -marker.length);\n        }\n        else {\n            newText = `${marker}${selectedText}${marker}`;\n        }\n        range.deleteContents();\n        const textNode = document.createTextNode(newText);\n        range.insertNode(textNode);\n        selection.removeAllRanges();\n        const newRange = document.createRange();\n        newRange.selectNodeContents(textNode);\n        selection.addRange(newRange);\n        this.updateStyles();\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/./src/markdown-editor/MarkdownEditor.ts?");

/***/ }),

/***/ "./src/markdown-editor/StyledMarkdownArea.ts":
/*!***************************************************!*\
  !*** ./src/markdown-editor/StyledMarkdownArea.ts ***!
  \***************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ StyledMarkdownArea)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass StyledMarkdownArea extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor(tag) {\n        super(`${tag}.styled-markdown-area`);\n    }\n    getCaretOffset(element) {\n        const selection = window.getSelection();\n        if (!selection || selection.rangeCount === 0) {\n            return -1;\n        }\n        const range = selection.getRangeAt(0);\n        const preCaretRange = range.cloneRange();\n        preCaretRange.selectNodeContents(element);\n        preCaretRange.setEnd(range.endContainer, range.endOffset);\n        return preCaretRange.toString().length;\n    }\n    setCaretOffset(element, offset) {\n        if (offset < 0)\n            return;\n        const selection = window.getSelection();\n        if (!selection)\n            return;\n        const range = document.createRange();\n        range.selectNodeContents(element);\n        range.collapse(true);\n        let currentOffset = 0;\n        const nodeStack = [];\n        for (let i = element.childNodes.length - 1; i >= 0; i--) {\n            nodeStack.push(element.childNodes[i]);\n        }\n        while (nodeStack.length > 0) {\n            const node = nodeStack.pop();\n            if (node.nodeType === Node.TEXT_NODE) {\n                const textLength = node.textContent?.length ?? 0;\n                if (currentOffset + textLength >= offset) {\n                    range.setStart(node, offset - currentOffset);\n                    range.collapse(true);\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                    return;\n                }\n                currentOffset += textLength;\n            }\n            else {\n                for (let i = node.childNodes.length - 1; i >= 0; i--) {\n                    nodeStack.push(node.childNodes[i]);\n                }\n            }\n        }\n    }\n    parseMarkdownWithSpans(text) {\n        let i = 0;\n        let result = \"\";\n        const stack = [];\n        while (i < text.length) {\n            if (text[i] === \"*\") {\n                let j = i;\n                while (j < text.length && text[j] === \"*\") {\n                    j++;\n                }\n                let starCount = j - i;\n                let consumed = 0;\n                while (starCount >= 3) {\n                    const top = stack[stack.length - 1];\n                    if (top === \"strongem\") {\n                        stack.pop();\n                        result += `***</span>`;\n                    }\n                    else {\n                        stack.push(\"strongem\");\n                        result += `<span style=\"font-weight:bold; font-style:italic;\">***`;\n                    }\n                    starCount -= 3;\n                    consumed += 3;\n                }\n                while (starCount >= 2) {\n                    const top = stack[stack.length - 1];\n                    if (top === \"strong\") {\n                        stack.pop();\n                        result += `**</span>`;\n                    }\n                    else {\n                        stack.push(\"strong\");\n                        result += `<span style=\"font-weight:bold;\">**`;\n                    }\n                    starCount -= 2;\n                    consumed += 2;\n                }\n                while (starCount >= 1) {\n                    const top = stack[stack.length - 1];\n                    if (top === \"em\") {\n                        stack.pop();\n                        result += `*</span>`;\n                    }\n                    else {\n                        stack.push(\"em\");\n                        result += `<span style=\"font-style:italic;\">*`;\n                    }\n                    starCount -= 1;\n                    consumed += 1;\n                }\n                i += consumed;\n            }\n            else {\n                result += text[i];\n                i++;\n            }\n        }\n        while (stack.length > 0) {\n            const top = stack.pop();\n            if (top === \"strongem\") {\n                result += \"</span>\";\n            }\n            else if (top === \"strong\") {\n                result += \"</span>\";\n            }\n            else if (top === \"em\") {\n                result += \"</span>\";\n            }\n        }\n        return result;\n    }\n    updateStyles() {\n        const caretOffset = this.getCaretOffset(this.htmlElement);\n        const text = this.htmlElement.textContent ?? \"\";\n        const newHTML = this.parseMarkdownWithSpans(text);\n        this.htmlElement.innerHTML = newHTML;\n        this.setCaretOffset(this.htmlElement, caretOffset);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/./src/markdown-editor/StyledMarkdownArea.ts?");

/***/ }),

/***/ "./src/rich-text-editor/RichTextEditableArea.ts":
/*!******************************************************!*\
  !*** ./src/rich-text-editor/RichTextEditableArea.ts ***!
  \******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RichTextEditableArea)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__]);\n_common_module_app__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\nclass RichTextEditableArea extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    constructor() {\n        super(\".rich-text-editable-area.markdown-document\");\n        this.htmlElement.contentEditable = \"true\";\n        document.addEventListener(\"selectionchange\", this.handleSelectionChange);\n    }\n    getCurrentRange() {\n        const selection = window.getSelection();\n        return selection && selection.rangeCount > 0\n            ? selection.getRangeAt(0)\n            : undefined;\n    }\n    handleSelectionChange = () => {\n        const range = this.getCurrentRange();\n        if (range && this.htmlElement.contains(range.commonAncestorContainer)) {\n            this.emit(\"selectionChanged\", this.getCurrentTextStyle());\n        }\n    };\n    getCurrentTextStyle() {\n        const style = {\n            isBold: false,\n            isItalic: false,\n            isStrikethrough: false,\n            isHeading: false,\n            isLink: false,\n            isInBulletList: false,\n            isInNumberList: false,\n            isInQuoteBlock: false,\n            isInCode: false,\n            isInCodeBlock: false,\n        };\n        const range = this.getCurrentRange();\n        if (!range)\n            return style;\n        let currentNode = range.commonAncestorContainer;\n        while (currentNode && currentNode !== this.htmlElement) {\n            const nodeName = currentNode.nodeName.toLowerCase();\n            if (nodeName === \"b\") {\n                style.isBold = true;\n            }\n            else if (nodeName === \"i\") {\n                style.isItalic = true;\n            }\n            else if (nodeName === \"s\") {\n                style.isStrikethrough = true;\n            }\n            else if (nodeName === \"h3\") {\n                style.isHeading = true;\n            }\n            else if (nodeName === \"a\") {\n                style.isLink = true;\n            }\n            else if (nodeName === \"ul\") {\n                style.isInBulletList = true;\n            }\n            else if (nodeName === \"ol\") {\n                style.isInNumberList = true;\n            }\n            else if (nodeName === \"blockquote\") {\n                style.isInQuoteBlock = true;\n            }\n            else if (nodeName === \"code\") {\n                if (currentNode.parentElement?.nodeName.toLowerCase() === \"pre\") {\n                    style.isInCodeBlock = true;\n                }\n                else {\n                    style.isInCode = true;\n                }\n            }\n            currentNode = currentNode.parentNode;\n        }\n        return style;\n    }\n    toggleBlock(tag) {\n        const selection = window.getSelection();\n        if (!selection)\n            return;\n        const range = this.getCurrentRange();\n        if (range && this.htmlElement.contains(range.commonAncestorContainer)) {\n            let existingElement;\n            let currentNode = range.commonAncestorContainer;\n            while (currentNode && currentNode !== this.htmlElement) {\n                if (currentNode.nodeName.toLowerCase() === tag) {\n                    existingElement = currentNode;\n                    break;\n                }\n                currentNode = currentNode.parentNode;\n            }\n            if (existingElement) {\n                const parent = existingElement.parentElement;\n                if (!parent)\n                    return;\n                let firstNewElement;\n                let lastNewElement;\n                while (existingElement.firstChild) {\n                    const newElement = parent.insertBefore(existingElement.firstChild, existingElement);\n                    if (!firstNewElement)\n                        firstNewElement = newElement;\n                    lastNewElement = newElement;\n                }\n                parent.removeChild(existingElement);\n                if (firstNewElement && lastNewElement) {\n                    selection.removeAllRanges();\n                    const newRange = document.createRange();\n                    newRange.setStartBefore(firstNewElement);\n                    newRange.setEndAfter(lastNewElement);\n                    selection.addRange(newRange);\n                }\n            }\n            else {\n                const newElement = document.createElement(tag);\n                range.surroundContents(newElement);\n                selection.removeAllRanges();\n                const newRange = document.createRange();\n                newRange.selectNodeContents(newElement);\n                selection.addRange(newRange);\n            }\n        }\n    }\n    toggleBold() {\n        this.toggleBlock(\"b\");\n    }\n    toggleItalic() {\n        this.toggleBlock(\"i\");\n    }\n    toggleStrikethrough() {\n        this.toggleBlock(\"s\");\n    }\n    toggleHeading() {\n        this.toggleBlock(\"h3\");\n    }\n    editLink() {\n    }\n    toggleBulletList() {\n    }\n    toggleNumberList() {\n    }\n    toggleQuoteBlock() {\n        this.toggleBlock(\"blockquote\");\n    }\n    toggleCode() {\n        this.toggleBlock(\"code\");\n    }\n    toggleCodeBlock() {\n        const currentTextStyle = this.getCurrentTextStyle();\n        if (currentTextStyle.isInCodeBlock) {\n            this.toggleBlock(\"code\");\n            this.toggleBlock(\"pre\");\n        }\n        else {\n            this.toggleBlock(\"pre\");\n            this.toggleBlock(\"code\");\n        }\n    }\n    addTable() {\n    }\n    addImage() {\n    }\n    addYouTubeVideo() {\n    }\n    remove() {\n        document.removeEventListener(\"selectionchange\", this.handleSelectionChange);\n        super.remove();\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/./src/rich-text-editor/RichTextEditableArea.ts?");

/***/ }),

/***/ "./src/rich-text-editor/RichTextEditor.ts":
/*!************************************************!*\
  !*** ./src/rich-text-editor/RichTextEditor.ts ***!
  \************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RichTextEditor)\n/* harmony export */ });\n/* harmony import */ var _common_module_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common-module/app */ \"../app-module/lib/index.js\");\n/* harmony import */ var _common_module_app_components__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @common-module/app-components */ \"../app-components/lib/index.js\");\n/* harmony import */ var _common_module_markdown__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @common-module/markdown */ \"../markdown-module/lib/index.js\");\n/* harmony import */ var _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../MarkdownEditorConfig.js */ \"./src/MarkdownEditorConfig.ts\");\n/* harmony import */ var _RichTextEditableArea_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./RichTextEditableArea.js */ \"./src/rich-text-editor/RichTextEditableArea.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _common_module_app_components__WEBPACK_IMPORTED_MODULE_1__, _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__, _RichTextEditableArea_js__WEBPACK_IMPORTED_MODULE_4__]);\n([_common_module_app__WEBPACK_IMPORTED_MODULE_0__, _common_module_app_components__WEBPACK_IMPORTED_MODULE_1__, _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__, _RichTextEditableArea_js__WEBPACK_IMPORTED_MODULE_4__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\n\n\n\nclass RichTextEditor extends _common_module_app__WEBPACK_IMPORTED_MODULE_0__.DomNode {\n    gap;\n    buttonWidth;\n    maxVisibleButtons;\n    toolbarButtons = {};\n    buttonContainer;\n    moreButton;\n    editableArea;\n    constructor() {\n        super(\".rich-text-editor\");\n        this.append((0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".toolbar\", this.buttonContainer = (0,_common_module_app__WEBPACK_IMPORTED_MODULE_0__.el)(\".button-container\"), this.moreButton = new _common_module_app_components__WEBPACK_IMPORTED_MODULE_1__.Button(\".more-button\", {\n            type: _common_module_app_components__WEBPACK_IMPORTED_MODULE_1__.ButtonType.Icon,\n            icon: new _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].MoreIcon(),\n            onClick: (_, event) => {\n                event.preventDefault();\n                event.stopPropagation();\n                this.openMoreMenu(event.clientX, event.clientY);\n            },\n        })), this.editableArea = new _RichTextEditableArea_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]());\n        this.on(\"visible\", () => this.updateToolbar());\n        this.onWindow(\"resize\", () => this.updateToolbar());\n        this.editableArea.on(\"selectionChanged\", (textStyle) => {\n            const tbs = this.toolbarButtons;\n            if (textStyle.isBold)\n                tbs.bold.addClass(\"active\");\n            else\n                tbs.bold.removeClass(\"active\");\n            if (textStyle.isItalic)\n                tbs.italic.addClass(\"active\");\n            else\n                tbs.italic.removeClass(\"active\");\n            if (textStyle.isStrikethrough)\n                tbs.strikethrough.addClass(\"active\");\n            else\n                tbs.strikethrough.removeClass(\"active\");\n            if (textStyle.isHeading)\n                tbs.heading.addClass(\"active\");\n            else\n                tbs.heading.removeClass(\"active\");\n            if (textStyle.isLink)\n                tbs.link.addClass(\"active\");\n            else\n                tbs.link.removeClass(\"active\");\n            if (textStyle.isInBulletList)\n                tbs[\"bullet-list\"].addClass(\"active\");\n            else\n                tbs[\"bullet-list\"].removeClass(\"active\");\n            if (textStyle.isInNumberList)\n                tbs[\"number-list\"].addClass(\"active\");\n            else\n                tbs[\"number-list\"].removeClass(\"active\");\n            if (textStyle.isInQuoteBlock)\n                tbs[\"quote-block\"].addClass(\"active\");\n            else\n                tbs[\"quote-block\"].removeClass(\"active\");\n            if (textStyle.isInCode)\n                tbs.code.addClass(\"active\");\n            else\n                tbs.code.removeClass(\"active\");\n            if (textStyle.isInCodeBlock)\n                tbs[\"code-block\"].addClass(\"active\");\n            else\n                tbs[\"code-block\"].removeClass(\"active\");\n        });\n    }\n    createToolbarButton(ToolbarButton, type, icon, onClick) {\n        const button = new ToolbarButton({ type: _common_module_app_components__WEBPACK_IMPORTED_MODULE_1__.ButtonType.Icon, icon, onClick });\n        this.toolbarButtons[type] = button;\n        button.on(\"remove\", () => delete this.toolbarButtons[type]);\n        return button;\n    }\n    createToolbarButtonByIndex(ToolbarButton, buttonIndex) {\n        if (buttonIndex === 0) {\n            return this.createToolbarButton(ToolbarButton, \"bold\", new _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].BoldIcon(), () => this.editableArea.toggleBold());\n        }\n        else if (buttonIndex === 1) {\n            return this.createToolbarButton(ToolbarButton, \"italic\", new _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ItalicIcon(), () => this.editableArea.toggleItalic());\n        }\n        else if (buttonIndex === 2) {\n            return this.createToolbarButton(ToolbarButton, \"strikethrough\", new _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].StrikethroughIcon(), () => this.editableArea.toggleStrikethrough());\n        }\n        else if (buttonIndex === 3) {\n            return this.createToolbarButton(ToolbarButton, \"heading\", new _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].HeadingIcon(), () => this.editableArea.toggleHeading());\n        }\n        else if (buttonIndex === 4) {\n            return this.createToolbarButton(ToolbarButton, \"link\", new _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].LinkIcon(), () => this.editableArea.editLink());\n        }\n        else if (buttonIndex === 5) {\n            return this.createToolbarButton(ToolbarButton, \"bullet-list\", new _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].BulletListIcon(), () => this.editableArea.toggleBulletList());\n        }\n        else if (buttonIndex === 6) {\n            return this.createToolbarButton(ToolbarButton, \"number-list\", new _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].NumberListIcon(), () => this.editableArea.toggleNumberList());\n        }\n        else if (buttonIndex === 7) {\n            return this.createToolbarButton(ToolbarButton, \"quote-block\", new _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].QuoteBlockIcon(), () => this.editableArea.toggleQuoteBlock());\n        }\n        else if (buttonIndex === 8) {\n            return this.createToolbarButton(ToolbarButton, \"code\", new _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].CodeIcon(), () => this.editableArea.toggleCode());\n        }\n        else if (buttonIndex === 9) {\n            return this.createToolbarButton(ToolbarButton, \"code-block\", new _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].CodeBlockIcon(), () => this.editableArea.toggleCodeBlock());\n        }\n        else if (buttonIndex === 10) {\n            return this.createToolbarButton(ToolbarButton, \"table\", new _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].TableIcon(), () => this.editableArea.addTable());\n        }\n        else if (buttonIndex === 11) {\n            return this.createToolbarButton(ToolbarButton, \"image\", new _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].ImageIcon(), () => this.editableArea.addImage());\n        }\n        else if (buttonIndex === 12) {\n            return this.createToolbarButton(ToolbarButton, \"youtube\", new _MarkdownEditorConfig_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"].YouTubeIcon(), () => this.editableArea.addYouTubeVideo());\n        }\n    }\n    updateToolbar() {\n        if (this.gap === undefined) {\n            this.gap = parseInt(window.getComputedStyle(this.buttonContainer.htmlElement).columnGap);\n        }\n        if (this.buttonWidth === undefined) {\n            this.buttonWidth = this.moreButton.calculateRect().width;\n        }\n        this.moreButton.addClass(\"hidden\");\n        const buttonContainerWidth = this.buttonContainer.calculateRect().width;\n        this.maxVisibleButtons = Math.floor(buttonContainerWidth / (this.buttonWidth + this.gap));\n        if (this.maxVisibleButtons < 13) {\n            this.maxVisibleButtons = Math.floor((buttonContainerWidth - this.buttonWidth) /\n                (this.buttonWidth + this.gap));\n        }\n        this.buttonContainer.clear();\n        for (let i = 0; i < this.maxVisibleButtons; i += 1) {\n            this.buttonContainer.append(this.createToolbarButtonByIndex(_common_module_app_components__WEBPACK_IMPORTED_MODULE_1__.Button, i));\n        }\n        if (this.maxVisibleButtons < 13) {\n            this.moreButton.removeClass(\"hidden\");\n        }\n        else {\n            this.moreButton.addClass(\"hidden\");\n        }\n    }\n    openMoreMenu(left, top) {\n        const menu = new _common_module_app_components__WEBPACK_IMPORTED_MODULE_1__.DropdownMenu(\".rich-text-editor-more-menu\", { left, top });\n        const group = new _common_module_app_components__WEBPACK_IMPORTED_MODULE_1__.DropdownMenuGroup();\n        for (let i = this.maxVisibleButtons; i < 13; i += 1) {\n            const button = this.createToolbarButtonByIndex(_common_module_app_components__WEBPACK_IMPORTED_MODULE_1__.DropdownMenuItem, i);\n            button?.onDom(\"click\", () => menu.remove());\n            group.append(button);\n        }\n        menu.appendToMain(group);\n    }\n    getContent() {\n        return _common_module_markdown__WEBPACK_IMPORTED_MODULE_2__.MarkdownConverter.convertHtmlToMarkdown(this.editableArea.htmlElement.innerHTML);\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });\n\n//# sourceURL=webpack://@common-module/markdown-editor/./src/rich-text-editor/RichTextEditor.ts?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = __webpack_modules__;
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/async module */
/******/ 	(() => {
/******/ 		var webpackQueues = typeof Symbol === "function" ? Symbol("webpack queues") : "__webpack_queues__";
/******/ 		var webpackExports = typeof Symbol === "function" ? Symbol("webpack exports") : "__webpack_exports__";
/******/ 		var webpackError = typeof Symbol === "function" ? Symbol("webpack error") : "__webpack_error__";
/******/ 		var resolveQueue = (queue) => {
/******/ 			if(queue && queue.d < 1) {
/******/ 				queue.d = 1;
/******/ 				queue.forEach((fn) => (fn.r--));
/******/ 				queue.forEach((fn) => (fn.r-- ? fn.r++ : fn()));
/******/ 			}
/******/ 		}
/******/ 		var wrapDeps = (deps) => (deps.map((dep) => {
/******/ 			if(dep !== null && typeof dep === "object") {
/******/ 				if(dep[webpackQueues]) return dep;
/******/ 				if(dep.then) {
/******/ 					var queue = [];
/******/ 					queue.d = 0;
/******/ 					dep.then((r) => {
/******/ 						obj[webpackExports] = r;
/******/ 						resolveQueue(queue);
/******/ 					}, (e) => {
/******/ 						obj[webpackError] = e;
/******/ 						resolveQueue(queue);
/******/ 					});
/******/ 					var obj = {};
/******/ 					obj[webpackQueues] = (fn) => (fn(queue));
/******/ 					return obj;
/******/ 				}
/******/ 			}
/******/ 			var ret = {};
/******/ 			ret[webpackQueues] = x => {};
/******/ 			ret[webpackExports] = dep;
/******/ 			return ret;
/******/ 		}));
/******/ 		__webpack_require__.a = (module, body, hasAwait) => {
/******/ 			var queue;
/******/ 			hasAwait && ((queue = []).d = -1);
/******/ 			var depQueues = new Set();
/******/ 			var exports = module.exports;
/******/ 			var currentDeps;
/******/ 			var outerResolve;
/******/ 			var reject;
/******/ 			var promise = new Promise((resolve, rej) => {
/******/ 				reject = rej;
/******/ 				outerResolve = resolve;
/******/ 			});
/******/ 			promise[webpackExports] = exports;
/******/ 			promise[webpackQueues] = (fn) => (queue && fn(queue), depQueues.forEach(fn), promise["catch"](x => {}));
/******/ 			module.exports = promise;
/******/ 			body((deps) => {
/******/ 				currentDeps = wrapDeps(deps);
/******/ 				var fn;
/******/ 				var getResult = () => (currentDeps.map((d) => {
/******/ 					if(d[webpackError]) throw d[webpackError];
/******/ 					return d[webpackExports];
/******/ 				}))
/******/ 				var promise = new Promise((resolve) => {
/******/ 					fn = () => (resolve(getResult));
/******/ 					fn.r = 0;
/******/ 					var fnQueue = (q) => (q !== queue && !depQueues.has(q) && (depQueues.add(q), q && !q.d && (fn.r++, q.push(fn))));
/******/ 					currentDeps.map((dep) => (dep[webpackQueues](fnQueue)));
/******/ 				});
/******/ 				return fn.r ? promise : getResult();
/******/ 			}, (err) => ((err ? reject(promise[webpackError] = err) : outerResolve(exports)), resolveQueue(queue)));
/******/ 			queue && queue.d < 0 && (queue.d = 0);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/ensure chunk */
/******/ 	(() => {
/******/ 		__webpack_require__.f = {};
/******/ 		// This file contains only the entry chunk.
/******/ 		// The chunk loading function for additional chunks
/******/ 		__webpack_require__.e = (chunkId) => {
/******/ 			return Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {
/******/ 				__webpack_require__.f[key](chunkId, promises);
/******/ 				return promises;
/******/ 			}, []));
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get javascript chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.u = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return "" + chunkId + ".js";
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/get mini-css chunk filename */
/******/ 	(() => {
/******/ 		// This function allow to reference async chunks
/******/ 		__webpack_require__.miniCssF = (chunkId) => {
/******/ 			// return url for filenames based on template
/******/ 			return undefined;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/load script */
/******/ 	(() => {
/******/ 		var inProgress = {};
/******/ 		var dataWebpackPrefix = "@common-module/markdown-editor:";
/******/ 		// loadScript function to load a script via script tag
/******/ 		__webpack_require__.l = (url, done, key, chunkId) => {
/******/ 			if(inProgress[url]) { inProgress[url].push(done); return; }
/******/ 			var script, needAttach;
/******/ 			if(key !== undefined) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				for(var i = 0; i < scripts.length; i++) {
/******/ 					var s = scripts[i];
/******/ 					if(s.getAttribute("src") == url || s.getAttribute("data-webpack") == dataWebpackPrefix + key) { script = s; break; }
/******/ 				}
/******/ 			}
/******/ 			if(!script) {
/******/ 				needAttach = true;
/******/ 				script = document.createElement('script');
/******/ 		
/******/ 				script.charset = 'utf-8';
/******/ 				script.timeout = 120;
/******/ 				if (__webpack_require__.nc) {
/******/ 					script.setAttribute("nonce", __webpack_require__.nc);
/******/ 				}
/******/ 				script.setAttribute("data-webpack", dataWebpackPrefix + key);
/******/ 		
/******/ 				script.src = url;
/******/ 			}
/******/ 			inProgress[url] = [done];
/******/ 			var onScriptComplete = (prev, event) => {
/******/ 				// avoid mem leaks in IE.
/******/ 				script.onerror = script.onload = null;
/******/ 				clearTimeout(timeout);
/******/ 				var doneFns = inProgress[url];
/******/ 				delete inProgress[url];
/******/ 				script.parentNode && script.parentNode.removeChild(script);
/******/ 				doneFns && doneFns.forEach((fn) => (fn(event)));
/******/ 				if(prev) return prev(event);
/******/ 			}
/******/ 			var timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);
/******/ 			script.onerror = onScriptComplete.bind(null, script.onerror);
/******/ 			script.onload = onScriptComplete.bind(null, script.onload);
/******/ 			needAttach && document.head.appendChild(script);
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')
/******/ 				scriptUrl = document.currentScript.src;
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) {
/******/ 					var i = scripts.length - 1;
/******/ 					while (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;
/******/ 				}
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/^blob:/, "").replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/jsonp chunk loading */
/******/ 	(() => {
/******/ 		// no baseURI
/******/ 		
/******/ 		// object to store loaded and loading chunks
/******/ 		// undefined = chunk not loaded, null = chunk preloaded/prefetched
/******/ 		// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded
/******/ 		var installedChunks = {
/******/ 			"bundle": 0
/******/ 		};
/******/ 		
/******/ 		__webpack_require__.f.j = (chunkId, promises) => {
/******/ 				// JSONP chunk loading for javascript
/******/ 				var installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;
/******/ 				if(installedChunkData !== 0) { // 0 means "already installed".
/******/ 		
/******/ 					// a Promise means "currently loading".
/******/ 					if(installedChunkData) {
/******/ 						promises.push(installedChunkData[2]);
/******/ 					} else {
/******/ 						if(true) { // all chunks have JS
/******/ 							// setup Promise in chunk cache
/******/ 							var promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));
/******/ 							promises.push(installedChunkData[2] = promise);
/******/ 		
/******/ 							// start chunk loading
/******/ 							var url = __webpack_require__.p + __webpack_require__.u(chunkId);
/******/ 							// create error before stack unwound to get useful stacktrace later
/******/ 							var error = new Error();
/******/ 							var loadingEnded = (event) => {
/******/ 								if(__webpack_require__.o(installedChunks, chunkId)) {
/******/ 									installedChunkData = installedChunks[chunkId];
/******/ 									if(installedChunkData !== 0) installedChunks[chunkId] = undefined;
/******/ 									if(installedChunkData) {
/******/ 										var errorType = event && (event.type === 'load' ? 'missing' : event.type);
/******/ 										var realSrc = event && event.target && event.target.src;
/******/ 										error.message = 'Loading chunk ' + chunkId + ' failed.\n(' + errorType + ': ' + realSrc + ')';
/******/ 										error.name = 'ChunkLoadError';
/******/ 										error.type = errorType;
/******/ 										error.request = realSrc;
/******/ 										installedChunkData[1](error);
/******/ 									}
/******/ 								}
/******/ 							};
/******/ 							__webpack_require__.l(url, loadingEnded, "chunk-" + chunkId, chunkId);
/******/ 						}
/******/ 					}
/******/ 				}
/******/ 		};
/******/ 		
/******/ 		// no prefetching
/******/ 		
/******/ 		// no preloaded
/******/ 		
/******/ 		// no HMR
/******/ 		
/******/ 		// no HMR manifest
/******/ 		
/******/ 		// no on chunks loaded
/******/ 		
/******/ 		// install a JSONP callback for chunk loading
/******/ 		var webpackJsonpCallback = (parentChunkLoadingFunction, data) => {
/******/ 			var [chunkIds, moreModules, runtime] = data;
/******/ 			// add "moreModules" to the modules object,
/******/ 			// then flag all "chunkIds" as loaded and fire callback
/******/ 			var moduleId, chunkId, i = 0;
/******/ 			if(chunkIds.some((id) => (installedChunks[id] !== 0))) {
/******/ 				for(moduleId in moreModules) {
/******/ 					if(__webpack_require__.o(moreModules, moduleId)) {
/******/ 						__webpack_require__.m[moduleId] = moreModules[moduleId];
/******/ 					}
/******/ 				}
/******/ 				if(runtime) var result = runtime(__webpack_require__);
/******/ 			}
/******/ 			if(parentChunkLoadingFunction) parentChunkLoadingFunction(data);
/******/ 			for(;i < chunkIds.length; i++) {
/******/ 				chunkId = chunkIds[i];
/******/ 				if(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {
/******/ 					installedChunks[chunkId][0]();
/******/ 				}
/******/ 				installedChunks[chunkId] = 0;
/******/ 			}
/******/ 		
/******/ 		}
/******/ 		
/******/ 		var chunkLoadingGlobal = self["webpackChunk_common_module_markdown_editor"] = self["webpackChunk_common_module_markdown_editor"] || [];
/******/ 		chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));
/******/ 		chunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./showcase/main.ts");
/******/ 	
/******/ })()
;